{
	"id": "1451c4962d81f78fd5099752bf47c41e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/security/zkSnarks/ProofGeneration.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\";\n\ninterface IProofVerifier {\n    function verifyProof(\n        bytes calldata proof,\n        uint256[] calldata inputs\n    ) external view returns (bool);\n}\n\n/**\n * @title ProofGeneration\n * @dev This contract is responsible for generating zk-SNARKs proofs for transactions and data validation.\n */\ncontract ProofGeneration is AccessControl, EIP712 {\n    using Math for uint256;\n    using Strings for string;\n\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    bytes32 public constant VERIFIER_ROLE = keccak256(\"VERIFIER_ROLE\");\n\n    IProofVerifier public proofVerifier;\n\n    event ProofGenerated(address indexed user, string proofId);\n\n    constructor(string memory name, string memory version, address _proofVerifier) EIP712(name, version) {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        proofVerifier = IProofVerifier(_proofVerifier);\n    }\n\n    /**\n     * @dev Generate zk-SNARK proof for a transaction or data.\n     * @param proof The zk-SNARK proof.\n     * @param inputs The inputs used for the proof.\n     * @param proofId Unique identifier for the proof.\n     */\n    function generateProof(bytes calldata proof, uint256[] calldata inputs, string calldata proofId) external onlyRole(VERIFIER_ROLE) {\n        require(proofVerifier.verifyProof(proof, inputs), \"ProofGeneration: Invalid proof\");\n\n        emit ProofGenerated(msg.sender, proofId);\n    }\n\n    /**\n     * @dev Set a new proof verifier contract address.\n     * @param _proofVerifier The address of the new proof verifier contract.\n     */\n    function setProofVerifier(address _proofVerifier) external onlyRole(ADMIN_ROLE) {\n        proofVerifier = IProofVerifier(_proofVerifier);\n    }\n\n    /**\n     * @dev Grant the verifier role to an account.\n     * @param account The account to grant the verifier role to.\n     */\n    function grantVerifierRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        grantRole(VERIFIER_ROLE, account);\n    }\n\n    /**\n     * @dev Revoke the verifier role from an account.\n     * @param account The account to revoke the verifier role from.\n     */\n    function revokeVerifierRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        revokeRole(VERIFIER_ROLE, account);\n    }\n\n    /**\n     * @dev Check if an account has the verifier role.\n     * @param account The account to check.\n     * @return True if the account has the verifier role, false otherwise.\n     */\n    function hasVerifierRole(address account) external view returns (bool) {\n        return hasRole(VERIFIER_ROLE, account);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/SignatureChecker.sol)\n\npragma solidity ^0.8.20;\n\nimport {ECDSA} from \"./ECDSA.sol\";\nimport {IERC1271} from \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n * signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n * Argent and Safe Wallet (previously Gnosis Safe).\n */\nlibrary SignatureChecker {\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n     * signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\n        (address recovered, ECDSA.RecoverError error, ) = ECDSA.tryRecover(hash, signature);\n        return\n            (error == ECDSA.RecoverError.NoError && recovered == signer) ||\n            isValidERC1271SignatureNow(signer, hash, signature);\n    }\n\n    /**\n     * @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n     * against the signer smart contract using ERC1271.\n     *\n     * NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n     * change through time. It could return true at block N and false at block N+1 (or the opposite).\n     */\n    function isValidERC1271SignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) internal view returns (bool) {\n        (bool success, bytes memory result) = signer.staticcall(\n            abi.encodeCall(IERC1271.isValidSignature, (hash, signature))\n        );\n        return (success &&\n            result.length >= 32 &&\n            abi.decode(result, (bytes32)) == bytes32(IERC1271.isValidSignature.selector));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1271.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC1271 standard signature validation method for\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n */\ninterface IERC1271 {\n    /**\n     * @dev Should return whether the signature provided is valid for the provided data\n     * @param hash      Hash of the data to be signed\n     * @param signature Signature byte array associated with _data\n     */\n    function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"IERC1271": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].",
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes32,bytes)": {
								"details": "Should return whether the signature provided is valid for the provided data",
								"params": {
									"hash": "Hash of the data to be signed",
									"signature": "Signature byte array associated with _data"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isValidSignature(bytes32,bytes)": "1626ba7e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x85a45f3f10014a0f8be41157a32b6a5f905753ea64a4b64e29fc12b7deeecf39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c74009ce36136b36c77c23935b8e4a7b4f253be2da2be4fb4a916b1ce43743\",\"dweb:/ipfs/QmcH36v3iN7SJJuF73AunLR2LtNxhVJ1wm63ph4dPZ4pcL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1255:4308  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122092e7974dc7ef4ad877420d80b069519c824c66460f2f39ae01e72c0c58b540e264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122092e7974dc7ef4ad877420d80b069519c824c66460f2f39ae01e72c0c58b540e264736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xE7 SWAP8 0x4D 0xC7 0xEF BLOBBASEFEE 0xD8 PUSH24 0x420D80B069519C824C66460F2F39AE01E72C0C58B540E264 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1255:3053:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122092e7974dc7ef4ad877420d80b069519c824c66460f2f39ae01e72c0c58b540e264736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xE7 SWAP8 0x4D 0xC7 0xEF BLOBBASEFEE 0xD8 PUSH24 0x420D80B069519C824C66460F2F39AE01E72C0C58B540E264 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1255:3053:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 4308,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122092e7974dc7ef4ad877420d80b069519c824c66460f2f39ae01e72c0c58b540e264736f6c634300081a0033",
									".code": [
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 4308,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/security/zkSnarks/ProofGeneration.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xDE DUP2 XOR SLOAD JUMPI 0xC7 0xB3 SHL PUSH23 0x6A5D9E994BEC595239B32A0552536F64F0A64F1E90B164 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1245:2685:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xDE DUP2 XOR SLOAD JUMPI 0xC7 0xB3 SHL PUSH23 0x6A5D9E994BEC595239B32A0552536F64F0A64F1E90B164 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1245:2685:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/security/zkSnarks/ProofGeneration.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/security/zkSnarks/ProofGeneration.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c816862926443e2612c0bd23884ab40b8b471df536f68ceaee9d6805b0df4b6364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c816862926443e2612c0bd23884ab40b8b471df536f68ceaee9d6805b0df4b6364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 AND DUP7 0x29 0x26 PREVRANDAO RETURNDATACOPY 0x26 SLT 0xC0 0xBD 0x23 DUP9 BLOBBASEFEE 0xB4 SIGNEXTEND DUP12 SELFBALANCE SAR CREATE2 CALLDATASIZE 0xF6 DUP13 0xEA 0xEE SWAP14 PUSH9 0x5B0DF4B6364736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "344:7386:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c816862926443e2612c0bd23884ab40b8b471df536f68ceaee9d6805b0df4b6364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 AND DUP7 0x29 0x26 PREVRANDAO RETURNDATACOPY 0x26 SLT 0xC0 0xBD 0x23 DUP9 BLOBBASEFEE 0xB4 SIGNEXTEND DUP12 SELFBALANCE SAR CREATE2 CALLDATASIZE 0xF6 DUP13 0xEA 0xEE SWAP14 PUSH9 0x5B0DF4B6364736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "344:7386:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c816862926443e2612c0bd23884ab40b8b471df536f68ceaee9d6805b0df4b6364736f6c634300081a0033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/security/zkSnarks/ProofGeneration.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1414,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1416,
								"contract": "@openzeppelin/contracts/utils/cryptography/EIP712.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":521:3756  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220403defb6070fbf45c4c59faddcdd9768cf85ba2973f43c2ee654e8eac540394064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220403defb6070fbf45c4c59faddcdd9768cf85ba2973f43c2ee654e8eac540394064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH RETURNDATASIZE 0xEF 0xB6 SMOD 0xF 0xBF GASLIMIT 0xC4 0xC5 SWAP16 0xAD 0xDC 0xDD SWAP8 PUSH9 0xCF85BA2973F43C2EE6 SLOAD 0xE8 0xEA 0xC5 BLOCKHASH CODECOPY BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "521:3235:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220403defb6070fbf45c4c59faddcdd9768cf85ba2973f43c2ee654e8eac540394064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH RETURNDATASIZE 0xEF 0xB6 SMOD 0xF 0xBF GASLIMIT 0xC4 0xC5 SWAP16 0xAD 0xDC 0xDD SWAP8 PUSH9 0xCF85BA2973F43C2EE6 SLOAD 0xE8 0xEA 0xC5 BLOCKHASH CODECOPY BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "521:3235:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 521,
									"end": 3756,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220403defb6070fbf45c4c59faddcdd9768cf85ba2973f43c2ee654e8eac540394064736f6c634300081a0033",
									".code": [
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 521,
											"end": 3756,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/security/zkSnarks/ProofGeneration.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
				"SignatureChecker": {
					"abi": [],
					"devdoc": {
						"details": "Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Safe Wallet (previously Gnosis Safe).",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":531:2273  library SignatureChecker {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":531:2273  library SignatureChecker {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f31fce0f2b0747a47c5070cbda24b23c3992497306417b75cb5b40d8b44824e364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f31fce0f2b0747a47c5070cbda24b23c3992497306417b75cb5b40d8b44824e364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0x1F 0xCE 0xF 0x2B SMOD SELFBALANCE LOG4 PUSH29 0x5070CBDA24B23C3992497306417B75CB5B40D8B44824E364736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "531:1742:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f31fce0f2b0747a47c5070cbda24b23c3992497306417b75cb5b40d8b44824e364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0x1F 0xCE 0xF 0x2B SMOD SELFBALANCE LOG4 PUSH29 0x5070CBDA24B23C3992497306417B75CB5B40D8B44824E364736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "531:1742:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"isValidERC1271SignatureNow(address,bytes32,bytes memory)": "infinite",
								"isValidSignatureNow(address,bytes32,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 531,
									"end": 2273,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f31fce0f2b0747a47c5070cbda24b23c3992497306417b75cb5b40d8b44824e364736f6c634300081a0033",
									".code": [
										{
											"begin": 531,
											"end": 2273,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 531,
											"end": 2273,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/security/zkSnarks/ProofGeneration.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like Argent and Safe Wallet (previously Gnosis Safe).\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x85a45f3f10014a0f8be41157a32b6a5f905753ea64a4b64e29fc12b7deeecf39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c74009ce36136b36c77c23935b8e4a7b4f253be2da2be4fb4a916b1ce43743\",\"dweb:/ipfs/QmcH36v3iN7SJJuF73AunLR2LtNxhVJ1wm63ph4dPZ4pcL\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x6b11eb41a228cca35d4b662b4df69fcd75192851365102690f57b2ac01e83fe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab006a2983ed350d2af21ddcdd835dcae3b8340086cc4d088460da5abd041f69\",\"dweb:/ipfs/QmbEacDhkJZiGrgzLjB4pNtE8Z1uudjDw1DvcDUTVQFsLG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/security/zkSnarks/ProofGeneration.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/security/zkSnarks/ProofGeneration.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/security/zkSnarks/ProofGeneration.sol": {
				"IProofVerifier": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "proof",
									"type": "bytes"
								},
								{
									"internalType": "uint256[]",
									"name": "inputs",
									"type": "uint256[]"
								}
							],
							"name": "verifyProof",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"verifyProof(bytes,uint256[])": "1e8e1e13"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"inputs\",\"type\":\"uint256[]\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/security/zkSnarks/ProofGeneration.sol\":\"IProofVerifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x85a45f3f10014a0f8be41157a32b6a5f905753ea64a4b64e29fc12b7deeecf39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c74009ce36136b36c77c23935b8e4a7b4f253be2da2be4fb4a916b1ce43743\",\"dweb:/ipfs/QmcH36v3iN7SJJuF73AunLR2LtNxhVJ1wm63ph4dPZ4pcL\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x6b11eb41a228cca35d4b662b4df69fcd75192851365102690f57b2ac01e83fe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab006a2983ed350d2af21ddcdd835dcae3b8340086cc4d088460da5abd041f69\",\"dweb:/ipfs/QmbEacDhkJZiGrgzLjB4pNtE8Z1uudjDw1DvcDUTVQFsLG\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/security/zkSnarks/ProofGeneration.sol\":{\"keccak256\":\"0x6f7db362cd0beeb1311acd8060f4122dba729de4dca675436514aefa8515052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7702ffc57d68f7e81d663cf8b46299ed5cd5fbd1d40d262ddffdad51e2975a38\",\"dweb:/ipfs/QmPHSSXz25u1FYgNEnTCKCRMbjCzjoAXQ1CeKQTXo95JWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ProofGeneration": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_proofVerifier",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "proofId",
									"type": "string"
								}
							],
							"name": "ProofGenerated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VERIFIER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "proof",
									"type": "bytes"
								},
								{
									"internalType": "uint256[]",
									"name": "inputs",
									"type": "uint256[]"
								},
								{
									"internalType": "string",
									"name": "proofId",
									"type": "string"
								}
							],
							"name": "generateProof",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantVerifierRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasVerifierRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proofVerifier",
							"outputs": [
								{
									"internalType": "contract IProofVerifier",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeVerifierRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_proofVerifier",
									"type": "address"
								}
							],
							"name": "setProofVerifier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract is responsible for generating zk-SNARKs proofs for transactions and data validation.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"generateProof(bytes,uint256[],string)": {
								"details": "Generate zk-SNARK proof for a transaction or data.",
								"params": {
									"inputs": "The inputs used for the proof.",
									"proof": "The zk-SNARK proof.",
									"proofId": "Unique identifier for the proof."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"grantVerifierRole(address)": {
								"details": "Grant the verifier role to an account.",
								"params": {
									"account": "The account to grant the verifier role to."
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"hasVerifierRole(address)": {
								"details": "Check if an account has the verifier role.",
								"params": {
									"account": "The account to check."
								},
								"returns": {
									"_0": "True if the account has the verifier role, false otherwise."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"revokeVerifierRole(address)": {
								"details": "Revoke the verifier role from an account.",
								"params": {
									"account": "The account to revoke the verifier role from."
								}
							},
							"setProofVerifier(address)": {
								"details": "Set a new proof verifier contract address.",
								"params": {
									"_proofVerifier": "The address of the new proof verifier contract."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"title": "ProofGeneration",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":897:3156  contract ProofGeneration is AccessControl, EIP712 {... */\n  mstore(0x40, 0x0160)\n    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1258:1474  constructor(string memory name, string memory version, address _proofVerifier) EIP712(name, version) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1344:1348  name */\n  dup3\n    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1350:1357  version */\n  dup3\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3432:3445  _nameFallback */\n  0x01\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3405  name */\n  dup4\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3431  name.toShortStringWithFallback */\n  shl(0x20, tag_8)\n  swap1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3401:3446  name.toShortStringWithFallback(_nameFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3393:3446  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  tag_9\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3501:3517  _versionFallback */\n  0x02\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3474  version */\n  dup3\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3500  version.toShortStringWithFallback */\n  shl(0x20, tag_8)\n  swap1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3467:3518  version.toShortStringWithFallback(_versionFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3456:3518  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3558:3562  name */\n  dup2\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3542:3564  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3528:3564  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3607:3614  version */\n  dup1\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3591:3616  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3574:3616  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3644:3657  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3627:3657  _cachedChainId = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  tag_10\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3713  _buildDomainSeparator */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3692:3715  _buildDomainSeparator() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3667:3715  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3747:3751  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3725:3752  _cachedThis = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":3328:3759  constructor(string memory name, string memory version) {... */\n  pop\n  pop\n    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1369:1411  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1380:1398  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1400:1410  msg.sender */\n  caller\n    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1369:1379  _grantRole */\n  shl(0x20, tag_14)\n    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1369:1411  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1452:1466  _proofVerifier */\n  dup1\n    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1421:1434  proofVerifier */\n  0x03\n  0x00\n    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1421:1467  proofVerifier = IProofVerifier(_proofVerifier) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1258:1474  constructor(string memory name, string memory version, address _proofVerifier) EIP712(name, version) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":897:3156  contract ProofGeneration is AccessControl, EIP712 {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3010:3021  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3059:3061  32 */\n  0x20\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3043:3048  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3056  bytes(value).length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3037:3061  bytes(value).length < 32 */\n  lt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\n  iszero\n  tag_17\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  tag_18\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3098:3103  value */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3097  toShortString */\n  shl(0x20, tag_19)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3084:3104  toShortString(value) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3077:3104  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3033:3248  if (bytes(value).length < 32) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3176:3181  value */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  tag_21\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3161:3166  store */\n  dup4\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3160  StorageSlot.getStringSlot */\n  shl(0x20, tag_22)\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3167  StorageSlot.getStringSlot(store) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3173  StorageSlot.getStringSlot(store).value */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3135:3181  StorageSlot.getStringSlot(store).value = value */\n  swap1\n  dup2\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3219:3236  FALLBACK_SENTINEL */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3195:3237  return ShortString.wrap(FALLBACK_SENTINEL) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2914:3254  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_16:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4168:4175  bytes32 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":2079:2174  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4226:4237  _hashedName */\n  mload(0xe0)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4239:4253  _hashedVersion */\n  mload(0x0100)\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4255:4268  block.chainid */\n  chainid\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4278:4282  this */\n  address\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4204:4284  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  add(0x20, mload(0x40))\n  tag_26\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4194:4285  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4187:4285  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":4113:4292  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_29\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_30)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_29:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_32\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_28:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1773:1784  ShortString */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1813  bytes memory bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1822:1825  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1796:1826  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1854:1856  31 */\n  0x1f\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1844  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1851  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1840:1856  bstr.length > 31 */\n  gt\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\n  iszero\n  tag_36\n  jumpi\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1893:1896  str */\n  dup3\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1879:1897  StringTooLong(str) */\n  mload(0x40)\n  0x305a27a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1836:1908  if (bstr.length > 31) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1978  bstr */\n  dup1\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1974:1985  bstr.length */\n  mload\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1965:1969  bstr */\n  dup2\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1957:1970  bytes32(bstr) */\n  tag_39\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1949:1971  uint256(bytes32(bstr)) */\n  0x00\n  shr\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1949:1985  uint256(bytes32(bstr)) | bstr.length */\n  or\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1941:1986  bytes32(uint256(bytes32(bstr)) | bstr.length) */\n  0x00\n  shl\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1917:1987  return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length)) */\n  swap2\n  pop\n  pop\n    /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1708:1994  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3203:3223  StringSlot storage r */\n  0x00\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3311:3321  store.slot */\n  dup2\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3301:3321  r.slot := store.slot */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":3135:3337  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_44:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_45:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_46:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_47:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_48:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_49:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_50:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_51:\n    /* \"#utility.yul\":957:984   */\n  tag_98\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_49\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_100\n  tag_50\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1030:1118   */\ntag_99:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_52:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_102\n  tag_44\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_103\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_51\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_53:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_106\n  tag_50\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1434:1490   */\ntag_105:\n    /* \"#utility.yul\":1508:1537   */\n  tag_107\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_49\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_54:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_55:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_110\n    /* \"#utility.yul\":1885:1934   */\n  tag_111\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_53\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1869:1935   */\n  tag_52\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_113\n  tag_48\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":2010:2122   */\ntag_112:\n    /* \"#utility.yul\":2131:2183   */\n  tag_114\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_54\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_56:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_116\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_117\n  tag_47\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2292:2414   */\ntag_116:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_118\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_55\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2696   */\ntag_57:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2647:2689   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2640:2645   */\n  dup3\n    /* \"#utility.yul\":2636:2690   */\n  and\n    /* \"#utility.yul\":2625:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2696   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:2798   */\ntag_58:\n    /* \"#utility.yul\":2739:2746   */\n  0x00\n    /* \"#utility.yul\":2768:2792   */\n  tag_121\n    /* \"#utility.yul\":2786:2791   */\n  dup3\n    /* \"#utility.yul\":2768:2792   */\n  tag_57\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2757:2792   */\n  swap1\n  pop\n    /* \"#utility.yul\":2702:2798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2804:2926   */\ntag_59:\n    /* \"#utility.yul\":2877:2901   */\n  tag_123\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2877:2901   */\n  tag_58\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2870:2875   */\n  dup2\n    /* \"#utility.yul\":2867:2902   */\n  eq\n    /* \"#utility.yul\":2857:2920   */\n  tag_124\n  jumpi\n    /* \"#utility.yul\":2916:2917   */\n  0x00\n    /* \"#utility.yul\":2913:2914   */\n  dup1\n    /* \"#utility.yul\":2906:2918   */\n  revert\n    /* \"#utility.yul\":2857:2920   */\ntag_124:\n    /* \"#utility.yul\":2804:2926   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2932:3075   */\ntag_60:\n    /* \"#utility.yul\":2989:2994   */\n  0x00\n    /* \"#utility.yul\":3020:3026   */\n  dup2\n    /* \"#utility.yul\":3014:3027   */\n  mload\n    /* \"#utility.yul\":3005:3027   */\n  swap1\n  pop\n    /* \"#utility.yul\":3036:3069   */\n  tag_126\n    /* \"#utility.yul\":3063:3068   */\n  dup2\n    /* \"#utility.yul\":3036:3069   */\n  tag_59\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":2932:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:4090   */\ntag_3:\n    /* \"#utility.yul\":3189:3195   */\n  0x00\n    /* \"#utility.yul\":3197:3203   */\n  dup1\n    /* \"#utility.yul\":3205:3211   */\n  0x00\n    /* \"#utility.yul\":3254:3256   */\n  0x60\n    /* \"#utility.yul\":3242:3251   */\n  dup5\n    /* \"#utility.yul\":3233:3240   */\n  dup7\n    /* \"#utility.yul\":3229:3252   */\n  sub\n    /* \"#utility.yul\":3225:3257   */\n  slt\n    /* \"#utility.yul\":3222:3341   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":3260:3339   */\n  tag_129\n  tag_45\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3222:3341   */\ntag_128:\n    /* \"#utility.yul\":3401:3402   */\n  0x00\n    /* \"#utility.yul\":3390:3399   */\n  dup5\n    /* \"#utility.yul\":3386:3403   */\n  add\n    /* \"#utility.yul\":3380:3404   */\n  mload\n    /* \"#utility.yul\":3431:3449   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3423:3429   */\n  dup2\n    /* \"#utility.yul\":3420:3450   */\n  gt\n    /* \"#utility.yul\":3417:3534   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":3453:3532   */\n  tag_131\n  tag_46\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3417:3534   */\ntag_130:\n    /* \"#utility.yul\":3558:3632   */\n  tag_132\n    /* \"#utility.yul\":3624:3631   */\n  dup7\n    /* \"#utility.yul\":3615:3621   */\n  dup3\n    /* \"#utility.yul\":3604:3613   */\n  dup8\n    /* \"#utility.yul\":3600:3622   */\n  add\n    /* \"#utility.yul\":3558:3632   */\n  tag_56\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":3548:3632   */\n  swap4\n  pop\n    /* \"#utility.yul\":3351:3642   */\n  pop\n    /* \"#utility.yul\":3702:3704   */\n  0x20\n    /* \"#utility.yul\":3691:3700   */\n  dup5\n    /* \"#utility.yul\":3687:3705   */\n  add\n    /* \"#utility.yul\":3681:3706   */\n  mload\n    /* \"#utility.yul\":3733:3751   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3725:3731   */\n  dup2\n    /* \"#utility.yul\":3722:3752   */\n  gt\n    /* \"#utility.yul\":3719:3836   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":3755:3834   */\n  tag_134\n  tag_46\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":3719:3836   */\ntag_133:\n    /* \"#utility.yul\":3860:3934   */\n  tag_135\n    /* \"#utility.yul\":3926:3933   */\n  dup7\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3906:3915   */\n  dup8\n    /* \"#utility.yul\":3902:3924   */\n  add\n    /* \"#utility.yul\":3860:3934   */\n  tag_56\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3850:3934   */\n  swap3\n  pop\n    /* \"#utility.yul\":3652:3944   */\n  pop\n    /* \"#utility.yul\":3983:3985   */\n  0x40\n    /* \"#utility.yul\":4009:4073   */\n  tag_136\n    /* \"#utility.yul\":4065:4072   */\n  dup7\n    /* \"#utility.yul\":4056:4062   */\n  dup3\n    /* \"#utility.yul\":4045:4054   */\n  dup8\n    /* \"#utility.yul\":4041:4063   */\n  add\n    /* \"#utility.yul\":4009:4073   */\n  tag_60\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":3999:4073   */\n  swap2\n  pop\n    /* \"#utility.yul\":3954:4083   */\n  pop\n    /* \"#utility.yul\":3081:4090   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4096:4195   */\ntag_61:\n    /* \"#utility.yul\":4148:4154   */\n  0x00\n    /* \"#utility.yul\":4182:4187   */\n  dup2\n    /* \"#utility.yul\":4176:4188   */\n  mload\n    /* \"#utility.yul\":4166:4188   */\n  swap1\n  pop\n    /* \"#utility.yul\":4096:4195   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4201:4381   */\ntag_62:\n    /* \"#utility.yul\":4249:4326   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4246:4247   */\n  0x00\n    /* \"#utility.yul\":4239:4327   */\n  mstore\n    /* \"#utility.yul\":4346:4350   */\n  0x22\n    /* \"#utility.yul\":4343:4344   */\n  0x04\n    /* \"#utility.yul\":4336:4351   */\n  mstore\n    /* \"#utility.yul\":4370:4374   */\n  0x24\n    /* \"#utility.yul\":4367:4368   */\n  0x00\n    /* \"#utility.yul\":4360:4375   */\n  revert\n    /* \"#utility.yul\":4387:4707   */\ntag_63:\n    /* \"#utility.yul\":4431:4437   */\n  0x00\n    /* \"#utility.yul\":4468:4469   */\n  0x02\n    /* \"#utility.yul\":4462:4466   */\n  dup3\n    /* \"#utility.yul\":4458:4470   */\n  div\n    /* \"#utility.yul\":4448:4470   */\n  swap1\n  pop\n    /* \"#utility.yul\":4515:4516   */\n  0x01\n    /* \"#utility.yul\":4509:4513   */\n  dup3\n    /* \"#utility.yul\":4505:4517   */\n  and\n    /* \"#utility.yul\":4536:4554   */\n  dup1\n    /* \"#utility.yul\":4526:4607   */\n  tag_140\n  jumpi\n    /* \"#utility.yul\":4592:4596   */\n  0x7f\n    /* \"#utility.yul\":4584:4590   */\n  dup3\n    /* \"#utility.yul\":4580:4597   */\n  and\n    /* \"#utility.yul\":4570:4597   */\n  swap2\n  pop\n    /* \"#utility.yul\":4526:4607   */\ntag_140:\n    /* \"#utility.yul\":4654:4656   */\n  0x20\n    /* \"#utility.yul\":4646:4652   */\n  dup3\n    /* \"#utility.yul\":4643:4657   */\n  lt\n    /* \"#utility.yul\":4623:4641   */\n  dup2\n    /* \"#utility.yul\":4620:4658   */\n  sub\n    /* \"#utility.yul\":4617:4701   */\n  tag_141\n  jumpi\n    /* \"#utility.yul\":4673:4691   */\n  tag_142\n  tag_62\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":4617:4701   */\ntag_141:\n    /* \"#utility.yul\":4438:4707   */\n  pop\n    /* \"#utility.yul\":4387:4707   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4713:4854   */\ntag_64:\n    /* \"#utility.yul\":4762:4766   */\n  0x00\n    /* \"#utility.yul\":4785:4788   */\n  dup2\n    /* \"#utility.yul\":4777:4788   */\n  swap1\n  pop\n    /* \"#utility.yul\":4808:4811   */\n  dup2\n    /* \"#utility.yul\":4805:4806   */\n  0x00\n    /* \"#utility.yul\":4798:4812   */\n  mstore\n    /* \"#utility.yul\":4842:4846   */\n  0x20\n    /* \"#utility.yul\":4839:4840   */\n  0x00\n    /* \"#utility.yul\":4829:4847   */\n  keccak256\n    /* \"#utility.yul\":4821:4847   */\n  swap1\n  pop\n    /* \"#utility.yul\":4713:4854   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4860:4953   */\ntag_65:\n    /* \"#utility.yul\":4897:4903   */\n  0x00\n    /* \"#utility.yul\":4944:4946   */\n  0x20\n    /* \"#utility.yul\":4939:4941   */\n  0x1f\n    /* \"#utility.yul\":4932:4937   */\n  dup4\n    /* \"#utility.yul\":4928:4942   */\n  add\n    /* \"#utility.yul\":4924:4947   */\n  div\n    /* \"#utility.yul\":4914:4947   */\n  swap1\n  pop\n    /* \"#utility.yul\":4860:4953   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4959:5066   */\ntag_66:\n    /* \"#utility.yul\":5003:5011   */\n  0x00\n    /* \"#utility.yul\":5053:5058   */\n  dup3\n    /* \"#utility.yul\":5047:5051   */\n  dup3\n    /* \"#utility.yul\":5043:5059   */\n  shl\n    /* \"#utility.yul\":5022:5059   */\n  swap1\n  pop\n    /* \"#utility.yul\":4959:5066   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5072:5465   */\ntag_67:\n    /* \"#utility.yul\":5141:5147   */\n  0x00\n    /* \"#utility.yul\":5191:5192   */\n  0x08\n    /* \"#utility.yul\":5179:5189   */\n  dup4\n    /* \"#utility.yul\":5175:5193   */\n  mul\n    /* \"#utility.yul\":5214:5311   */\n  tag_147\n    /* \"#utility.yul\":5244:5310   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5233:5242   */\n  dup3\n    /* \"#utility.yul\":5214:5311   */\n  tag_66\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5332:5371   */\n  tag_148\n    /* \"#utility.yul\":5362:5370   */\n  dup7\n    /* \"#utility.yul\":5351:5360   */\n  dup4\n    /* \"#utility.yul\":5332:5371   */\n  tag_66\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5320:5371   */\n  swap6\n  pop\n    /* \"#utility.yul\":5404:5408   */\n  dup1\n    /* \"#utility.yul\":5400:5409   */\n  not\n    /* \"#utility.yul\":5393:5398   */\n  dup5\n    /* \"#utility.yul\":5389:5410   */\n  and\n    /* \"#utility.yul\":5380:5410   */\n  swap4\n  pop\n    /* \"#utility.yul\":5453:5457   */\n  dup1\n    /* \"#utility.yul\":5443:5451   */\n  dup7\n    /* \"#utility.yul\":5439:5458   */\n  and\n    /* \"#utility.yul\":5432:5437   */\n  dup5\n    /* \"#utility.yul\":5429:5459   */\n  or\n    /* \"#utility.yul\":5419:5459   */\n  swap3\n  pop\n    /* \"#utility.yul\":5148:5465   */\n  pop\n  pop\n    /* \"#utility.yul\":5072:5465   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5471:5548   */\ntag_68:\n    /* \"#utility.yul\":5508:5515   */\n  0x00\n    /* \"#utility.yul\":5537:5542   */\n  dup2\n    /* \"#utility.yul\":5526:5542   */\n  swap1\n  pop\n    /* \"#utility.yul\":5471:5548   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5554:5614   */\ntag_69:\n    /* \"#utility.yul\":5582:5585   */\n  0x00\n    /* \"#utility.yul\":5603:5608   */\n  dup2\n    /* \"#utility.yul\":5596:5608   */\n  swap1\n  pop\n    /* \"#utility.yul\":5554:5614   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5620:5762   */\ntag_70:\n    /* \"#utility.yul\":5670:5679   */\n  0x00\n    /* \"#utility.yul\":5703:5756   */\n  tag_152\n    /* \"#utility.yul\":5721:5755   */\n  tag_153\n    /* \"#utility.yul\":5730:5754   */\n  tag_154\n    /* \"#utility.yul\":5748:5753   */\n  dup5\n    /* \"#utility.yul\":5730:5754   */\n  tag_68\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5721:5755   */\n  tag_69\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5703:5756   */\n  tag_68\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5690:5756   */\n  swap1\n  pop\n    /* \"#utility.yul\":5620:5762   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5768:5843   */\ntag_71:\n    /* \"#utility.yul\":5811:5814   */\n  0x00\n    /* \"#utility.yul\":5832:5837   */\n  dup2\n    /* \"#utility.yul\":5825:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5768:5843   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5849:6118   */\ntag_72:\n    /* \"#utility.yul\":5959:5998   */\n  tag_157\n    /* \"#utility.yul\":5990:5997   */\n  dup4\n    /* \"#utility.yul\":5959:5998   */\n  tag_70\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6020:6111   */\n  tag_158\n    /* \"#utility.yul\":6069:6110   */\n  tag_159\n    /* \"#utility.yul\":6093:6109   */\n  dup3\n    /* \"#utility.yul\":6069:6110   */\n  tag_71\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6061:6067   */\n  dup5\n    /* \"#utility.yul\":6054:6058   */\n  dup5\n    /* \"#utility.yul\":6048:6059   */\n  sload\n    /* \"#utility.yul\":6020:6111   */\n  tag_67\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6014:6018   */\n  dup3\n    /* \"#utility.yul\":6007:6112   */\n  sstore\n    /* \"#utility.yul\":5925:6118   */\n  pop\n    /* \"#utility.yul\":5849:6118   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6124:6197   */\ntag_73:\n    /* \"#utility.yul\":6169:6172   */\n  0x00\n    /* \"#utility.yul\":6124:6197   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6203:6392   */\ntag_74:\n    /* \"#utility.yul\":6280:6312   */\n  tag_162\n  tag_73\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6321:6386   */\n  tag_163\n    /* \"#utility.yul\":6379:6385   */\n  dup2\n    /* \"#utility.yul\":6371:6377   */\n  dup5\n    /* \"#utility.yul\":6365:6369   */\n  dup5\n    /* \"#utility.yul\":6321:6386   */\n  tag_72\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6256:6392   */\n  pop\n    /* \"#utility.yul\":6203:6392   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6398:6584   */\ntag_75:\n    /* \"#utility.yul\":6458:6578   */\ntag_165:\n    /* \"#utility.yul\":6475:6478   */\n  dup2\n    /* \"#utility.yul\":6468:6473   */\n  dup2\n    /* \"#utility.yul\":6465:6479   */\n  lt\n    /* \"#utility.yul\":6458:6578   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":6529:6568   */\n  tag_168\n    /* \"#utility.yul\":6566:6567   */\n  0x00\n    /* \"#utility.yul\":6559:6564   */\n  dup3\n    /* \"#utility.yul\":6529:6568   */\n  tag_74\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":6502:6503   */\n  0x01\n    /* \"#utility.yul\":6495:6500   */\n  dup2\n    /* \"#utility.yul\":6491:6504   */\n  add\n    /* \"#utility.yul\":6482:6504   */\n  swap1\n  pop\n    /* \"#utility.yul\":6458:6578   */\n  jump(tag_165)\ntag_167:\n    /* \"#utility.yul\":6398:6584   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6590:7133   */\ntag_76:\n    /* \"#utility.yul\":6691:6693   */\n  0x1f\n    /* \"#utility.yul\":6686:6689   */\n  dup3\n    /* \"#utility.yul\":6683:6694   */\n  gt\n    /* \"#utility.yul\":6680:7126   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":6725:6763   */\n  tag_171\n    /* \"#utility.yul\":6757:6762   */\n  dup2\n    /* \"#utility.yul\":6725:6763   */\n  tag_64\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":6809:6838   */\n  tag_172\n    /* \"#utility.yul\":6827:6837   */\n  dup5\n    /* \"#utility.yul\":6809:6838   */\n  tag_65\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":6799:6807   */\n  dup2\n    /* \"#utility.yul\":6795:6839   */\n  add\n    /* \"#utility.yul\":6992:6994   */\n  0x20\n    /* \"#utility.yul\":6980:6990   */\n  dup6\n    /* \"#utility.yul\":6977:6995   */\n  lt\n    /* \"#utility.yul\":6974:7023   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":7013:7021   */\n  dup2\n    /* \"#utility.yul\":6998:7021   */\n  swap1\n  pop\n    /* \"#utility.yul\":6974:7023   */\ntag_173:\n    /* \"#utility.yul\":7036:7116   */\n  tag_174\n    /* \"#utility.yul\":7092:7114   */\n  tag_175\n    /* \"#utility.yul\":7110:7113   */\n  dup6\n    /* \"#utility.yul\":7092:7114   */\n  tag_65\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7082:7090   */\n  dup4\n    /* \"#utility.yul\":7078:7115   */\n  add\n    /* \"#utility.yul\":7065:7076   */\n  dup3\n    /* \"#utility.yul\":7036:7116   */\n  tag_75\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6695:7126   */\n  pop\n  pop\n    /* \"#utility.yul\":6680:7126   */\ntag_170:\n    /* \"#utility.yul\":6590:7133   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7139:7256   */\ntag_77:\n    /* \"#utility.yul\":7193:7201   */\n  0x00\n    /* \"#utility.yul\":7243:7248   */\n  dup3\n    /* \"#utility.yul\":7237:7241   */\n  dup3\n    /* \"#utility.yul\":7233:7249   */\n  shr\n    /* \"#utility.yul\":7212:7249   */\n  swap1\n  pop\n    /* \"#utility.yul\":7139:7256   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7262:7431   */\ntag_78:\n    /* \"#utility.yul\":7306:7312   */\n  0x00\n    /* \"#utility.yul\":7339:7390   */\n  tag_178\n    /* \"#utility.yul\":7387:7388   */\n  0x00\n    /* \"#utility.yul\":7383:7389   */\n  not\n    /* \"#utility.yul\":7375:7380   */\n  dup5\n    /* \"#utility.yul\":7372:7373   */\n  0x08\n    /* \"#utility.yul\":7368:7381   */\n  mul\n    /* \"#utility.yul\":7339:7390   */\n  tag_77\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":7335:7391   */\n  not\n    /* \"#utility.yul\":7420:7424   */\n  dup1\n    /* \"#utility.yul\":7414:7418   */\n  dup4\n    /* \"#utility.yul\":7410:7425   */\n  and\n    /* \"#utility.yul\":7400:7425   */\n  swap2\n  pop\n    /* \"#utility.yul\":7313:7431   */\n  pop\n    /* \"#utility.yul\":7262:7431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7436:7731   */\ntag_79:\n    /* \"#utility.yul\":7512:7516   */\n  0x00\n    /* \"#utility.yul\":7658:7687   */\n  tag_180\n    /* \"#utility.yul\":7683:7686   */\n  dup4\n    /* \"#utility.yul\":7677:7681   */\n  dup4\n    /* \"#utility.yul\":7658:7687   */\n  tag_78\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":7650:7687   */\n  swap2\n  pop\n    /* \"#utility.yul\":7720:7723   */\n  dup3\n    /* \"#utility.yul\":7717:7718   */\n  0x02\n    /* \"#utility.yul\":7713:7724   */\n  mul\n    /* \"#utility.yul\":7707:7711   */\n  dup3\n    /* \"#utility.yul\":7704:7725   */\n  or\n    /* \"#utility.yul\":7696:7725   */\n  swap1\n  pop\n    /* \"#utility.yul\":7436:7731   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:9131   */\ntag_24:\n    /* \"#utility.yul\":7853:7890   */\n  tag_182\n    /* \"#utility.yul\":7886:7889   */\n  dup3\n    /* \"#utility.yul\":7853:7890   */\n  tag_61\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":7955:7973   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7947:7953   */\n  dup2\n    /* \"#utility.yul\":7944:7974   */\n  gt\n    /* \"#utility.yul\":7941:7997   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":7977:7995   */\n  tag_184\n  tag_50\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":7941:7997   */\ntag_183:\n    /* \"#utility.yul\":8021:8059   */\n  tag_185\n    /* \"#utility.yul\":8053:8057   */\n  dup3\n    /* \"#utility.yul\":8047:8058   */\n  sload\n    /* \"#utility.yul\":8021:8059   */\n  tag_63\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":8106:8173   */\n  tag_186\n    /* \"#utility.yul\":8166:8172   */\n  dup3\n    /* \"#utility.yul\":8158:8164   */\n  dup3\n    /* \"#utility.yul\":8152:8156   */\n  dup6\n    /* \"#utility.yul\":8106:8173   */\n  tag_76\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8200:8201   */\n  0x00\n    /* \"#utility.yul\":8224:8228   */\n  0x20\n    /* \"#utility.yul\":8211:8228   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8258   */\n  0x1f\n    /* \"#utility.yul\":8248:8254   */\n  dup4\n    /* \"#utility.yul\":8245:8259   */\n  gt\n    /* \"#utility.yul\":8273:8274   */\n  0x01\n    /* \"#utility.yul\":8268:8886   */\n  dup2\n  eq\n  tag_188\n  jumpi\n    /* \"#utility.yul\":8930:8931   */\n  0x00\n    /* \"#utility.yul\":8947:8953   */\n  dup5\n    /* \"#utility.yul\":8944:9021   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":8996:9005   */\n  dup3\n    /* \"#utility.yul\":8991:8994   */\n  dup8\n    /* \"#utility.yul\":8987:9006   */\n  add\n    /* \"#utility.yul\":8981:9007   */\n  mload\n    /* \"#utility.yul\":8972:9007   */\n  swap1\n  pop\n    /* \"#utility.yul\":8944:9021   */\ntag_189:\n    /* \"#utility.yul\":9047:9114   */\n  tag_190\n    /* \"#utility.yul\":9107:9113   */\n  dup6\n    /* \"#utility.yul\":9100:9105   */\n  dup3\n    /* \"#utility.yul\":9047:9114   */\n  tag_79\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9041:9045   */\n  dup7\n    /* \"#utility.yul\":9034:9115   */\n  sstore\n    /* \"#utility.yul\":8903:9125   */\n  pop\n    /* \"#utility.yul\":8238:9125   */\n  jump(tag_187)\n    /* \"#utility.yul\":8268:8886   */\ntag_188:\n    /* \"#utility.yul\":8320:8324   */\n  0x1f\n    /* \"#utility.yul\":8316:8325   */\n  not\n    /* \"#utility.yul\":8308:8314   */\n  dup5\n    /* \"#utility.yul\":8304:8326   */\n  and\n    /* \"#utility.yul\":8354:8391   */\n  tag_191\n    /* \"#utility.yul\":8386:8390   */\n  dup7\n    /* \"#utility.yul\":8354:8391   */\n  tag_64\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":8413:8414   */\n  0x00\n    /* \"#utility.yul\":8427:8635   */\ntag_192:\n    /* \"#utility.yul\":8441:8448   */\n  dup3\n    /* \"#utility.yul\":8438:8439   */\n  dup2\n    /* \"#utility.yul\":8435:8449   */\n  lt\n    /* \"#utility.yul\":8427:8635   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":8520:8529   */\n  dup5\n    /* \"#utility.yul\":8515:8518   */\n  dup10\n    /* \"#utility.yul\":8511:8530   */\n  add\n    /* \"#utility.yul\":8505:8531   */\n  mload\n    /* \"#utility.yul\":8497:8503   */\n  dup3\n    /* \"#utility.yul\":8490:8532   */\n  sstore\n    /* \"#utility.yul\":8571:8572   */\n  0x01\n    /* \"#utility.yul\":8563:8569   */\n  dup3\n    /* \"#utility.yul\":8559:8573   */\n  add\n    /* \"#utility.yul\":8549:8573   */\n  swap2\n  pop\n    /* \"#utility.yul\":8618:8620   */\n  0x20\n    /* \"#utility.yul\":8607:8616   */\n  dup6\n    /* \"#utility.yul\":8603:8621   */\n  add\n    /* \"#utility.yul\":8590:8621   */\n  swap5\n  pop\n    /* \"#utility.yul\":8464:8468   */\n  0x20\n    /* \"#utility.yul\":8461:8462   */\n  dup2\n    /* \"#utility.yul\":8457:8469   */\n  add\n    /* \"#utility.yul\":8452:8469   */\n  swap1\n  pop\n    /* \"#utility.yul\":8427:8635   */\n  jump(tag_192)\ntag_194:\n    /* \"#utility.yul\":8663:8669   */\n  dup7\n    /* \"#utility.yul\":8654:8661   */\n  dup4\n    /* \"#utility.yul\":8651:8670   */\n  lt\n    /* \"#utility.yul\":8648:8827   */\n  iszero\n  tag_195\n  jumpi\n    /* \"#utility.yul\":8721:8730   */\n  dup5\n    /* \"#utility.yul\":8716:8719   */\n  dup10\n    /* \"#utility.yul\":8712:8731   */\n  add\n    /* \"#utility.yul\":8706:8732   */\n  mload\n    /* \"#utility.yul\":8764:8812   */\n  tag_196\n    /* \"#utility.yul\":8806:8810   */\n  0x1f\n    /* \"#utility.yul\":8798:8804   */\n  dup10\n    /* \"#utility.yul\":8794:8811   */\n  and\n    /* \"#utility.yul\":8783:8792   */\n  dup3\n    /* \"#utility.yul\":8764:8812   */\n  tag_78\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":8756:8762   */\n  dup4\n    /* \"#utility.yul\":8749:8813   */\n  sstore\n    /* \"#utility.yul\":8671:8827   */\n  pop\n    /* \"#utility.yul\":8648:8827   */\ntag_195:\n    /* \"#utility.yul\":8873:8874   */\n  0x01\n    /* \"#utility.yul\":8869:8870   */\n  0x02\n    /* \"#utility.yul\":8861:8867   */\n  dup9\n    /* \"#utility.yul\":8857:8871   */\n  mul\n    /* \"#utility.yul\":8853:8875   */\n  add\n    /* \"#utility.yul\":8847:8851   */\n  dup9\n    /* \"#utility.yul\":8840:8876   */\n  sstore\n    /* \"#utility.yul\":8275:8886   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8238:9125   */\ntag_187:\n  pop\n    /* \"#utility.yul\":7828:9131   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7736:9131   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9137:9214   */\ntag_80:\n    /* \"#utility.yul\":9174:9181   */\n  0x00\n    /* \"#utility.yul\":9203:9208   */\n  dup2\n    /* \"#utility.yul\":9192:9208   */\n  swap1\n  pop\n    /* \"#utility.yul\":9137:9214   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9220:9338   */\ntag_81:\n    /* \"#utility.yul\":9307:9331   */\n  tag_199\n    /* \"#utility.yul\":9325:9330   */\n  dup2\n    /* \"#utility.yul\":9307:9331   */\n  tag_80\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9302:9305   */\n  dup3\n    /* \"#utility.yul\":9295:9332   */\n  mstore\n    /* \"#utility.yul\":9220:9338   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9344:9462   */\ntag_82:\n    /* \"#utility.yul\":9431:9455   */\n  tag_201\n    /* \"#utility.yul\":9449:9454   */\n  dup2\n    /* \"#utility.yul\":9431:9455   */\n  tag_68\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":9426:9429   */\n  dup3\n    /* \"#utility.yul\":9419:9456   */\n  mstore\n    /* \"#utility.yul\":9344:9462   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9468:9586   */\ntag_83:\n    /* \"#utility.yul\":9555:9579   */\n  tag_203\n    /* \"#utility.yul\":9573:9578   */\n  dup2\n    /* \"#utility.yul\":9555:9579   */\n  tag_58\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":9550:9553   */\n  dup3\n    /* \"#utility.yul\":9543:9580   */\n  mstore\n    /* \"#utility.yul\":9468:9586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9592:10256   */\ntag_27:\n    /* \"#utility.yul\":9797:9801   */\n  0x00\n    /* \"#utility.yul\":9835:9838   */\n  0xa0\n    /* \"#utility.yul\":9824:9833   */\n  dup3\n    /* \"#utility.yul\":9820:9839   */\n  add\n    /* \"#utility.yul\":9812:9839   */\n  swap1\n  pop\n    /* \"#utility.yul\":9849:9920   */\n  tag_205\n    /* \"#utility.yul\":9917:9918   */\n  0x00\n    /* \"#utility.yul\":9906:9915   */\n  dup4\n    /* \"#utility.yul\":9902:9919   */\n  add\n    /* \"#utility.yul\":9893:9899   */\n  dup9\n    /* \"#utility.yul\":9849:9920   */\n  tag_81\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":9930:10002   */\n  tag_206\n    /* \"#utility.yul\":9998:10000   */\n  0x20\n    /* \"#utility.yul\":9987:9996   */\n  dup4\n    /* \"#utility.yul\":9983:10001   */\n  add\n    /* \"#utility.yul\":9974:9980   */\n  dup8\n    /* \"#utility.yul\":9930:10002   */\n  tag_81\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10012:10084   */\n  tag_207\n    /* \"#utility.yul\":10080:10082   */\n  0x40\n    /* \"#utility.yul\":10069:10078   */\n  dup4\n    /* \"#utility.yul\":10065:10083   */\n  add\n    /* \"#utility.yul\":10056:10062   */\n  dup7\n    /* \"#utility.yul\":10012:10084   */\n  tag_81\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":10094:10166   */\n  tag_208\n    /* \"#utility.yul\":10162:10164   */\n  0x60\n    /* \"#utility.yul\":10151:10160   */\n  dup4\n    /* \"#utility.yul\":10147:10165   */\n  add\n    /* \"#utility.yul\":10138:10144   */\n  dup6\n    /* \"#utility.yul\":10094:10166   */\n  tag_82\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10176:10249   */\n  tag_209\n    /* \"#utility.yul\":10244:10247   */\n  0x80\n    /* \"#utility.yul\":10233:10242   */\n  dup4\n    /* \"#utility.yul\":10229:10248   */\n  add\n    /* \"#utility.yul\":10220:10226   */\n  dup5\n    /* \"#utility.yul\":10176:10249   */\n  tag_83\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":9592:10256   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10262:10431   */\ntag_84:\n    /* \"#utility.yul\":10346:10357   */\n  0x00\n    /* \"#utility.yul\":10380:10386   */\n  dup3\n    /* \"#utility.yul\":10375:10378   */\n  dup3\n    /* \"#utility.yul\":10368:10387   */\n  mstore\n    /* \"#utility.yul\":10420:10424   */\n  0x20\n    /* \"#utility.yul\":10415:10418   */\n  dup3\n    /* \"#utility.yul\":10411:10425   */\n  add\n    /* \"#utility.yul\":10396:10425   */\n  swap1\n  pop\n    /* \"#utility.yul\":10262:10431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10437:10814   */\ntag_85:\n    /* \"#utility.yul\":10525:10528   */\n  0x00\n    /* \"#utility.yul\":10553:10592   */\n  tag_212\n    /* \"#utility.yul\":10586:10591   */\n  dup3\n    /* \"#utility.yul\":10553:10592   */\n  tag_61\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10608:10679   */\n  tag_213\n    /* \"#utility.yul\":10672:10678   */\n  dup2\n    /* \"#utility.yul\":10667:10670   */\n  dup6\n    /* \"#utility.yul\":10608:10679   */\n  tag_84\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":10601:10679   */\n  swap4\n  pop\n    /* \"#utility.yul\":10688:10753   */\n  tag_214\n    /* \"#utility.yul\":10746:10752   */\n  dup2\n    /* \"#utility.yul\":10741:10744   */\n  dup6\n    /* \"#utility.yul\":10734:10738   */\n  0x20\n    /* \"#utility.yul\":10727:10732   */\n  dup7\n    /* \"#utility.yul\":10723:10739   */\n  add\n    /* \"#utility.yul\":10688:10753   */\n  tag_54\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":10778:10807   */\n  tag_215\n    /* \"#utility.yul\":10800:10806   */\n  dup2\n    /* \"#utility.yul\":10778:10807   */\n  tag_49\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":10773:10776   */\n  dup5\n    /* \"#utility.yul\":10769:10808   */\n  add\n    /* \"#utility.yul\":10762:10808   */\n  swap2\n  pop\n    /* \"#utility.yul\":10529:10814   */\n  pop\n    /* \"#utility.yul\":10437:10814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10820:11133   */\ntag_38:\n    /* \"#utility.yul\":10933:10937   */\n  0x00\n    /* \"#utility.yul\":10971:10973   */\n  0x20\n    /* \"#utility.yul\":10960:10969   */\n  dup3\n    /* \"#utility.yul\":10956:10974   */\n  add\n    /* \"#utility.yul\":10948:10974   */\n  swap1\n  pop\n    /* \"#utility.yul\":11020:11029   */\n  dup2\n    /* \"#utility.yul\":11014:11018   */\n  dup2\n    /* \"#utility.yul\":11010:11030   */\n  sub\n    /* \"#utility.yul\":11006:11007   */\n  0x00\n    /* \"#utility.yul\":10995:11004   */\n  dup4\n    /* \"#utility.yul\":10991:11008   */\n  add\n    /* \"#utility.yul\":10984:11031   */\n  mstore\n    /* \"#utility.yul\":11048:11126   */\n  tag_217\n    /* \"#utility.yul\":11121:11125   */\n  dup2\n    /* \"#utility.yul\":11112:11118   */\n  dup5\n    /* \"#utility.yul\":11048:11126   */\n  tag_85\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":11040:11126   */\n  swap1\n  pop\n    /* \"#utility.yul\":10820:11133   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11139:11237   */\ntag_86:\n    /* \"#utility.yul\":11190:11196   */\n  0x00\n    /* \"#utility.yul\":11224:11229   */\n  dup2\n    /* \"#utility.yul\":11218:11230   */\n  mload\n    /* \"#utility.yul\":11208:11230   */\n  swap1\n  pop\n    /* \"#utility.yul\":11139:11237   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11243:11359   */\ntag_87:\n    /* \"#utility.yul\":11294:11298   */\n  0x00\n    /* \"#utility.yul\":11317:11320   */\n  dup2\n    /* \"#utility.yul\":11309:11320   */\n  swap1\n  pop\n    /* \"#utility.yul\":11347:11351   */\n  0x20\n    /* \"#utility.yul\":11342:11345   */\n  dup3\n    /* \"#utility.yul\":11338:11352   */\n  add\n    /* \"#utility.yul\":11330:11352   */\n  swap1\n  pop\n    /* \"#utility.yul\":11243:11359   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11365:11519   */\ntag_88:\n    /* \"#utility.yul\":11408:11419   */\n  0x00\n    /* \"#utility.yul\":11444:11473   */\n  tag_221\n    /* \"#utility.yul\":11468:11471   */\n  dup3\n    /* \"#utility.yul\":11462:11472   */\n  mload\n    /* \"#utility.yul\":11444:11473   */\n  tag_80\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":11507:11512   */\n  dup1\n    /* \"#utility.yul\":11483:11512   */\n  swap2\n  pop\n    /* \"#utility.yul\":11420:11519   */\n  pop\n    /* \"#utility.yul\":11365:11519   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11525:12119   */\ntag_40:\n    /* \"#utility.yul\":11609:11614   */\n  0x00\n    /* \"#utility.yul\":11640:11678   */\n  tag_223\n    /* \"#utility.yul\":11672:11677   */\n  dup3\n    /* \"#utility.yul\":11640:11678   */\n  tag_86\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":11703:11708   */\n  dup3\n    /* \"#utility.yul\":11730:11770   */\n  tag_224\n    /* \"#utility.yul\":11764:11769   */\n  dup5\n    /* \"#utility.yul\":11730:11770   */\n  tag_87\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":11718:11770   */\n  swap1\n  pop\n    /* \"#utility.yul\":11789:11824   */\n  tag_225\n    /* \"#utility.yul\":11815:11823   */\n  dup2\n    /* \"#utility.yul\":11789:11824   */\n  tag_88\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":11780:11824   */\n  swap3\n  pop\n    /* \"#utility.yul\":11848:11850   */\n  0x20\n    /* \"#utility.yul\":11840:11846   */\n  dup3\n    /* \"#utility.yul\":11837:11851   */\n  lt\n    /* \"#utility.yul\":11834:12112   */\n  iszero\n  tag_226\n  jumpi\n    /* \"#utility.yul\":11919:12088   */\n  tag_227\n    /* \"#utility.yul\":12004:12070   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":11974:11980   */\n  dup4\n    /* \"#utility.yul\":11970:11972   */\n  0x20\n    /* \"#utility.yul\":11966:11981   */\n  sub\n    /* \"#utility.yul\":11963:11964   */\n  0x08\n    /* \"#utility.yul\":11959:11982   */\n  mul\n    /* \"#utility.yul\":11919:12088   */\n  tag_66\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":11896:11901   */\n  dup4\n    /* \"#utility.yul\":11875:12102   */\n  and\n    /* \"#utility.yul\":11866:12102   */\n  swap3\n  pop\n    /* \"#utility.yul\":11834:12112   */\ntag_226:\n    /* \"#utility.yul\":11615:12119   */\n  pop\n  pop\n    /* \"#utility.yul\":11525:12119   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/security/zkSnarks/ProofGeneration.sol\":897:3156  contract ProofGeneration is AccessControl, EIP712 {... */\ntag_15:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xee0ff49487c1781d8064c379467bae8fb422014618d2d9ee6b1977118cbcea82\")\n  0x00\n  assignImmutable(\"0xf17089ced8c0c2239e63f2bbb45b3ebcf864ae70eb1ca01545337030cdeed50a\")\n  0x00\n  assignImmutable(\"0xd071d371589780369328e5437147bf8a672dd4f630ae4b82c7f8a4e9f9bcf7f4\")\n  0x00\n  assignImmutable(\"0xcd3b8a75131b09c18fac61f93bac9440f7b768b1c243a93eca5a67eb03b07828\")\n  0x00\n  assignImmutable(\"0x27f63464b9731b972604804953e204cb89525ac66e46cd091b2739ad01222f8b\")\n  0x00\n  assignImmutable(\"0x7fac02d34be0cf003870fc1ca20de764e3d24f4510f938a3d8c85c13150f33d3\")\n  0x00\n  assignImmutable(\"0x86890c29ff370c4b30973bbbaafda9b69a1419ebf78e3ecd48a68f972a0037ef\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":897:3156  contract ProofGeneration is AccessControl, EIP712 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdf6244db\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe7705db6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf736c365\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x91d14854\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa3669aef\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa865e5fe\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x36568abe\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7fa417b3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0337c061\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2422:2554  function grantVerifierRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1012:1072  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1151:1186  IProofVerifier public proofVerifier */\n    tag_9:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2698:2832  function revokeVerifierRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":3028:3154  function hasVerifierRole(address account) external view returns (bool) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2141:2284  function setProofVerifier(address _proofVerifier) external onlyRole(ADMIN_ROLE) {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1078:1144  bytes32 public constant VERIFIER_ROLE = keccak256(\"VERIFIER_ROLE\") */\n    tag_17:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1706:1987  function generateProof(bytes calldata proof, uint256[] calldata inputs, string calldata proofId) external onlyRole(VERIFIER_ROLE) {... */\n    tag_18:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_84\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_85\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_86\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2422:2554  function grantVerifierRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2484:2502  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_88\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_89\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_88:\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2514:2547  grantRole(VERIFIER_ROLE, account) */\n      tag_91\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1118:1144  keccak256(\"VERIFIER_ROLE\") */\n      0x0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2539:2546  account */\n      dup4\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2514:2523  grantRole */\n      tag_41\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2514:2547  grantRole(VERIFIER_ROLE, account) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2422:2554  function grantVerifierRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_93\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_35\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_95\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_89\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_97:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_101\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_102\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_103\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_103:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1012:1072  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_46:\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1049:1072  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1012:1072  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1151:1186  IProofVerifier public proofVerifier */\n    tag_49:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5242:5255  bytes1 fields */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5269:5287  string memory name */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5301:5322  string memory version */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5336:5351  uint256 chainId */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5365:5390  address verifyingContract */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5404:5416  bytes32 salt */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5430:5457  uint256[] memory extensions */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      tag_106\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5544  _EIP712Name */\n      tag_107\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5533:5546  _EIP712Name() */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      tag_108\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5574  _EIP712Version */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5560:5576  _EIP712Version() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5590:5603  block.chainid */\n      chainid\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5625:5629  this */\n      address\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5652:5653  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5644:5654  bytes32(0) */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5682:5683  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5668:5684  new uint256[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_110\n      jumpi\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n    tag_110:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_113\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_113:\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5482:5694  return (... */\n      0x0f00000000000000000000000000000000000000000000000000000000000000\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":5144:5701  function eip712Domain()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2698:2832  function revokeVerifierRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2761:2779  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_89\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2791:2825  revokeRole(VERIFIER_ROLE, account) */\n      tag_118\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1118:1144  keccak256(\"VERIFIER_ROLE\") */\n      0x0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2817:2824  account */\n      dup4\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2791:2801  revokeRole */\n      tag_72\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2791:2825  revokeRole(VERIFIER_ROLE, account) */\n      jump\t// in\n    tag_118:\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2698:2832  function revokeVerifierRole(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":3028:3154  function hasVerifierRole(address account) external view returns (bool) {... */\n    tag_68:\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":3093:3097  bool */\n      0x00\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":3116:3147  hasRole(VERIFIER_ROLE, account) */\n      tag_120\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1118:1144  keccak256(\"VERIFIER_ROLE\") */\n      0x0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":3139:3146  account */\n      dup4\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":3116:3123  hasRole */\n      tag_58\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":3116:3147  hasRole(VERIFIER_ROLE, account) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":3109:3147  return hasRole(VERIFIER_ROLE, account) */\n      swap1\n      pop\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":3028:3154  function hasVerifierRole(address account) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_121\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_35\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_89\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_125\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_125:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2141:2284  function setProofVerifier(address _proofVerifier) external onlyRole(ADMIN_ROLE) {... */\n    tag_75:\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1049:1072  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_127\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_89\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2262:2276  _proofVerifier */\n      dup2\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2231:2244  proofVerifier */\n      0x03\n      0x00\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2231:2277  proofVerifier = IProofVerifier(_proofVerifier) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":2141:2284  function setProofVerifier(address _proofVerifier) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1078:1144  bytes32 public constant VERIFIER_ROLE = keccak256(\"VERIFIER_ROLE\") */\n    tag_77:\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1118:1144  keccak256(\"VERIFIER_ROLE\") */\n      0x0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1078:1144  bytes32 public constant VERIFIER_ROLE = keccak256(\"VERIFIER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1706:1987  function generateProof(bytes calldata proof, uint256[] calldata inputs, string calldata proofId) external onlyRole(VERIFIER_ROLE) {... */\n    tag_82:\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1118:1144  keccak256(\"VERIFIER_ROLE\") */\n      0x0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_89\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1854:1867  proofVerifier */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1854:1879  proofVerifier.verifyProof */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1e8e1e13\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1880:1885  proof */\n      dup9\n      dup9\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1887:1893  inputs */\n      dup9\n      dup9\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1854:1894  proofVerifier.verifyProof(proof, inputs) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1846:1929  require(proofVerifier.verifyProof(proof, inputs), \"ProofGeneration: Invalid proof\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1960:1970  msg.sender */\n      caller\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1945:1980  ProofGenerated(msg.sender, proofId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9055e6953596a4bec3ee94fe69263dbbb095ebee41411bc4902a0c4cf0a51a21\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1972:1979  proofId */\n      dup5\n      dup5\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1945:1980  ProofGenerated(msg.sender, proofId) */\n      mload(0x40)\n      tag_141\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/security/zkSnarks/ProofGeneration.sol\":1706:1987  function generateProof(bytes calldata proof, uint256[] calldata inputs, string calldata proofId) external onlyRole(VERIFIER_ROLE) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_146\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_101\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_147\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_58\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_101\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_148)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_148:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_155\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_58\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_101\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_154)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_154:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6067:6080  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      tag_160\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6126:6139  _nameFallback */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6104  _name */\n      immutable(\"0xf17089ced8c0c2239e63f2bbb45b3ebcf864ae70eb1ca01545337030cdeed50a\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6125  _name.toStringWithFallback */\n      tag_161\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6099:6140  _name.toStringWithFallback(_nameFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6092:6140  return _name.toStringWithFallback(_nameFallback) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6021:6147  function _EIP712Name() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6522:6535  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      tag_163\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6584:6600  _versionFallback */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6562  _version */\n      immutable(\"0xee0ff49487c1781d8064c379467bae8fb422014618d2d9ee6b1977118cbcea82\")\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6583  _version.toStringWithFallback */\n      tag_161\n      swap1\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6554:6601  _version.toStringWithFallback(_versionFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6547:6601  return _version.toStringWithFallback(_versionFallback) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":6473:6608  function _EIP712Version() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_165\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_58\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3479:3492  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":1390:1456  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3537:3554  FALLBACK_SENTINEL */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3527:3532  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3508:3554  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      eq\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      tag_171\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3586:3591  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3585  toString */\n      tag_172\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3577:3592  toString(value) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3570:3592  return toString(value) */\n      swap1\n      pop\n      jump(tag_169)\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3504:3646  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3630:3635  store */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3623:3635  return store */\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_175\n      jump\t// in\n    tag_176:\n      dup1\n      iszero\n      tag_177\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_178\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_177)\n    tag_178:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_179:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_179\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":3385:3652  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_169:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2137:2150  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2173  uint256 len */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      tag_181\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2187:2191  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2186  byteLength */\n      tag_182\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2176:2192  byteLength(sstr) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2162:2192  uint256 len = byteLength(sstr) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2280:2297  string memory str */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2311:2313  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2300:2314  new string(32) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_183\n      jumpi\n      tag_184\n      tag_112\n      jump\t// in\n    tag_184:\n    tag_183:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_185\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_185:\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2280:2314  string memory str = new string(32) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2402:2405  len */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2397:2400  str */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2390:2406  mstore(str, len) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2442:2446  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2435:2439  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2430:2433  str */\n      dup3\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2426:2440  add(str, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2419:2447  mstore(add(str, 0x20), sstr) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2473:2476  str */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2466:2476  return str */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2078:2483  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2616:2623  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2635:2649  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2688:2692  0xFF */\n      0xff\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2679:2683  sstr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2652:2685  uint256(ShortString.unwrap(sstr)) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2652:2692  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      and\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2635:2692  uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2715:2717  31 */\n      0x1f\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2706:2712  result */\n      dup2\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2706:2717  result > 31 */\n      gt\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2740:2760  InvalidShortString() */\n      mload(0x40)\n      0xb3512b0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2702:2771  if (result > 31) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2787:2793  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2780:2793  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ShortStrings.sol\":2555:2800  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_189:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_190:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_191:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_192:\n        /* \"#utility.yul\":561:584   */\n      tag_250\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_191\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_251\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_251:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_193:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_253\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_192\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_24:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_256\n      tag_189\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":833:952   */\n    tag_255:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_257\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_193\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_194:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_195:\n        /* \"#utility.yul\":1268:1289   */\n      tag_260\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_194\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_27:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_262\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_195\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_196:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_197:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_265\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_196\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_198:\n        /* \"#utility.yul\":1825:1849   */\n      tag_267\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_197\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_268:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_199:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_270\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_198\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2354   */\n    tag_30:\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2121:2130   */\n      dup3\n        /* \"#utility.yul\":2112:2119   */\n      dup5\n        /* \"#utility.yul\":2108:2131   */\n      sub\n        /* \"#utility.yul\":2104:2136   */\n      slt\n        /* \"#utility.yul\":2101:2220   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":2139:2218   */\n      tag_273\n      tag_189\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2101:2220   */\n    tag_272:\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2284:2337   */\n      tag_274\n        /* \"#utility.yul\":2329:2336   */\n      dup5\n        /* \"#utility.yul\":2320:2326   */\n      dup3\n        /* \"#utility.yul\":2309:2318   */\n      dup6\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2284:2337   */\n      tag_199\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2274:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2230:2347   */\n      pop\n        /* \"#utility.yul\":2025:2354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2437   */\n    tag_200:\n        /* \"#utility.yul\":2397:2404   */\n      0x00\n        /* \"#utility.yul\":2426:2431   */\n      dup2\n        /* \"#utility.yul\":2415:2431   */\n      swap1\n      pop\n        /* \"#utility.yul\":2360:2437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2443:2565   */\n    tag_201:\n        /* \"#utility.yul\":2516:2540   */\n      tag_277\n        /* \"#utility.yul\":2534:2539   */\n      dup2\n        /* \"#utility.yul\":2516:2540   */\n      tag_200\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2509:2514   */\n      dup2\n        /* \"#utility.yul\":2506:2541   */\n      eq\n        /* \"#utility.yul\":2496:2559   */\n      tag_278\n      jumpi\n        /* \"#utility.yul\":2555:2556   */\n      0x00\n        /* \"#utility.yul\":2552:2553   */\n      dup1\n        /* \"#utility.yul\":2545:2557   */\n      revert\n        /* \"#utility.yul\":2496:2559   */\n    tag_278:\n        /* \"#utility.yul\":2443:2565   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2710   */\n    tag_202:\n        /* \"#utility.yul\":2617:2622   */\n      0x00\n        /* \"#utility.yul\":2655:2661   */\n      dup2\n        /* \"#utility.yul\":2642:2662   */\n      calldataload\n        /* \"#utility.yul\":2633:2662   */\n      swap1\n      pop\n        /* \"#utility.yul\":2671:2704   */\n      tag_280\n        /* \"#utility.yul\":2698:2703   */\n      dup2\n        /* \"#utility.yul\":2671:2704   */\n      tag_201\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2571:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:3045   */\n    tag_34:\n        /* \"#utility.yul\":2775:2781   */\n      0x00\n        /* \"#utility.yul\":2824:2826   */\n      0x20\n        /* \"#utility.yul\":2812:2821   */\n      dup3\n        /* \"#utility.yul\":2803:2810   */\n      dup5\n        /* \"#utility.yul\":2799:2822   */\n      sub\n        /* \"#utility.yul\":2795:2827   */\n      slt\n        /* \"#utility.yul\":2792:2911   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2830:2909   */\n      tag_283\n      tag_189\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2792:2911   */\n    tag_282:\n        /* \"#utility.yul\":2950:2951   */\n      0x00\n        /* \"#utility.yul\":2975:3028   */\n      tag_284\n        /* \"#utility.yul\":3020:3027   */\n      dup5\n        /* \"#utility.yul\":3011:3017   */\n      dup3\n        /* \"#utility.yul\":3000:3009   */\n      dup6\n        /* \"#utility.yul\":2996:3018   */\n      add\n        /* \"#utility.yul\":2975:3028   */\n      tag_202\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2965:3028   */\n      swap2\n      pop\n        /* \"#utility.yul\":2921:3038   */\n      pop\n        /* \"#utility.yul\":2716:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3169   */\n    tag_203:\n        /* \"#utility.yul\":3138:3162   */\n      tag_286\n        /* \"#utility.yul\":3156:3161   */\n      dup2\n        /* \"#utility.yul\":3138:3162   */\n      tag_200\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3133:3136   */\n      dup3\n        /* \"#utility.yul\":3126:3163   */\n      mstore\n        /* \"#utility.yul\":3051:3169   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3175:3397   */\n    tag_37:\n        /* \"#utility.yul\":3268:3272   */\n      0x00\n        /* \"#utility.yul\":3306:3308   */\n      0x20\n        /* \"#utility.yul\":3295:3304   */\n      dup3\n        /* \"#utility.yul\":3291:3309   */\n      add\n        /* \"#utility.yul\":3283:3309   */\n      swap1\n      pop\n        /* \"#utility.yul\":3319:3390   */\n      tag_288\n        /* \"#utility.yul\":3387:3388   */\n      0x00\n        /* \"#utility.yul\":3376:3385   */\n      dup4\n        /* \"#utility.yul\":3372:3389   */\n      add\n        /* \"#utility.yul\":3363:3369   */\n      dup5\n        /* \"#utility.yul\":3319:3390   */\n      tag_203\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3175:3397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3403:3877   */\n    tag_40:\n        /* \"#utility.yul\":3471:3477   */\n      0x00\n        /* \"#utility.yul\":3479:3485   */\n      dup1\n        /* \"#utility.yul\":3528:3530   */\n      0x40\n        /* \"#utility.yul\":3516:3525   */\n      dup4\n        /* \"#utility.yul\":3507:3514   */\n      dup6\n        /* \"#utility.yul\":3503:3526   */\n      sub\n        /* \"#utility.yul\":3499:3531   */\n      slt\n        /* \"#utility.yul\":3496:3615   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":3534:3613   */\n      tag_291\n      tag_189\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3496:3615   */\n    tag_290:\n        /* \"#utility.yul\":3654:3655   */\n      0x00\n        /* \"#utility.yul\":3679:3732   */\n      tag_292\n        /* \"#utility.yul\":3724:3731   */\n      dup6\n        /* \"#utility.yul\":3715:3721   */\n      dup3\n        /* \"#utility.yul\":3704:3713   */\n      dup7\n        /* \"#utility.yul\":3700:3722   */\n      add\n        /* \"#utility.yul\":3679:3732   */\n      tag_202\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3669:3732   */\n      swap3\n      pop\n        /* \"#utility.yul\":3625:3742   */\n      pop\n        /* \"#utility.yul\":3781:3783   */\n      0x20\n        /* \"#utility.yul\":3807:3860   */\n      tag_293\n        /* \"#utility.yul\":3852:3859   */\n      dup6\n        /* \"#utility.yul\":3843:3849   */\n      dup3\n        /* \"#utility.yul\":3832:3841   */\n      dup7\n        /* \"#utility.yul\":3828:3850   */\n      add\n        /* \"#utility.yul\":3807:3860   */\n      tag_199\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3797:3860   */\n      swap2\n      pop\n        /* \"#utility.yul\":3752:3870   */\n      pop\n        /* \"#utility.yul\":3403:3877   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3883:3943   */\n    tag_204:\n        /* \"#utility.yul\":3911:3914   */\n      0x00\n        /* \"#utility.yul\":3932:3937   */\n      dup2\n        /* \"#utility.yul\":3925:3937   */\n      swap1\n      pop\n        /* \"#utility.yul\":3883:3943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3949:4091   */\n    tag_205:\n        /* \"#utility.yul\":3999:4008   */\n      0x00\n        /* \"#utility.yul\":4032:4085   */\n      tag_296\n        /* \"#utility.yul\":4050:4084   */\n      tag_297\n        /* \"#utility.yul\":4059:4083   */\n      tag_298\n        /* \"#utility.yul\":4077:4082   */\n      dup5\n        /* \"#utility.yul\":4059:4083   */\n      tag_196\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4050:4084   */\n      tag_204\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4032:4085   */\n      tag_196\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4019:4085   */\n      swap1\n      pop\n        /* \"#utility.yul\":3949:4091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4097:4223   */\n    tag_206:\n        /* \"#utility.yul\":4147:4156   */\n      0x00\n        /* \"#utility.yul\":4180:4217   */\n      tag_300\n        /* \"#utility.yul\":4211:4216   */\n      dup3\n        /* \"#utility.yul\":4180:4217   */\n      tag_205\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4167:4217   */\n      swap1\n      pop\n        /* \"#utility.yul\":4097:4223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4229:4378   */\n    tag_207:\n        /* \"#utility.yul\":4302:4311   */\n      0x00\n        /* \"#utility.yul\":4335:4372   */\n      tag_302\n        /* \"#utility.yul\":4366:4371   */\n      dup3\n        /* \"#utility.yul\":4335:4372   */\n      tag_206\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4322:4372   */\n      swap1\n      pop\n        /* \"#utility.yul\":4229:4378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4384:4561   */\n    tag_208:\n        /* \"#utility.yul\":4494:4554   */\n      tag_304\n        /* \"#utility.yul\":4548:4553   */\n      dup2\n        /* \"#utility.yul\":4494:4554   */\n      tag_207\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4489:4492   */\n      dup3\n        /* \"#utility.yul\":4482:4555   */\n      mstore\n        /* \"#utility.yul\":4384:4561   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4567:4835   */\n    tag_51:\n        /* \"#utility.yul\":4683:4687   */\n      0x00\n        /* \"#utility.yul\":4721:4723   */\n      0x20\n        /* \"#utility.yul\":4710:4719   */\n      dup3\n        /* \"#utility.yul\":4706:4724   */\n      add\n        /* \"#utility.yul\":4698:4724   */\n      swap1\n      pop\n        /* \"#utility.yul\":4734:4828   */\n      tag_306\n        /* \"#utility.yul\":4825:4826   */\n      0x00\n        /* \"#utility.yul\":4814:4823   */\n      dup4\n        /* \"#utility.yul\":4810:4827   */\n      add\n        /* \"#utility.yul\":4801:4807   */\n      dup5\n        /* \"#utility.yul\":4734:4828   */\n      tag_208\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4567:4835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4841:4990   */\n    tag_209:\n        /* \"#utility.yul\":4877:4884   */\n      0x00\n        /* \"#utility.yul\":4917:4983   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4910:4915   */\n      dup3\n        /* \"#utility.yul\":4906:4984   */\n      and\n        /* \"#utility.yul\":4895:4984   */\n      swap1\n      pop\n        /* \"#utility.yul\":4841:4990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4996:5111   */\n    tag_210:\n        /* \"#utility.yul\":5081:5104   */\n      tag_309\n        /* \"#utility.yul\":5098:5103   */\n      dup2\n        /* \"#utility.yul\":5081:5104   */\n      tag_209\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":5076:5079   */\n      dup3\n        /* \"#utility.yul\":5069:5105   */\n      mstore\n        /* \"#utility.yul\":4996:5111   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5117:5216   */\n    tag_211:\n        /* \"#utility.yul\":5169:5175   */\n      0x00\n        /* \"#utility.yul\":5203:5208   */\n      dup2\n        /* \"#utility.yul\":5197:5209   */\n      mload\n        /* \"#utility.yul\":5187:5209   */\n      swap1\n      pop\n        /* \"#utility.yul\":5117:5216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5222:5391   */\n    tag_212:\n        /* \"#utility.yul\":5306:5317   */\n      0x00\n        /* \"#utility.yul\":5340:5346   */\n      dup3\n        /* \"#utility.yul\":5335:5338   */\n      dup3\n        /* \"#utility.yul\":5328:5347   */\n      mstore\n        /* \"#utility.yul\":5380:5384   */\n      0x20\n        /* \"#utility.yul\":5375:5378   */\n      dup3\n        /* \"#utility.yul\":5371:5385   */\n      add\n        /* \"#utility.yul\":5356:5385   */\n      swap1\n      pop\n        /* \"#utility.yul\":5222:5391   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5397:5536   */\n    tag_213:\n        /* \"#utility.yul\":5486:5492   */\n      dup3\n        /* \"#utility.yul\":5481:5484   */\n      dup2\n        /* \"#utility.yul\":5476:5479   */\n      dup4\n        /* \"#utility.yul\":5470:5493   */\n      mcopy\n        /* \"#utility.yul\":5527:5528   */\n      0x00\n        /* \"#utility.yul\":5518:5524   */\n      dup4\n        /* \"#utility.yul\":5513:5516   */\n      dup4\n        /* \"#utility.yul\":5509:5525   */\n      add\n        /* \"#utility.yul\":5502:5529   */\n      mstore\n        /* \"#utility.yul\":5397:5536   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5542:5644   */\n    tag_214:\n        /* \"#utility.yul\":5583:5589   */\n      0x00\n        /* \"#utility.yul\":5634:5636   */\n      0x1f\n        /* \"#utility.yul\":5630:5637   */\n      not\n        /* \"#utility.yul\":5625:5627   */\n      0x1f\n        /* \"#utility.yul\":5618:5623   */\n      dup4\n        /* \"#utility.yul\":5614:5628   */\n      add\n        /* \"#utility.yul\":5610:5638   */\n      and\n        /* \"#utility.yul\":5600:5638   */\n      swap1\n      pop\n        /* \"#utility.yul\":5542:5644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5650:6027   */\n    tag_215:\n        /* \"#utility.yul\":5738:5741   */\n      0x00\n        /* \"#utility.yul\":5766:5805   */\n      tag_315\n        /* \"#utility.yul\":5799:5804   */\n      dup3\n        /* \"#utility.yul\":5766:5805   */\n      tag_211\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5821:5892   */\n      tag_316\n        /* \"#utility.yul\":5885:5891   */\n      dup2\n        /* \"#utility.yul\":5880:5883   */\n      dup6\n        /* \"#utility.yul\":5821:5892   */\n      tag_212\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5814:5892   */\n      swap4\n      pop\n        /* \"#utility.yul\":5901:5966   */\n      tag_317\n        /* \"#utility.yul\":5959:5965   */\n      dup2\n        /* \"#utility.yul\":5954:5957   */\n      dup6\n        /* \"#utility.yul\":5947:5951   */\n      0x20\n        /* \"#utility.yul\":5940:5945   */\n      dup7\n        /* \"#utility.yul\":5936:5952   */\n      add\n        /* \"#utility.yul\":5901:5966   */\n      tag_213\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5991:6020   */\n      tag_318\n        /* \"#utility.yul\":6013:6019   */\n      dup2\n        /* \"#utility.yul\":5991:6020   */\n      tag_214\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5986:5989   */\n      dup5\n        /* \"#utility.yul\":5982:6021   */\n      add\n        /* \"#utility.yul\":5975:6021   */\n      swap2\n      pop\n        /* \"#utility.yul\":5742:6027   */\n      pop\n        /* \"#utility.yul\":5650:6027   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6033:6110   */\n    tag_216:\n        /* \"#utility.yul\":6070:6077   */\n      0x00\n        /* \"#utility.yul\":6099:6104   */\n      dup2\n        /* \"#utility.yul\":6088:6104   */\n      swap1\n      pop\n        /* \"#utility.yul\":6033:6110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6116:6234   */\n    tag_217:\n        /* \"#utility.yul\":6203:6227   */\n      tag_321\n        /* \"#utility.yul\":6221:6226   */\n      dup2\n        /* \"#utility.yul\":6203:6227   */\n      tag_216\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":6198:6201   */\n      dup3\n        /* \"#utility.yul\":6191:6228   */\n      mstore\n        /* \"#utility.yul\":6116:6234   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6240:6358   */\n    tag_218:\n        /* \"#utility.yul\":6327:6351   */\n      tag_323\n        /* \"#utility.yul\":6345:6350   */\n      dup2\n        /* \"#utility.yul\":6327:6351   */\n      tag_197\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":6322:6325   */\n      dup3\n        /* \"#utility.yul\":6315:6352   */\n      mstore\n        /* \"#utility.yul\":6240:6358   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6364:6478   */\n    tag_219:\n        /* \"#utility.yul\":6431:6437   */\n      0x00\n        /* \"#utility.yul\":6465:6470   */\n      dup2\n        /* \"#utility.yul\":6459:6471   */\n      mload\n        /* \"#utility.yul\":6449:6471   */\n      swap1\n      pop\n        /* \"#utility.yul\":6364:6478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6484:6668   */\n    tag_220:\n        /* \"#utility.yul\":6583:6594   */\n      0x00\n        /* \"#utility.yul\":6617:6623   */\n      dup3\n        /* \"#utility.yul\":6612:6615   */\n      dup3\n        /* \"#utility.yul\":6605:6624   */\n      mstore\n        /* \"#utility.yul\":6657:6661   */\n      0x20\n        /* \"#utility.yul\":6652:6655   */\n      dup3\n        /* \"#utility.yul\":6648:6662   */\n      add\n        /* \"#utility.yul\":6633:6662   */\n      swap1\n      pop\n        /* \"#utility.yul\":6484:6668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6674:6806   */\n    tag_221:\n        /* \"#utility.yul\":6741:6745   */\n      0x00\n        /* \"#utility.yul\":6764:6767   */\n      dup2\n        /* \"#utility.yul\":6756:6767   */\n      swap1\n      pop\n        /* \"#utility.yul\":6794:6798   */\n      0x20\n        /* \"#utility.yul\":6789:6792   */\n      dup3\n        /* \"#utility.yul\":6785:6799   */\n      add\n        /* \"#utility.yul\":6777:6799   */\n      swap1\n      pop\n        /* \"#utility.yul\":6674:6806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6812:6920   */\n    tag_222:\n        /* \"#utility.yul\":6889:6913   */\n      tag_328\n        /* \"#utility.yul\":6907:6912   */\n      dup2\n        /* \"#utility.yul\":6889:6913   */\n      tag_216\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":6884:6887   */\n      dup3\n        /* \"#utility.yul\":6877:6914   */\n      mstore\n        /* \"#utility.yul\":6812:6920   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6926:7105   */\n    tag_223:\n        /* \"#utility.yul\":6995:7005   */\n      0x00\n        /* \"#utility.yul\":7016:7062   */\n      tag_330\n        /* \"#utility.yul\":7058:7061   */\n      dup4\n        /* \"#utility.yul\":7050:7056   */\n      dup4\n        /* \"#utility.yul\":7016:7062   */\n      tag_222\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7094:7098   */\n      0x20\n        /* \"#utility.yul\":7089:7092   */\n      dup4\n        /* \"#utility.yul\":7085:7099   */\n      add\n        /* \"#utility.yul\":7071:7099   */\n      swap1\n      pop\n        /* \"#utility.yul\":6926:7105   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7111:7224   */\n    tag_224:\n        /* \"#utility.yul\":7181:7185   */\n      0x00\n        /* \"#utility.yul\":7213:7217   */\n      0x20\n        /* \"#utility.yul\":7208:7211   */\n      dup3\n        /* \"#utility.yul\":7204:7218   */\n      add\n        /* \"#utility.yul\":7196:7218   */\n      swap1\n      pop\n        /* \"#utility.yul\":7111:7224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7260:7992   */\n    tag_225:\n        /* \"#utility.yul\":7379:7382   */\n      0x00\n        /* \"#utility.yul\":7408:7462   */\n      tag_333\n        /* \"#utility.yul\":7456:7461   */\n      dup3\n        /* \"#utility.yul\":7408:7462   */\n      tag_219\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":7478:7564   */\n      tag_334\n        /* \"#utility.yul\":7557:7563   */\n      dup2\n        /* \"#utility.yul\":7552:7555   */\n      dup6\n        /* \"#utility.yul\":7478:7564   */\n      tag_220\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":7471:7564   */\n      swap4\n      pop\n        /* \"#utility.yul\":7588:7644   */\n      tag_335\n        /* \"#utility.yul\":7638:7643   */\n      dup4\n        /* \"#utility.yul\":7588:7644   */\n      tag_221\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7667:7674   */\n      dup1\n        /* \"#utility.yul\":7698:7699   */\n      0x00\n        /* \"#utility.yul\":7683:7967   */\n    tag_336:\n        /* \"#utility.yul\":7708:7714   */\n      dup4\n        /* \"#utility.yul\":7705:7706   */\n      dup2\n        /* \"#utility.yul\":7702:7715   */\n      lt\n        /* \"#utility.yul\":7683:7967   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":7784:7790   */\n      dup2\n        /* \"#utility.yul\":7778:7791   */\n      mload\n        /* \"#utility.yul\":7811:7874   */\n      tag_339\n        /* \"#utility.yul\":7870:7873   */\n      dup9\n        /* \"#utility.yul\":7855:7868   */\n      dup3\n        /* \"#utility.yul\":7811:7874   */\n      tag_223\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":7804:7874   */\n      swap8\n      pop\n        /* \"#utility.yul\":7897:7957   */\n      tag_340\n        /* \"#utility.yul\":7950:7956   */\n      dup4\n        /* \"#utility.yul\":7897:7957   */\n      tag_224\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":7887:7957   */\n      swap3\n      pop\n        /* \"#utility.yul\":7743:7967   */\n      pop\n        /* \"#utility.yul\":7730:7731   */\n      0x01\n        /* \"#utility.yul\":7727:7728   */\n      dup2\n        /* \"#utility.yul\":7723:7732   */\n      add\n        /* \"#utility.yul\":7718:7732   */\n      swap1\n      pop\n        /* \"#utility.yul\":7683:7967   */\n      jump(tag_336)\n    tag_338:\n        /* \"#utility.yul\":7687:7701   */\n      pop\n        /* \"#utility.yul\":7983:7986   */\n      dup6\n        /* \"#utility.yul\":7976:7986   */\n      swap4\n      pop\n        /* \"#utility.yul\":7384:7992   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7260:7992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7998:9213   */\n    tag_55:\n        /* \"#utility.yul\":8347:8351   */\n      0x00\n        /* \"#utility.yul\":8385:8388   */\n      0xe0\n        /* \"#utility.yul\":8374:8383   */\n      dup3\n        /* \"#utility.yul\":8370:8389   */\n      add\n        /* \"#utility.yul\":8362:8389   */\n      swap1\n      pop\n        /* \"#utility.yul\":8399:8468   */\n      tag_342\n        /* \"#utility.yul\":8465:8466   */\n      0x00\n        /* \"#utility.yul\":8454:8463   */\n      dup4\n        /* \"#utility.yul\":8450:8467   */\n      add\n        /* \"#utility.yul\":8441:8447   */\n      dup11\n        /* \"#utility.yul\":8399:8468   */\n      tag_210\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":8515:8524   */\n      dup2\n        /* \"#utility.yul\":8509:8513   */\n      dup2\n        /* \"#utility.yul\":8505:8525   */\n      sub\n        /* \"#utility.yul\":8500:8502   */\n      0x20\n        /* \"#utility.yul\":8489:8498   */\n      dup4\n        /* \"#utility.yul\":8485:8503   */\n      add\n        /* \"#utility.yul\":8478:8526   */\n      mstore\n        /* \"#utility.yul\":8543:8621   */\n      tag_343\n        /* \"#utility.yul\":8616:8620   */\n      dup2\n        /* \"#utility.yul\":8607:8613   */\n      dup10\n        /* \"#utility.yul\":8543:8621   */\n      tag_215\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8535:8621   */\n      swap1\n      pop\n        /* \"#utility.yul\":8668:8677   */\n      dup2\n        /* \"#utility.yul\":8662:8666   */\n      dup2\n        /* \"#utility.yul\":8658:8678   */\n      sub\n        /* \"#utility.yul\":8653:8655   */\n      0x40\n        /* \"#utility.yul\":8642:8651   */\n      dup4\n        /* \"#utility.yul\":8638:8656   */\n      add\n        /* \"#utility.yul\":8631:8679   */\n      mstore\n        /* \"#utility.yul\":8696:8774   */\n      tag_344\n        /* \"#utility.yul\":8769:8773   */\n      dup2\n        /* \"#utility.yul\":8760:8766   */\n      dup9\n        /* \"#utility.yul\":8696:8774   */\n      tag_215\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":8688:8774   */\n      swap1\n      pop\n        /* \"#utility.yul\":8784:8856   */\n      tag_345\n        /* \"#utility.yul\":8852:8854   */\n      0x60\n        /* \"#utility.yul\":8841:8850   */\n      dup4\n        /* \"#utility.yul\":8837:8855   */\n      add\n        /* \"#utility.yul\":8828:8834   */\n      dup8\n        /* \"#utility.yul\":8784:8856   */\n      tag_217\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8866:8939   */\n      tag_346\n        /* \"#utility.yul\":8934:8937   */\n      0x80\n        /* \"#utility.yul\":8923:8932   */\n      dup4\n        /* \"#utility.yul\":8919:8938   */\n      add\n        /* \"#utility.yul\":8910:8916   */\n      dup7\n        /* \"#utility.yul\":8866:8939   */\n      tag_218\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":8949:9022   */\n      tag_347\n        /* \"#utility.yul\":9017:9020   */\n      0xa0\n        /* \"#utility.yul\":9006:9015   */\n      dup4\n        /* \"#utility.yul\":9002:9021   */\n      add\n        /* \"#utility.yul\":8993:8999   */\n      dup6\n        /* \"#utility.yul\":8949:9022   */\n      tag_203\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":9070:9079   */\n      dup2\n        /* \"#utility.yul\":9064:9068   */\n      dup2\n        /* \"#utility.yul\":9060:9080   */\n      sub\n        /* \"#utility.yul\":9054:9057   */\n      0xc0\n        /* \"#utility.yul\":9043:9052   */\n      dup4\n        /* \"#utility.yul\":9039:9058   */\n      add\n        /* \"#utility.yul\":9032:9081   */\n      mstore\n        /* \"#utility.yul\":9098:9206   */\n      tag_348\n        /* \"#utility.yul\":9201:9205   */\n      dup2\n        /* \"#utility.yul\":9192:9198   */\n      dup5\n        /* \"#utility.yul\":9098:9206   */\n      tag_225\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":9090:9206   */\n      swap1\n      pop\n        /* \"#utility.yul\":7998:9213   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9219:9336   */\n    tag_226:\n        /* \"#utility.yul\":9328:9329   */\n      0x00\n        /* \"#utility.yul\":9325:9326   */\n      dup1\n        /* \"#utility.yul\":9318:9330   */\n      revert\n        /* \"#utility.yul\":9342:9459   */\n    tag_227:\n        /* \"#utility.yul\":9451:9452   */\n      0x00\n        /* \"#utility.yul\":9448:9449   */\n      dup1\n        /* \"#utility.yul\":9441:9453   */\n      revert\n        /* \"#utility.yul\":9465:9582   */\n    tag_228:\n        /* \"#utility.yul\":9574:9575   */\n      0x00\n        /* \"#utility.yul\":9571:9572   */\n      dup1\n        /* \"#utility.yul\":9564:9576   */\n      revert\n        /* \"#utility.yul\":9601:10153   */\n    tag_229:\n        /* \"#utility.yul\":9658:9666   */\n      0x00\n        /* \"#utility.yul\":9668:9674   */\n      dup1\n        /* \"#utility.yul\":9718:9721   */\n      dup4\n        /* \"#utility.yul\":9711:9715   */\n      0x1f\n        /* \"#utility.yul\":9703:9709   */\n      dup5\n        /* \"#utility.yul\":9699:9716   */\n      add\n        /* \"#utility.yul\":9695:9722   */\n      slt\n        /* \"#utility.yul\":9685:9807   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":9726:9805   */\n      tag_354\n      tag_226\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":9685:9807   */\n    tag_353:\n        /* \"#utility.yul\":9839:9845   */\n      dup3\n        /* \"#utility.yul\":9826:9846   */\n      calldataload\n        /* \"#utility.yul\":9816:9846   */\n      swap1\n      pop\n        /* \"#utility.yul\":9869:9887   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9861:9867   */\n      dup2\n        /* \"#utility.yul\":9858:9888   */\n      gt\n        /* \"#utility.yul\":9855:9972   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":9891:9970   */\n      tag_356\n      tag_227\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9855:9972   */\n    tag_355:\n        /* \"#utility.yul\":10005:10009   */\n      0x20\n        /* \"#utility.yul\":9997:10003   */\n      dup4\n        /* \"#utility.yul\":9993:10010   */\n      add\n        /* \"#utility.yul\":9981:10010   */\n      swap2\n      pop\n        /* \"#utility.yul\":10059:10062   */\n      dup4\n        /* \"#utility.yul\":10051:10055   */\n      0x01\n        /* \"#utility.yul\":10043:10049   */\n      dup3\n        /* \"#utility.yul\":10039:10056   */\n      mul\n        /* \"#utility.yul\":10029:10037   */\n      dup4\n        /* \"#utility.yul\":10025:10057   */\n      add\n        /* \"#utility.yul\":10022:10063   */\n      gt\n        /* \"#utility.yul\":10019:10147   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":10066:10145   */\n      tag_358\n      tag_228\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":10019:10147   */\n    tag_357:\n        /* \"#utility.yul\":9601:10153   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10176:10744   */\n    tag_230:\n        /* \"#utility.yul\":10249:10257   */\n      0x00\n        /* \"#utility.yul\":10259:10265   */\n      dup1\n        /* \"#utility.yul\":10309:10312   */\n      dup4\n        /* \"#utility.yul\":10302:10306   */\n      0x1f\n        /* \"#utility.yul\":10294:10300   */\n      dup5\n        /* \"#utility.yul\":10290:10307   */\n      add\n        /* \"#utility.yul\":10286:10313   */\n      slt\n        /* \"#utility.yul\":10276:10398   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":10317:10396   */\n      tag_361\n      tag_226\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":10276:10398   */\n    tag_360:\n        /* \"#utility.yul\":10430:10436   */\n      dup3\n        /* \"#utility.yul\":10417:10437   */\n      calldataload\n        /* \"#utility.yul\":10407:10437   */\n      swap1\n      pop\n        /* \"#utility.yul\":10460:10478   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10452:10458   */\n      dup2\n        /* \"#utility.yul\":10449:10479   */\n      gt\n        /* \"#utility.yul\":10446:10563   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":10482:10561   */\n      tag_363\n      tag_227\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":10446:10563   */\n    tag_362:\n        /* \"#utility.yul\":10596:10600   */\n      0x20\n        /* \"#utility.yul\":10588:10594   */\n      dup4\n        /* \"#utility.yul\":10584:10601   */\n      add\n        /* \"#utility.yul\":10572:10601   */\n      swap2\n      pop\n        /* \"#utility.yul\":10650:10653   */\n      dup4\n        /* \"#utility.yul\":10642:10646   */\n      0x20\n        /* \"#utility.yul\":10634:10640   */\n      dup3\n        /* \"#utility.yul\":10630:10647   */\n      mul\n        /* \"#utility.yul\":10620:10628   */\n      dup4\n        /* \"#utility.yul\":10616:10648   */\n      add\n        /* \"#utility.yul\":10613:10654   */\n      gt\n        /* \"#utility.yul\":10610:10738   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":10657:10736   */\n      tag_365\n      tag_228\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10610:10738   */\n    tag_364:\n        /* \"#utility.yul\":10176:10744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10764:11317   */\n    tag_231:\n        /* \"#utility.yul\":10822:10830   */\n      0x00\n        /* \"#utility.yul\":10832:10838   */\n      dup1\n        /* \"#utility.yul\":10882:10885   */\n      dup4\n        /* \"#utility.yul\":10875:10879   */\n      0x1f\n        /* \"#utility.yul\":10867:10873   */\n      dup5\n        /* \"#utility.yul\":10863:10880   */\n      add\n        /* \"#utility.yul\":10859:10886   */\n      slt\n        /* \"#utility.yul\":10849:10971   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":10890:10969   */\n      tag_368\n      tag_226\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":10849:10971   */\n    tag_367:\n        /* \"#utility.yul\":11003:11009   */\n      dup3\n        /* \"#utility.yul\":10990:11010   */\n      calldataload\n        /* \"#utility.yul\":10980:11010   */\n      swap1\n      pop\n        /* \"#utility.yul\":11033:11051   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11025:11031   */\n      dup2\n        /* \"#utility.yul\":11022:11052   */\n      gt\n        /* \"#utility.yul\":11019:11136   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":11055:11134   */\n      tag_370\n      tag_227\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":11019:11136   */\n    tag_369:\n        /* \"#utility.yul\":11169:11173   */\n      0x20\n        /* \"#utility.yul\":11161:11167   */\n      dup4\n        /* \"#utility.yul\":11157:11174   */\n      add\n        /* \"#utility.yul\":11145:11174   */\n      swap2\n      pop\n        /* \"#utility.yul\":11223:11226   */\n      dup4\n        /* \"#utility.yul\":11215:11219   */\n      0x01\n        /* \"#utility.yul\":11207:11213   */\n      dup3\n        /* \"#utility.yul\":11203:11220   */\n      mul\n        /* \"#utility.yul\":11193:11201   */\n      dup4\n        /* \"#utility.yul\":11189:11221   */\n      add\n        /* \"#utility.yul\":11186:11227   */\n      gt\n        /* \"#utility.yul\":11183:11311   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":11230:11309   */\n      tag_372\n      tag_228\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":11183:11311   */\n    tag_371:\n        /* \"#utility.yul\":10764:11317   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11323:12570   */\n    tag_81:\n        /* \"#utility.yul\":11450:11456   */\n      0x00\n        /* \"#utility.yul\":11458:11464   */\n      dup1\n        /* \"#utility.yul\":11466:11472   */\n      0x00\n        /* \"#utility.yul\":11474:11480   */\n      dup1\n        /* \"#utility.yul\":11482:11488   */\n      0x00\n        /* \"#utility.yul\":11490:11496   */\n      dup1\n        /* \"#utility.yul\":11539:11541   */\n      0x60\n        /* \"#utility.yul\":11527:11536   */\n      dup8\n        /* \"#utility.yul\":11518:11525   */\n      dup10\n        /* \"#utility.yul\":11514:11537   */\n      sub\n        /* \"#utility.yul\":11510:11542   */\n      slt\n        /* \"#utility.yul\":11507:11626   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":11545:11624   */\n      tag_375\n      tag_189\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":11507:11626   */\n    tag_374:\n        /* \"#utility.yul\":11693:11694   */\n      0x00\n        /* \"#utility.yul\":11682:11691   */\n      dup8\n        /* \"#utility.yul\":11678:11695   */\n      add\n        /* \"#utility.yul\":11665:11696   */\n      calldataload\n        /* \"#utility.yul\":11723:11741   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11715:11721   */\n      dup2\n        /* \"#utility.yul\":11712:11742   */\n      gt\n        /* \"#utility.yul\":11709:11826   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":11745:11824   */\n      tag_377\n      tag_190\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":11709:11826   */\n    tag_376:\n        /* \"#utility.yul\":11858:11922   */\n      tag_378\n        /* \"#utility.yul\":11914:11921   */\n      dup10\n        /* \"#utility.yul\":11905:11911   */\n      dup3\n        /* \"#utility.yul\":11894:11903   */\n      dup11\n        /* \"#utility.yul\":11890:11912   */\n      add\n        /* \"#utility.yul\":11858:11922   */\n      tag_229\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":11840:11922   */\n      swap7\n      pop\n      swap7\n      pop\n        /* \"#utility.yul\":11636:11932   */\n      pop\n        /* \"#utility.yul\":11999:12001   */\n      0x20\n        /* \"#utility.yul\":11988:11997   */\n      dup8\n        /* \"#utility.yul\":11984:12002   */\n      add\n        /* \"#utility.yul\":11971:12003   */\n      calldataload\n        /* \"#utility.yul\":12030:12048   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12022:12028   */\n      dup2\n        /* \"#utility.yul\":12019:12049   */\n      gt\n        /* \"#utility.yul\":12016:12133   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":12052:12131   */\n      tag_380\n      tag_190\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12016:12133   */\n    tag_379:\n        /* \"#utility.yul\":12165:12245   */\n      tag_381\n        /* \"#utility.yul\":12237:12244   */\n      dup10\n        /* \"#utility.yul\":12228:12234   */\n      dup3\n        /* \"#utility.yul\":12217:12226   */\n      dup11\n        /* \"#utility.yul\":12213:12235   */\n      add\n        /* \"#utility.yul\":12165:12245   */\n      tag_230\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":12147:12245   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":11942:12255   */\n      pop\n        /* \"#utility.yul\":12322:12324   */\n      0x40\n        /* \"#utility.yul\":12311:12320   */\n      dup8\n        /* \"#utility.yul\":12307:12325   */\n      add\n        /* \"#utility.yul\":12294:12326   */\n      calldataload\n        /* \"#utility.yul\":12353:12371   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12345:12351   */\n      dup2\n        /* \"#utility.yul\":12342:12372   */\n      gt\n        /* \"#utility.yul\":12339:12456   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":12375:12454   */\n      tag_383\n      tag_190\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":12339:12456   */\n    tag_382:\n        /* \"#utility.yul\":12488:12553   */\n      tag_384\n        /* \"#utility.yul\":12545:12552   */\n      dup10\n        /* \"#utility.yul\":12536:12542   */\n      dup3\n        /* \"#utility.yul\":12525:12534   */\n      dup11\n        /* \"#utility.yul\":12521:12543   */\n      add\n        /* \"#utility.yul\":12488:12553   */\n      tag_231\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":12470:12553   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":12265:12563   */\n      pop\n        /* \"#utility.yul\":11323:12570   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":12576:12756   */\n    tag_112:\n        /* \"#utility.yul\":12624:12701   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12621:12622   */\n      0x00\n        /* \"#utility.yul\":12614:12702   */\n      mstore\n        /* \"#utility.yul\":12721:12725   */\n      0x41\n        /* \"#utility.yul\":12718:12719   */\n      0x04\n        /* \"#utility.yul\":12711:12726   */\n      mstore\n        /* \"#utility.yul\":12745:12749   */\n      0x24\n        /* \"#utility.yul\":12742:12743   */\n      0x00\n        /* \"#utility.yul\":12735:12750   */\n      revert\n        /* \"#utility.yul\":12762:12930   */\n    tag_232:\n        /* \"#utility.yul\":12845:12856   */\n      0x00\n        /* \"#utility.yul\":12879:12885   */\n      dup3\n        /* \"#utility.yul\":12874:12877   */\n      dup3\n        /* \"#utility.yul\":12867:12886   */\n      mstore\n        /* \"#utility.yul\":12919:12923   */\n      0x20\n        /* \"#utility.yul\":12914:12917   */\n      dup3\n        /* \"#utility.yul\":12910:12924   */\n      add\n        /* \"#utility.yul\":12895:12924   */\n      swap1\n      pop\n        /* \"#utility.yul\":12762:12930   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12936:13084   */\n    tag_233:\n        /* \"#utility.yul\":13034:13040   */\n      dup3\n        /* \"#utility.yul\":13029:13032   */\n      dup2\n        /* \"#utility.yul\":13024:13027   */\n      dup4\n        /* \"#utility.yul\":13011:13041   */\n      calldatacopy\n        /* \"#utility.yul\":13075:13076   */\n      0x00\n        /* \"#utility.yul\":13066:13072   */\n      dup4\n        /* \"#utility.yul\":13061:13064   */\n      dup4\n        /* \"#utility.yul\":13057:13073   */\n      add\n        /* \"#utility.yul\":13050:13077   */\n      mstore\n        /* \"#utility.yul\":12936:13084   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13112:13426   */\n    tag_234:\n        /* \"#utility.yul\":13208:13211   */\n      0x00\n        /* \"#utility.yul\":13229:13299   */\n      tag_389\n        /* \"#utility.yul\":13292:13298   */\n      dup4\n        /* \"#utility.yul\":13287:13290   */\n      dup6\n        /* \"#utility.yul\":13229:13299   */\n      tag_232\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13222:13299   */\n      swap4\n      pop\n        /* \"#utility.yul\":13309:13365   */\n      tag_390\n        /* \"#utility.yul\":13358:13364   */\n      dup4\n        /* \"#utility.yul\":13353:13356   */\n      dup6\n        /* \"#utility.yul\":13346:13351   */\n      dup5\n        /* \"#utility.yul\":13309:13365   */\n      tag_233\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":13390:13419   */\n      tag_391\n        /* \"#utility.yul\":13412:13418   */\n      dup4\n        /* \"#utility.yul\":13390:13419   */\n      tag_214\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":13385:13388   */\n      dup5\n        /* \"#utility.yul\":13381:13420   */\n      add\n        /* \"#utility.yul\":13374:13420   */\n      swap1\n      pop\n        /* \"#utility.yul\":13112:13426   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13432:13549   */\n    tag_235:\n        /* \"#utility.yul\":13541:13542   */\n      0x00\n        /* \"#utility.yul\":13538:13539   */\n      dup1\n        /* \"#utility.yul\":13531:13543   */\n      revert\n        /* \"#utility.yul\":13555:13654   */\n    tag_236:\n        /* \"#utility.yul\":13640:13646   */\n      dup3\n        /* \"#utility.yul\":13635:13638   */\n      dup2\n        /* \"#utility.yul\":13630:13633   */\n      dup4\n        /* \"#utility.yul\":13617:13647   */\n      calldatacopy\n        /* \"#utility.yul\":13555:13654   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13690:14227   */\n    tag_237:\n        /* \"#utility.yul\":13818:13821   */\n      0x00\n        /* \"#utility.yul\":13839:13925   */\n      tag_395\n        /* \"#utility.yul\":13918:13924   */\n      dup4\n        /* \"#utility.yul\":13913:13916   */\n      dup6\n        /* \"#utility.yul\":13839:13925   */\n      tag_220\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":13832:13925   */\n      swap4\n      pop\n        /* \"#utility.yul\":13949:14015   */\n      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13941:13947   */\n      dup4\n        /* \"#utility.yul\":13938:14016   */\n      gt\n        /* \"#utility.yul\":13935:14100   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":14019:14098   */\n      tag_397\n      tag_235\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":13935:14100   */\n    tag_396:\n        /* \"#utility.yul\":14131:14135   */\n      0x20\n        /* \"#utility.yul\":14123:14129   */\n      dup4\n        /* \"#utility.yul\":14119:14136   */\n      mul\n        /* \"#utility.yul\":14109:14136   */\n      swap3\n      pop\n        /* \"#utility.yul\":14146:14189   */\n      tag_398\n        /* \"#utility.yul\":14182:14188   */\n      dup4\n        /* \"#utility.yul\":14177:14180   */\n      dup6\n        /* \"#utility.yul\":14170:14175   */\n      dup5\n        /* \"#utility.yul\":14146:14189   */\n      tag_236\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":14214:14220   */\n      dup3\n        /* \"#utility.yul\":14209:14212   */\n      dup5\n        /* \"#utility.yul\":14205:14221   */\n      add\n        /* \"#utility.yul\":14198:14221   */\n      swap1\n      pop\n        /* \"#utility.yul\":13690:14227   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14233:14843   */\n    tag_133:\n        /* \"#utility.yul\":14442:14446   */\n      0x00\n        /* \"#utility.yul\":14480:14482   */\n      0x40\n        /* \"#utility.yul\":14469:14478   */\n      dup3\n        /* \"#utility.yul\":14465:14483   */\n      add\n        /* \"#utility.yul\":14457:14483   */\n      swap1\n      pop\n        /* \"#utility.yul\":14529:14538   */\n      dup2\n        /* \"#utility.yul\":14523:14527   */\n      dup2\n        /* \"#utility.yul\":14519:14539   */\n      sub\n        /* \"#utility.yul\":14515:14516   */\n      0x00\n        /* \"#utility.yul\":14504:14513   */\n      dup4\n        /* \"#utility.yul\":14500:14517   */\n      add\n        /* \"#utility.yul\":14493:14540   */\n      mstore\n        /* \"#utility.yul\":14557:14643   */\n      tag_400\n        /* \"#utility.yul\":14638:14642   */\n      dup2\n        /* \"#utility.yul\":14629:14635   */\n      dup7\n        /* \"#utility.yul\":14621:14627   */\n      dup9\n        /* \"#utility.yul\":14557:14643   */\n      tag_234\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":14549:14643   */\n      swap1\n      pop\n        /* \"#utility.yul\":14690:14699   */\n      dup2\n        /* \"#utility.yul\":14684:14688   */\n      dup2\n        /* \"#utility.yul\":14680:14700   */\n      sub\n        /* \"#utility.yul\":14675:14677   */\n      0x20\n        /* \"#utility.yul\":14664:14673   */\n      dup4\n        /* \"#utility.yul\":14660:14678   */\n      add\n        /* \"#utility.yul\":14653:14701   */\n      mstore\n        /* \"#utility.yul\":14718:14836   */\n      tag_401\n        /* \"#utility.yul\":14831:14835   */\n      dup2\n        /* \"#utility.yul\":14822:14828   */\n      dup5\n        /* \"#utility.yul\":14814:14820   */\n      dup7\n        /* \"#utility.yul\":14718:14836   */\n      tag_237\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":14710:14836   */\n      swap1\n      pop\n        /* \"#utility.yul\":14233:14843   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14849:14965   */\n    tag_238:\n        /* \"#utility.yul\":14919:14940   */\n      tag_403\n        /* \"#utility.yul\":14934:14939   */\n      dup2\n        /* \"#utility.yul\":14919:14940   */\n      tag_194\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":14912:14917   */\n      dup2\n        /* \"#utility.yul\":14909:14941   */\n      eq\n        /* \"#utility.yul\":14899:14959   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":14955:14956   */\n      0x00\n        /* \"#utility.yul\":14952:14953   */\n      dup1\n        /* \"#utility.yul\":14945:14957   */\n      revert\n        /* \"#utility.yul\":14899:14959   */\n    tag_404:\n        /* \"#utility.yul\":14849:14965   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14971:15108   */\n    tag_239:\n        /* \"#utility.yul\":15025:15030   */\n      0x00\n        /* \"#utility.yul\":15056:15062   */\n      dup2\n        /* \"#utility.yul\":15050:15063   */\n      mload\n        /* \"#utility.yul\":15041:15063   */\n      swap1\n      pop\n        /* \"#utility.yul\":15072:15102   */\n      tag_406\n        /* \"#utility.yul\":15096:15101   */\n      dup2\n        /* \"#utility.yul\":15072:15102   */\n      tag_238\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":14971:15108   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15114:15459   */\n    tag_137:\n        /* \"#utility.yul\":15181:15187   */\n      0x00\n        /* \"#utility.yul\":15230:15232   */\n      0x20\n        /* \"#utility.yul\":15218:15227   */\n      dup3\n        /* \"#utility.yul\":15209:15216   */\n      dup5\n        /* \"#utility.yul\":15205:15228   */\n      sub\n        /* \"#utility.yul\":15201:15233   */\n      slt\n        /* \"#utility.yul\":15198:15317   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":15236:15315   */\n      tag_409\n      tag_189\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":15198:15317   */\n    tag_408:\n        /* \"#utility.yul\":15356:15357   */\n      0x00\n        /* \"#utility.yul\":15381:15442   */\n      tag_410\n        /* \"#utility.yul\":15434:15441   */\n      dup5\n        /* \"#utility.yul\":15425:15431   */\n      dup3\n        /* \"#utility.yul\":15414:15423   */\n      dup6\n        /* \"#utility.yul\":15410:15432   */\n      add\n        /* \"#utility.yul\":15381:15442   */\n      tag_239\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":15371:15442   */\n      swap2\n      pop\n        /* \"#utility.yul\":15327:15452   */\n      pop\n        /* \"#utility.yul\":15114:15459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15465:15645   */\n    tag_240:\n        /* \"#utility.yul\":15605:15637   */\n      0x50726f6f6647656e65726174696f6e3a20496e76616c69642070726f6f660000\n        /* \"#utility.yul\":15601:15602   */\n      0x00\n        /* \"#utility.yul\":15593:15599   */\n      dup3\n        /* \"#utility.yul\":15589:15603   */\n      add\n        /* \"#utility.yul\":15582:15638   */\n      mstore\n        /* \"#utility.yul\":15465:15645   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15651:16017   */\n    tag_241:\n        /* \"#utility.yul\":15793:15796   */\n      0x00\n        /* \"#utility.yul\":15814:15881   */\n      tag_413\n        /* \"#utility.yul\":15878:15880   */\n      0x1e\n        /* \"#utility.yul\":15873:15876   */\n      dup4\n        /* \"#utility.yul\":15814:15881   */\n      tag_212\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":15807:15881   */\n      swap2\n      pop\n        /* \"#utility.yul\":15890:15983   */\n      tag_414\n        /* \"#utility.yul\":15979:15982   */\n      dup3\n        /* \"#utility.yul\":15890:15983   */\n      tag_240\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":16008:16010   */\n      0x20\n        /* \"#utility.yul\":16003:16006   */\n      dup3\n        /* \"#utility.yul\":15999:16011   */\n      add\n        /* \"#utility.yul\":15992:16011   */\n      swap1\n      pop\n        /* \"#utility.yul\":15651:16017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16023:16442   */\n    tag_140:\n        /* \"#utility.yul\":16189:16193   */\n      0x00\n        /* \"#utility.yul\":16227:16229   */\n      0x20\n        /* \"#utility.yul\":16216:16225   */\n      dup3\n        /* \"#utility.yul\":16212:16230   */\n      add\n        /* \"#utility.yul\":16204:16230   */\n      swap1\n      pop\n        /* \"#utility.yul\":16276:16285   */\n      dup2\n        /* \"#utility.yul\":16270:16274   */\n      dup2\n        /* \"#utility.yul\":16266:16286   */\n      sub\n        /* \"#utility.yul\":16262:16263   */\n      0x00\n        /* \"#utility.yul\":16251:16260   */\n      dup4\n        /* \"#utility.yul\":16247:16264   */\n      add\n        /* \"#utility.yul\":16240:16287   */\n      mstore\n        /* \"#utility.yul\":16304:16435   */\n      tag_416\n        /* \"#utility.yul\":16430:16434   */\n      dup2\n        /* \"#utility.yul\":16304:16435   */\n      tag_241\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":16296:16435   */\n      swap1\n      pop\n        /* \"#utility.yul\":16023:16442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16472:16789   */\n    tag_242:\n        /* \"#utility.yul\":16570:16573   */\n      0x00\n        /* \"#utility.yul\":16591:16662   */\n      tag_418\n        /* \"#utility.yul\":16655:16661   */\n      dup4\n        /* \"#utility.yul\":16650:16653   */\n      dup6\n        /* \"#utility.yul\":16591:16662   */\n      tag_212\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":16584:16662   */\n      swap4\n      pop\n        /* \"#utility.yul\":16672:16728   */\n      tag_419\n        /* \"#utility.yul\":16721:16727   */\n      dup4\n        /* \"#utility.yul\":16716:16719   */\n      dup6\n        /* \"#utility.yul\":16709:16714   */\n      dup5\n        /* \"#utility.yul\":16672:16728   */\n      tag_233\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":16753:16782   */\n      tag_420\n        /* \"#utility.yul\":16775:16781   */\n      dup4\n        /* \"#utility.yul\":16753:16782   */\n      tag_214\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":16748:16751   */\n      dup5\n        /* \"#utility.yul\":16744:16783   */\n      add\n        /* \"#utility.yul\":16737:16783   */\n      swap1\n      pop\n        /* \"#utility.yul\":16472:16789   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16795:17128   */\n    tag_142:\n        /* \"#utility.yul\":16918:16922   */\n      0x00\n        /* \"#utility.yul\":16956:16958   */\n      0x20\n        /* \"#utility.yul\":16945:16954   */\n      dup3\n        /* \"#utility.yul\":16941:16959   */\n      add\n        /* \"#utility.yul\":16933:16959   */\n      swap1\n      pop\n        /* \"#utility.yul\":17005:17014   */\n      dup2\n        /* \"#utility.yul\":16999:17003   */\n      dup2\n        /* \"#utility.yul\":16995:17015   */\n      sub\n        /* \"#utility.yul\":16991:16992   */\n      0x00\n        /* \"#utility.yul\":16980:16989   */\n      dup4\n        /* \"#utility.yul\":16976:16993   */\n      add\n        /* \"#utility.yul\":16969:17016   */\n      mstore\n        /* \"#utility.yul\":17033:17121   */\n      tag_422\n        /* \"#utility.yul\":17116:17120   */\n      dup2\n        /* \"#utility.yul\":17107:17113   */\n      dup5\n        /* \"#utility.yul\":17099:17105   */\n      dup7\n        /* \"#utility.yul\":17033:17121   */\n      tag_242\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":17025:17121   */\n      swap1\n      pop\n        /* \"#utility.yul\":16795:17128   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17134:17466   */\n    tag_168:\n        /* \"#utility.yul\":17255:17259   */\n      0x00\n        /* \"#utility.yul\":17293:17295   */\n      0x40\n        /* \"#utility.yul\":17282:17291   */\n      dup3\n        /* \"#utility.yul\":17278:17296   */\n      add\n        /* \"#utility.yul\":17270:17296   */\n      swap1\n      pop\n        /* \"#utility.yul\":17306:17377   */\n      tag_424\n        /* \"#utility.yul\":17374:17375   */\n      0x00\n        /* \"#utility.yul\":17363:17372   */\n      dup4\n        /* \"#utility.yul\":17359:17376   */\n      add\n        /* \"#utility.yul\":17350:17356   */\n      dup6\n        /* \"#utility.yul\":17306:17377   */\n      tag_218\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":17387:17459   */\n      tag_425\n        /* \"#utility.yul\":17455:17457   */\n      0x20\n        /* \"#utility.yul\":17444:17453   */\n      dup4\n        /* \"#utility.yul\":17440:17458   */\n      add\n        /* \"#utility.yul\":17431:17437   */\n      dup5\n        /* \"#utility.yul\":17387:17459   */\n      tag_203\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":17134:17466   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17472:17652   */\n    tag_243:\n        /* \"#utility.yul\":17520:17597   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17517:17518   */\n      0x00\n        /* \"#utility.yul\":17510:17598   */\n      mstore\n        /* \"#utility.yul\":17617:17621   */\n      0x22\n        /* \"#utility.yul\":17614:17615   */\n      0x04\n        /* \"#utility.yul\":17607:17622   */\n      mstore\n        /* \"#utility.yul\":17641:17645   */\n      0x24\n        /* \"#utility.yul\":17638:17639   */\n      0x00\n        /* \"#utility.yul\":17631:17646   */\n      revert\n        /* \"#utility.yul\":17658:17978   */\n    tag_175:\n        /* \"#utility.yul\":17702:17708   */\n      0x00\n        /* \"#utility.yul\":17739:17740   */\n      0x02\n        /* \"#utility.yul\":17733:17737   */\n      dup3\n        /* \"#utility.yul\":17729:17741   */\n      div\n        /* \"#utility.yul\":17719:17741   */\n      swap1\n      pop\n        /* \"#utility.yul\":17786:17787   */\n      0x01\n        /* \"#utility.yul\":17780:17784   */\n      dup3\n        /* \"#utility.yul\":17776:17788   */\n      and\n        /* \"#utility.yul\":17807:17825   */\n      dup1\n        /* \"#utility.yul\":17797:17878   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":17863:17867   */\n      0x7f\n        /* \"#utility.yul\":17855:17861   */\n      dup3\n        /* \"#utility.yul\":17851:17868   */\n      and\n        /* \"#utility.yul\":17841:17868   */\n      swap2\n      pop\n        /* \"#utility.yul\":17797:17878   */\n    tag_428:\n        /* \"#utility.yul\":17925:17927   */\n      0x20\n        /* \"#utility.yul\":17917:17923   */\n      dup3\n        /* \"#utility.yul\":17914:17928   */\n      lt\n        /* \"#utility.yul\":17894:17912   */\n      dup2\n        /* \"#utility.yul\":17891:17929   */\n      sub\n        /* \"#utility.yul\":17888:17972   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":17944:17962   */\n      tag_430\n      tag_243\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":17888:17972   */\n    tag_429:\n        /* \"#utility.yul\":17709:17978   */\n      pop\n        /* \"#utility.yul\":17658:17978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208677a69be758a4c0671134c42fbe916528414d14bf228cd860b6efd29196a25b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1474": {
									"entryPoint": null,
									"id": 1474,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3052": {
									"entryPoint": null,
									"id": 3052,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_1521": {
									"entryPoint": 390,
									"id": 1521,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_256": {
									"entryPoint": 480,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_429": {
									"entryPoint": 934,
									"id": 429,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStringSlot_751": {
									"entryPoint": 826,
									"id": 751,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 835,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_605": {
									"entryPoint": 313,
									"id": 605,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_507": {
									"entryPoint": 725,
									"id": 507,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory": {
									"entryPoint": 1364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 2286,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2471,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1510,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 982,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 2496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 958,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1648,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1789,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1826,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12122:17",
										"nodeType": "YulBlock",
										"src": "0:12122:17",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:17",
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nativeSrc": "57:19:17",
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:17",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nativeSrc": "67:9:17",
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:17",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nativeSrc": "177:28:17",
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:17",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:17",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nativeSrc": "187:12:17",
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nativeSrc": "187:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nativeSrc": "300:28:17",
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:17",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:17",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nativeSrc": "310:12:17",
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nativeSrc": "310:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nativeSrc": "423:28:17",
													"nodeType": "YulBlock",
													"src": "423:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:17",
																		"nodeType": "YulLiteral",
																		"src": "440:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:17",
																		"nodeType": "YulLiteral",
																		"src": "443:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:17"
																},
																"nativeSrc": "433:12:17",
																"nodeType": "YulFunctionCall",
																"src": "433:12:17"
															},
															"nativeSrc": "433:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:17"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:17"
											},
											{
												"body": {
													"nativeSrc": "546:28:17",
													"nodeType": "YulBlock",
													"src": "546:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:17",
																		"nodeType": "YulLiteral",
																		"src": "563:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:17",
																		"nodeType": "YulLiteral",
																		"src": "566:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:17"
																},
																"nativeSrc": "556:12:17",
																"nodeType": "YulFunctionCall",
																"src": "556:12:17"
															},
															"nativeSrc": "556:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:17"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:17"
											},
											{
												"body": {
													"nativeSrc": "628:54:17",
													"nodeType": "YulBlock",
													"src": "628:54:17",
													"statements": [
														{
															"nativeSrc": "638:38:17",
															"nodeType": "YulAssignment",
															"src": "638:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:17",
																				"nodeType": "YulLiteral",
																				"src": "663:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:17"
																		},
																		"nativeSrc": "652:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:17",
																				"nodeType": "YulLiteral",
																				"src": "672:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:17"
																		},
																		"nativeSrc": "668:7:17",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:17"
																},
																"nativeSrc": "648:28:17",
																"nodeType": "YulFunctionCall",
																"src": "648:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:17",
														"nodeType": "YulTypedName",
														"src": "611:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:17",
														"nodeType": "YulTypedName",
														"src": "621:6:17",
														"type": ""
													}
												],
												"src": "580:102:17"
											},
											{
												"body": {
													"nativeSrc": "716:152:17",
													"nodeType": "YulBlock",
													"src": "716:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:17",
																		"nodeType": "YulLiteral",
																		"src": "733:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:17",
																		"nodeType": "YulLiteral",
																		"src": "736:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:17"
																},
																"nativeSrc": "726:88:17",
																"nodeType": "YulFunctionCall",
																"src": "726:88:17"
															},
															"nativeSrc": "726:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:17",
																		"nodeType": "YulLiteral",
																		"src": "830:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:17",
																		"nodeType": "YulLiteral",
																		"src": "833:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:17"
																},
																"nativeSrc": "823:15:17",
																"nodeType": "YulFunctionCall",
																"src": "823:15:17"
															},
															"nativeSrc": "823:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:17",
																		"nodeType": "YulLiteral",
																		"src": "854:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:17",
																		"nodeType": "YulLiteral",
																		"src": "857:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:17"
																},
																"nativeSrc": "847:15:17",
																"nodeType": "YulFunctionCall",
																"src": "847:15:17"
															},
															"nativeSrc": "847:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:17"
											},
											{
												"body": {
													"nativeSrc": "917:238:17",
													"nodeType": "YulBlock",
													"src": "917:238:17",
													"statements": [
														{
															"nativeSrc": "927:58:17",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:17"
																		},
																		"nativeSrc": "957:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:17"
																},
																"nativeSrc": "945:40:17",
																"nodeType": "YulFunctionCall",
																"src": "945:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:17",
																	"nodeType": "YulTypedName",
																	"src": "931:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:17",
																"nodeType": "YulBlock",
																"src": "1096:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:17"
																			},
																			"nativeSrc": "1098:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:17"
																		},
																		"nativeSrc": "1098:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:17",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:17"
																		},
																		"nativeSrc": "1036:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:17"
																		},
																		"nativeSrc": "1072:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:17"
																},
																"nativeSrc": "1033:62:17",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:17"
															},
															"nativeSrc": "1030:88:17",
															"nodeType": "YulIf",
															"src": "1030:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:17"
																},
																"nativeSrc": "1127:22:17",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:17"
															},
															"nativeSrc": "1127:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:17"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:17",
														"nodeType": "YulTypedName",
														"src": "903:6:17",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:17",
														"nodeType": "YulTypedName",
														"src": "911:4:17",
														"type": ""
													}
												],
												"src": "874:281:17"
											},
											{
												"body": {
													"nativeSrc": "1202:88:17",
													"nodeType": "YulBlock",
													"src": "1202:88:17",
													"statements": [
														{
															"nativeSrc": "1212:30:17",
															"nodeType": "YulAssignment",
															"src": "1212:30:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:17"
																},
																"nativeSrc": "1222:20:17",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:17"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:17",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:17"
																},
																"nativeSrc": "1251:33:17",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:17"
															},
															"nativeSrc": "1251:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:17"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:17",
														"nodeType": "YulTypedName",
														"src": "1186:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:17",
														"nodeType": "YulTypedName",
														"src": "1195:6:17",
														"type": ""
													}
												],
												"src": "1161:129:17"
											},
											{
												"body": {
													"nativeSrc": "1363:241:17",
													"nodeType": "YulBlock",
													"src": "1363:241:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:17",
																"nodeType": "YulBlock",
																"src": "1468:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:17"
																			},
																			"nativeSrc": "1470:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:17"
																		},
																		"nativeSrc": "1470:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:17",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:17"
																},
																"nativeSrc": "1437:30:17",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:17"
															},
															"nativeSrc": "1434:56:17",
															"nodeType": "YulIf",
															"src": "1434:56:17"
														},
														{
															"nativeSrc": "1500:37:17",
															"nodeType": "YulAssignment",
															"src": "1500:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:17",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:17"
																},
																"nativeSrc": "1508:29:17",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:17"
																}
															]
														},
														{
															"nativeSrc": "1574:23:17",
															"nodeType": "YulAssignment",
															"src": "1574:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:17"
																},
																"nativeSrc": "1582:15:17",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:17",
														"nodeType": "YulTypedName",
														"src": "1347:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:17",
														"nodeType": "YulTypedName",
														"src": "1358:4:17",
														"type": ""
													}
												],
												"src": "1296:308:17"
											},
											{
												"body": {
													"nativeSrc": "1672:77:17",
													"nodeType": "YulBlock",
													"src": "1672:77:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:17"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:17"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:17"
																},
																"nativeSrc": "1683:23:17",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:17"
															},
															"nativeSrc": "1683:23:17",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:17"
																		},
																		"nativeSrc": "1722:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:17"
																},
																"nativeSrc": "1715:27:17",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:17"
															},
															"nativeSrc": "1715:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:17",
														"nodeType": "YulTypedName",
														"src": "1654:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:17",
														"nodeType": "YulTypedName",
														"src": "1659:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:17",
														"nodeType": "YulTypedName",
														"src": "1664:6:17",
														"type": ""
													}
												],
												"src": "1610:139:17"
											},
											{
												"body": {
													"nativeSrc": "1850:339:17",
													"nodeType": "YulBlock",
													"src": "1850:339:17",
													"statements": [
														{
															"nativeSrc": "1860:75:17",
															"nodeType": "YulAssignment",
															"src": "1860:75:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:17",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:17"
																		},
																		"nativeSrc": "1885:49:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:17"
																},
																"nativeSrc": "1869:66:17",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:17"
																},
																"nativeSrc": "1944:21:17",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:17"
															},
															"nativeSrc": "1944:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:17"
														},
														{
															"nativeSrc": "1974:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:17"
																},
																"nativeSrc": "1985:16:17",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:17",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:17",
																"nodeType": "YulBlock",
																"src": "2039:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:17"
																			},
																			"nativeSrc": "2041:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:17"
																		},
																		"nativeSrc": "2041:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:17"
																		},
																		"nativeSrc": "2016:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:17"
																},
																"nativeSrc": "2013:25:17",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:17"
															},
															"nativeSrc": "2010:112:17",
															"nodeType": "YulIf",
															"src": "2010:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:17"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:17"
																},
																"nativeSrc": "2131:52:17",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:17"
															},
															"nativeSrc": "2131:52:17",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:17",
														"nodeType": "YulTypedName",
														"src": "1823:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:17",
														"nodeType": "YulTypedName",
														"src": "1828:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:17",
														"nodeType": "YulTypedName",
														"src": "1836:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:17",
														"nodeType": "YulTypedName",
														"src": "1844:5:17",
														"type": ""
													}
												],
												"src": "1755:434:17"
											},
											{
												"body": {
													"nativeSrc": "2282:282:17",
													"nodeType": "YulBlock",
													"src": "2282:282:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:17",
																"nodeType": "YulBlock",
																"src": "2331:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:17"
																			},
																			"nativeSrc": "2333:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:17"
																		},
																		"nativeSrc": "2333:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:17",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:17"
																				},
																				"nativeSrc": "2306:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:17"
																		},
																		"nativeSrc": "2302:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:17"
																},
																"nativeSrc": "2295:35:17",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:17"
															},
															"nativeSrc": "2292:122:17",
															"nodeType": "YulIf",
															"src": "2292:122:17"
														},
														{
															"nativeSrc": "2423:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:17"
																},
																"nativeSrc": "2437:13:17",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:17",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:17",
															"nodeType": "YulAssignment",
															"src": "2459:99:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:17",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:17"
																		},
																		"nativeSrc": "2527:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:17"
																},
																"nativeSrc": "2468:90:17",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:17",
														"nodeType": "YulTypedName",
														"src": "2260:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:17",
														"nodeType": "YulTypedName",
														"src": "2268:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:17",
														"nodeType": "YulTypedName",
														"src": "2276:5:17",
														"type": ""
													}
												],
												"src": "2209:355:17"
											},
											{
												"body": {
													"nativeSrc": "2615:81:17",
													"nodeType": "YulBlock",
													"src": "2615:81:17",
													"statements": [
														{
															"nativeSrc": "2625:65:17",
															"nodeType": "YulAssignment",
															"src": "2625:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2640:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:42:17",
																		"nodeType": "YulLiteral",
																		"src": "2647:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2636:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:17"
																},
																"nativeSrc": "2636:54:17",
																"nodeType": "YulFunctionCall",
																"src": "2636:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2570:126:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:17",
														"nodeType": "YulTypedName",
														"src": "2597:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:17",
														"nodeType": "YulTypedName",
														"src": "2607:7:17",
														"type": ""
													}
												],
												"src": "2570:126:17"
											},
											{
												"body": {
													"nativeSrc": "2747:51:17",
													"nodeType": "YulBlock",
													"src": "2747:51:17",
													"statements": [
														{
															"nativeSrc": "2757:35:17",
															"nodeType": "YulAssignment",
															"src": "2757:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2786:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2786:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2768:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "2768:17:17"
																},
																"nativeSrc": "2768:24:17",
																"nodeType": "YulFunctionCall",
																"src": "2768:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2757:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "2757:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2702:96:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2729:5:17",
														"nodeType": "YulTypedName",
														"src": "2729:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2739:7:17",
														"nodeType": "YulTypedName",
														"src": "2739:7:17",
														"type": ""
													}
												],
												"src": "2702:96:17"
											},
											{
												"body": {
													"nativeSrc": "2847:79:17",
													"nodeType": "YulBlock",
													"src": "2847:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2904:16:17",
																"nodeType": "YulBlock",
																"src": "2904:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2913:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2906:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2906:6:17"
																			},
																			"nativeSrc": "2906:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:12:17"
																		},
																		"nativeSrc": "2906:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2870:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "2870:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2895:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2877:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "2877:17:17"
																				},
																				"nativeSrc": "2877:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2867:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "2867:2:17"
																		},
																		"nativeSrc": "2867:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2860:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:17"
																},
																"nativeSrc": "2860:43:17",
																"nodeType": "YulFunctionCall",
																"src": "2860:43:17"
															},
															"nativeSrc": "2857:63:17",
															"nodeType": "YulIf",
															"src": "2857:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2804:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2840:5:17",
														"nodeType": "YulTypedName",
														"src": "2840:5:17",
														"type": ""
													}
												],
												"src": "2804:122:17"
											},
											{
												"body": {
													"nativeSrc": "2995:80:17",
													"nodeType": "YulBlock",
													"src": "2995:80:17",
													"statements": [
														{
															"nativeSrc": "3005:22:17",
															"nodeType": "YulAssignment",
															"src": "3005:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3020:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3020:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3014:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3014:5:17"
																},
																"nativeSrc": "3014:13:17",
																"nodeType": "YulFunctionCall",
																"src": "3014:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3005:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3005:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3063:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3063:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3036:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "3036:26:17"
																},
																"nativeSrc": "3036:33:17",
																"nodeType": "YulFunctionCall",
																"src": "3036:33:17"
															},
															"nativeSrc": "3036:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "3036:33:17"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2932:143:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2973:6:17",
														"nodeType": "YulTypedName",
														"src": "2973:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2981:3:17",
														"nodeType": "YulTypedName",
														"src": "2981:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2989:5:17",
														"nodeType": "YulTypedName",
														"src": "2989:5:17",
														"type": ""
													}
												],
												"src": "2932:143:17"
											},
											{
												"body": {
													"nativeSrc": "3212:878:17",
													"nodeType": "YulBlock",
													"src": "3212:878:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3258:83:17",
																"nodeType": "YulBlock",
																"src": "3258:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3260:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "3260:77:17"
																			},
																			"nativeSrc": "3260:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3260:79:17"
																		},
																		"nativeSrc": "3260:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3260:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3242:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3242:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3229:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3229:3:17"
																		},
																		"nativeSrc": "3229:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3229:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3254:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3254:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3225:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3225:3:17"
																},
																"nativeSrc": "3225:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3225:32:17"
															},
															"nativeSrc": "3222:119:17",
															"nodeType": "YulIf",
															"src": "3222:119:17"
														},
														{
															"nativeSrc": "3351:291:17",
															"nodeType": "YulBlock",
															"src": "3351:291:17",
															"statements": [
																{
																	"nativeSrc": "3366:38:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3366:38:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3390:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3390:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3401:1:17",
																						"nodeType": "YulLiteral",
																						"src": "3401:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3386:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3386:3:17"
																				},
																				"nativeSrc": "3386:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3386:17:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3380:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "3380:5:17"
																		},
																		"nativeSrc": "3380:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3380:24:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3370:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3370:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3451:83:17",
																		"nodeType": "YulBlock",
																		"src": "3451:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3453:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "3453:77:17"
																					},
																					"nativeSrc": "3453:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3453:79:17"
																				},
																				"nativeSrc": "3453:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "3453:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3423:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3423:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3431:18:17",
																				"nodeType": "YulLiteral",
																				"src": "3431:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3420:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "3420:2:17"
																		},
																		"nativeSrc": "3420:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3420:30:17"
																	},
																	"nativeSrc": "3417:117:17",
																	"nodeType": "YulIf",
																	"src": "3417:117:17"
																},
																{
																	"nativeSrc": "3548:84:17",
																	"nodeType": "YulAssignment",
																	"src": "3548:84:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3604:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3604:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3615:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3615:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3600:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3600:3:17"
																				},
																				"nativeSrc": "3600:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3600:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3624:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3624:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3558:41:17",
																			"nodeType": "YulIdentifier",
																			"src": "3558:41:17"
																		},
																		"nativeSrc": "3558:74:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3558:74:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3548:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3548:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3652:292:17",
															"nodeType": "YulBlock",
															"src": "3652:292:17",
															"statements": [
																{
																	"nativeSrc": "3667:39:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3667:39:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3691:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3691:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3702:2:17",
																						"nodeType": "YulLiteral",
																						"src": "3702:2:17",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3687:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3687:3:17"
																				},
																				"nativeSrc": "3687:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3687:18:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3681:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "3681:5:17"
																		},
																		"nativeSrc": "3681:25:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3681:25:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3671:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3671:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3753:83:17",
																		"nodeType": "YulBlock",
																		"src": "3753:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3755:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "3755:77:17"
																					},
																					"nativeSrc": "3755:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3755:79:17"
																				},
																				"nativeSrc": "3755:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "3755:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3725:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3725:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3733:18:17",
																				"nodeType": "YulLiteral",
																				"src": "3733:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3722:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "3722:2:17"
																		},
																		"nativeSrc": "3722:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3722:30:17"
																	},
																	"nativeSrc": "3719:117:17",
																	"nodeType": "YulIf",
																	"src": "3719:117:17"
																},
																{
																	"nativeSrc": "3850:84:17",
																	"nodeType": "YulAssignment",
																	"src": "3850:84:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3906:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3906:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3917:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3917:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3902:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3902:3:17"
																				},
																				"nativeSrc": "3902:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3902:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3926:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3926:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3860:41:17",
																			"nodeType": "YulIdentifier",
																			"src": "3860:41:17"
																		},
																		"nativeSrc": "3860:74:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3860:74:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3850:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3850:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3954:129:17",
															"nodeType": "YulBlock",
															"src": "3954:129:17",
															"statements": [
																{
																	"nativeSrc": "3969:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3969:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3983:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3973:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3973:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3999:74:17",
																	"nodeType": "YulAssignment",
																	"src": "3999:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:17"
																				},
																				"nativeSrc": "4041:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4009:31:17",
																			"nodeType": "YulIdentifier",
																			"src": "4009:31:17"
																		},
																		"nativeSrc": "4009:64:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4009:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3999:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3999:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory",
												"nativeSrc": "3081:1009:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3166:9:17",
														"nodeType": "YulTypedName",
														"src": "3166:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3177:7:17",
														"nodeType": "YulTypedName",
														"src": "3177:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3189:6:17",
														"nodeType": "YulTypedName",
														"src": "3189:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3197:6:17",
														"nodeType": "YulTypedName",
														"src": "3197:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3205:6:17",
														"nodeType": "YulTypedName",
														"src": "3205:6:17",
														"type": ""
													}
												],
												"src": "3081:1009:17"
											},
											{
												"body": {
													"nativeSrc": "4155:40:17",
													"nodeType": "YulBlock",
													"src": "4155:40:17",
													"statements": [
														{
															"nativeSrc": "4166:22:17",
															"nodeType": "YulAssignment",
															"src": "4166:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4182:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "4182:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4176:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "4176:5:17"
																},
																"nativeSrc": "4176:12:17",
																"nodeType": "YulFunctionCall",
																"src": "4176:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4166:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4166:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4096:99:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4138:5:17",
														"nodeType": "YulTypedName",
														"src": "4138:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4148:6:17",
														"nodeType": "YulTypedName",
														"src": "4148:6:17",
														"type": ""
													}
												],
												"src": "4096:99:17"
											},
											{
												"body": {
													"nativeSrc": "4229:152:17",
													"nodeType": "YulBlock",
													"src": "4229:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4246:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4246:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4249:77:17",
																		"nodeType": "YulLiteral",
																		"src": "4249:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4239:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4239:6:17"
																},
																"nativeSrc": "4239:88:17",
																"nodeType": "YulFunctionCall",
																"src": "4239:88:17"
															},
															"nativeSrc": "4239:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "4239:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4343:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4343:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4346:4:17",
																		"nodeType": "YulLiteral",
																		"src": "4346:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4336:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:17"
																},
																"nativeSrc": "4336:15:17",
																"nodeType": "YulFunctionCall",
																"src": "4336:15:17"
															},
															"nativeSrc": "4336:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "4336:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4367:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4367:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4370:4:17",
																		"nodeType": "YulLiteral",
																		"src": "4370:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4360:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:17"
																},
																"nativeSrc": "4360:15:17",
																"nodeType": "YulFunctionCall",
																"src": "4360:15:17"
															},
															"nativeSrc": "4360:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "4360:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4201:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "4201:180:17"
											},
											{
												"body": {
													"nativeSrc": "4438:269:17",
													"nodeType": "YulBlock",
													"src": "4438:269:17",
													"statements": [
														{
															"nativeSrc": "4448:22:17",
															"nodeType": "YulAssignment",
															"src": "4448:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4462:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "4462:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4468:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4458:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:17"
																},
																"nativeSrc": "4458:12:17",
																"nodeType": "YulFunctionCall",
																"src": "4458:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4448:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:17"
																}
															]
														},
														{
															"nativeSrc": "4479:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4479:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4509:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "4509:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4515:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4515:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4505:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4505:3:17"
																},
																"nativeSrc": "4505:12:17",
																"nodeType": "YulFunctionCall",
																"src": "4505:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4483:18:17",
																	"nodeType": "YulTypedName",
																	"src": "4483:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4556:51:17",
																"nodeType": "YulBlock",
																"src": "4556:51:17",
																"statements": [
																	{
																		"nativeSrc": "4570:27:17",
																		"nodeType": "YulAssignment",
																		"src": "4570:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4584:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "4584:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4592:4:17",
																					"nodeType": "YulLiteral",
																					"src": "4592:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4580:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "4580:3:17"
																			},
																			"nativeSrc": "4580:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4580:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4570:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4570:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4536:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "4536:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4529:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:17"
																},
																"nativeSrc": "4529:26:17",
																"nodeType": "YulFunctionCall",
																"src": "4529:26:17"
															},
															"nativeSrc": "4526:81:17",
															"nodeType": "YulIf",
															"src": "4526:81:17"
														},
														{
															"body": {
																"nativeSrc": "4659:42:17",
																"nodeType": "YulBlock",
																"src": "4659:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4673:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "4673:16:17"
																			},
																			"nativeSrc": "4673:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4673:18:17"
																		},
																		"nativeSrc": "4673:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4673:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4623:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "4623:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4646:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4654:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4654:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4643:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "4643:2:17"
																		},
																		"nativeSrc": "4643:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4643:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4620:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4620:2:17"
																},
																"nativeSrc": "4620:38:17",
																"nodeType": "YulFunctionCall",
																"src": "4620:38:17"
															},
															"nativeSrc": "4617:84:17",
															"nodeType": "YulIf",
															"src": "4617:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4387:320:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4422:4:17",
														"nodeType": "YulTypedName",
														"src": "4422:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4431:6:17",
														"nodeType": "YulTypedName",
														"src": "4431:6:17",
														"type": ""
													}
												],
												"src": "4387:320:17"
											},
											{
												"body": {
													"nativeSrc": "4767:87:17",
													"nodeType": "YulBlock",
													"src": "4767:87:17",
													"statements": [
														{
															"nativeSrc": "4777:11:17",
															"nodeType": "YulAssignment",
															"src": "4777:11:17",
															"value": {
																"name": "ptr",
																"nativeSrc": "4785:3:17",
																"nodeType": "YulIdentifier",
																"src": "4785:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4777:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4777:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4805:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4805:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4808:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "4808:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4798:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:17"
																},
																"nativeSrc": "4798:14:17",
																"nodeType": "YulFunctionCall",
																"src": "4798:14:17"
															},
															"nativeSrc": "4798:14:17",
															"nodeType": "YulExpressionStatement",
															"src": "4798:14:17"
														},
														{
															"nativeSrc": "4821:26:17",
															"nodeType": "YulAssignment",
															"src": "4821:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4839:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4839:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4842:4:17",
																		"nodeType": "YulLiteral",
																		"src": "4842:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4829:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "4829:9:17"
																},
																"nativeSrc": "4829:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4829:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4821:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4821:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4713:141:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4754:3:17",
														"nodeType": "YulTypedName",
														"src": "4754:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4762:4:17",
														"nodeType": "YulTypedName",
														"src": "4762:4:17",
														"type": ""
													}
												],
												"src": "4713:141:17"
											},
											{
												"body": {
													"nativeSrc": "4904:49:17",
													"nodeType": "YulBlock",
													"src": "4904:49:17",
													"statements": [
														{
															"nativeSrc": "4914:33:17",
															"nodeType": "YulAssignment",
															"src": "4914:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4932:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "4932:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4939:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4939:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4928:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4928:3:17"
																		},
																		"nativeSrc": "4928:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4928:14:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4944:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4944:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4924:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4924:3:17"
																},
																"nativeSrc": "4924:23:17",
																"nodeType": "YulFunctionCall",
																"src": "4924:23:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4914:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:17"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4860:93:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4887:5:17",
														"nodeType": "YulTypedName",
														"src": "4887:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4897:6:17",
														"nodeType": "YulTypedName",
														"src": "4897:6:17",
														"type": ""
													}
												],
												"src": "4860:93:17"
											},
											{
												"body": {
													"nativeSrc": "5012:54:17",
													"nodeType": "YulBlock",
													"src": "5012:54:17",
													"statements": [
														{
															"nativeSrc": "5022:37:17",
															"nodeType": "YulAssignment",
															"src": "5022:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5047:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "5047:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5053:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "5053:5:17"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5043:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5043:3:17"
																},
																"nativeSrc": "5043:16:17",
																"nodeType": "YulFunctionCall",
																"src": "5043:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5022:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "5022:8:17"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4959:107:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4987:4:17",
														"nodeType": "YulTypedName",
														"src": "4987:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4993:5:17",
														"nodeType": "YulTypedName",
														"src": "4993:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5003:8:17",
														"nodeType": "YulTypedName",
														"src": "5003:8:17",
														"type": ""
													}
												],
												"src": "4959:107:17"
											},
											{
												"body": {
													"nativeSrc": "5148:317:17",
													"nodeType": "YulBlock",
													"src": "5148:317:17",
													"statements": [
														{
															"nativeSrc": "5158:35:17",
															"nodeType": "YulVariableDeclaration",
															"src": "5158:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5179:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "5179:10:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5191:1:17",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5175:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5175:3:17"
																},
																"nativeSrc": "5175:18:17",
																"nodeType": "YulFunctionCall",
																"src": "5175:18:17"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5162:9:17",
																	"nodeType": "YulTypedName",
																	"src": "5162:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5202:109:17",
															"nodeType": "YulVariableDeclaration",
															"src": "5202:109:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5233:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5233:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5244:66:17",
																		"nodeType": "YulLiteral",
																		"src": "5244:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5214:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "5214:18:17"
																},
																"nativeSrc": "5214:97:17",
																"nodeType": "YulFunctionCall",
																"src": "5214:97:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5206:4:17",
																	"nodeType": "YulTypedName",
																	"src": "5206:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5320:51:17",
															"nodeType": "YulAssignment",
															"src": "5320:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5351:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5351:9:17"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5362:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "5362:8:17"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5332:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "5332:18:17"
																},
																"nativeSrc": "5332:39:17",
																"nodeType": "YulFunctionCall",
																"src": "5332:39:17"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5320:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "5320:8:17"
																}
															]
														},
														{
															"nativeSrc": "5380:30:17",
															"nodeType": "YulAssignment",
															"src": "5380:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5393:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "5393:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5404:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "5404:4:17"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5400:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5400:3:17"
																		},
																		"nativeSrc": "5400:9:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5400:9:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5389:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5389:3:17"
																},
																"nativeSrc": "5389:21:17",
																"nodeType": "YulFunctionCall",
																"src": "5389:21:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5380:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "5380:5:17"
																}
															]
														},
														{
															"nativeSrc": "5419:40:17",
															"nodeType": "YulAssignment",
															"src": "5419:40:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5432:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "5432:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5443:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "5443:8:17"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5453:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "5453:4:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5439:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5439:3:17"
																		},
																		"nativeSrc": "5439:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:19:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5429:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:17"
																},
																"nativeSrc": "5429:30:17",
																"nodeType": "YulFunctionCall",
																"src": "5429:30:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5419:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5419:6:17"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5072:393:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5109:5:17",
														"nodeType": "YulTypedName",
														"src": "5109:5:17",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5116:10:17",
														"nodeType": "YulTypedName",
														"src": "5116:10:17",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5128:8:17",
														"nodeType": "YulTypedName",
														"src": "5128:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5141:6:17",
														"nodeType": "YulTypedName",
														"src": "5141:6:17",
														"type": ""
													}
												],
												"src": "5072:393:17"
											},
											{
												"body": {
													"nativeSrc": "5516:32:17",
													"nodeType": "YulBlock",
													"src": "5516:32:17",
													"statements": [
														{
															"nativeSrc": "5526:16:17",
															"nodeType": "YulAssignment",
															"src": "5526:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "5537:5:17",
																"nodeType": "YulIdentifier",
																"src": "5537:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5526:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "5526:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5471:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5498:5:17",
														"nodeType": "YulTypedName",
														"src": "5498:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5508:7:17",
														"nodeType": "YulTypedName",
														"src": "5508:7:17",
														"type": ""
													}
												],
												"src": "5471:77:17"
											},
											{
												"body": {
													"nativeSrc": "5586:28:17",
													"nodeType": "YulBlock",
													"src": "5586:28:17",
													"statements": [
														{
															"nativeSrc": "5596:12:17",
															"nodeType": "YulAssignment",
															"src": "5596:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "5603:5:17",
																"nodeType": "YulIdentifier",
																"src": "5603:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5596:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5554:60:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5572:5:17",
														"nodeType": "YulTypedName",
														"src": "5572:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5582:3:17",
														"nodeType": "YulTypedName",
														"src": "5582:3:17",
														"type": ""
													}
												],
												"src": "5554:60:17"
											},
											{
												"body": {
													"nativeSrc": "5680:82:17",
													"nodeType": "YulBlock",
													"src": "5680:82:17",
													"statements": [
														{
															"nativeSrc": "5690:66:17",
															"nodeType": "YulAssignment",
															"src": "5690:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5748:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "5748:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5730:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "5730:17:17"
																				},
																				"nativeSrc": "5730:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:24:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5721:8:17",
																			"nodeType": "YulIdentifier",
																			"src": "5721:8:17"
																		},
																		"nativeSrc": "5721:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5721:34:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5703:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "5703:17:17"
																},
																"nativeSrc": "5703:53:17",
																"nodeType": "YulFunctionCall",
																"src": "5703:53:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5690:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "5690:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5620:142:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5660:5:17",
														"nodeType": "YulTypedName",
														"src": "5660:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5670:9:17",
														"nodeType": "YulTypedName",
														"src": "5670:9:17",
														"type": ""
													}
												],
												"src": "5620:142:17"
											},
											{
												"body": {
													"nativeSrc": "5815:28:17",
													"nodeType": "YulBlock",
													"src": "5815:28:17",
													"statements": [
														{
															"nativeSrc": "5825:12:17",
															"nodeType": "YulAssignment",
															"src": "5825:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "5832:5:17",
																"nodeType": "YulIdentifier",
																"src": "5832:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5825:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5825:3:17"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5768:75:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5801:5:17",
														"nodeType": "YulTypedName",
														"src": "5801:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5811:3:17",
														"nodeType": "YulTypedName",
														"src": "5811:3:17",
														"type": ""
													}
												],
												"src": "5768:75:17"
											},
											{
												"body": {
													"nativeSrc": "5925:193:17",
													"nodeType": "YulBlock",
													"src": "5925:193:17",
													"statements": [
														{
															"nativeSrc": "5935:63:17",
															"nodeType": "YulVariableDeclaration",
															"src": "5935:63:17",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5990:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "5990:7:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5959:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "5959:30:17"
																},
																"nativeSrc": "5959:39:17",
																"nodeType": "YulFunctionCall",
																"src": "5959:39:17"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5939:16:17",
																	"nodeType": "YulTypedName",
																	"src": "5939:16:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6014:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "6014:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6054:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "6054:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6048:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "6048:5:17"
																				},
																				"nativeSrc": "6048:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6048:11:17"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6061:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6061:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6093:16:17",
																						"nodeType": "YulIdentifier",
																						"src": "6093:16:17"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6069:23:17",
																					"nodeType": "YulIdentifier",
																					"src": "6069:23:17"
																				},
																				"nativeSrc": "6069:41:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6069:41:17"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6020:27:17",
																			"nodeType": "YulIdentifier",
																			"src": "6020:27:17"
																		},
																		"nativeSrc": "6020:91:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6020:91:17"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6007:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6007:6:17"
																},
																"nativeSrc": "6007:105:17",
																"nodeType": "YulFunctionCall",
																"src": "6007:105:17"
															},
															"nativeSrc": "6007:105:17",
															"nodeType": "YulExpressionStatement",
															"src": "6007:105:17"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5849:269:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5902:4:17",
														"nodeType": "YulTypedName",
														"src": "5902:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5908:6:17",
														"nodeType": "YulTypedName",
														"src": "5908:6:17",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5916:7:17",
														"nodeType": "YulTypedName",
														"src": "5916:7:17",
														"type": ""
													}
												],
												"src": "5849:269:17"
											},
											{
												"body": {
													"nativeSrc": "6173:24:17",
													"nodeType": "YulBlock",
													"src": "6173:24:17",
													"statements": [
														{
															"nativeSrc": "6183:8:17",
															"nodeType": "YulAssignment",
															"src": "6183:8:17",
															"value": {
																"kind": "number",
																"nativeSrc": "6190:1:17",
																"nodeType": "YulLiteral",
																"src": "6190:1:17",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6183:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:17"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6124:73:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6169:3:17",
														"nodeType": "YulTypedName",
														"src": "6169:3:17",
														"type": ""
													}
												],
												"src": "6124:73:17"
											},
											{
												"body": {
													"nativeSrc": "6256:136:17",
													"nodeType": "YulBlock",
													"src": "6256:136:17",
													"statements": [
														{
															"nativeSrc": "6266:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6266:46:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6280:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "6280:30:17"
																},
																"nativeSrc": "6280:32:17",
																"nodeType": "YulFunctionCall",
																"src": "6280:32:17"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6270:6:17",
																	"nodeType": "YulTypedName",
																	"src": "6270:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6365:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "6365:4:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6371:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6371:6:17"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6379:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6379:6:17"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6321:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "6321:43:17"
																},
																"nativeSrc": "6321:65:17",
																"nodeType": "YulFunctionCall",
																"src": "6321:65:17"
															},
															"nativeSrc": "6321:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "6321:65:17"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6203:189:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6242:4:17",
														"nodeType": "YulTypedName",
														"src": "6242:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6248:6:17",
														"nodeType": "YulTypedName",
														"src": "6248:6:17",
														"type": ""
													}
												],
												"src": "6203:189:17"
											},
											{
												"body": {
													"nativeSrc": "6448:136:17",
													"nodeType": "YulBlock",
													"src": "6448:136:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "6515:63:17",
																"nodeType": "YulBlock",
																"src": "6515:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6559:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "6559:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6566:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6566:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6529:29:17",
																				"nodeType": "YulIdentifier",
																				"src": "6529:29:17"
																			},
																			"nativeSrc": "6529:39:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6529:39:17"
																		},
																		"nativeSrc": "6529:39:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "6529:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6468:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "6468:5:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6475:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6475:3:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6465:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6465:2:17"
																},
																"nativeSrc": "6465:14:17",
																"nodeType": "YulFunctionCall",
																"src": "6465:14:17"
															},
															"nativeSrc": "6458:120:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6480:26:17",
																"nodeType": "YulBlock",
																"src": "6480:26:17",
																"statements": [
																	{
																		"nativeSrc": "6482:22:17",
																		"nodeType": "YulAssignment",
																		"src": "6482:22:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6495:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "6495:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6502:1:17",
																					"nodeType": "YulLiteral",
																					"src": "6502:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6491:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "6491:3:17"
																			},
																			"nativeSrc": "6491:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6491:13:17"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6482:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6482:5:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6462:2:17",
																"nodeType": "YulBlock",
																"src": "6462:2:17",
																"statements": []
															},
															"src": "6458:120:17"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6398:186:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6436:5:17",
														"nodeType": "YulTypedName",
														"src": "6436:5:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6443:3:17",
														"nodeType": "YulTypedName",
														"src": "6443:3:17",
														"type": ""
													}
												],
												"src": "6398:186:17"
											},
											{
												"body": {
													"nativeSrc": "6669:464:17",
													"nodeType": "YulBlock",
													"src": "6669:464:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "6695:431:17",
																"nodeType": "YulBlock",
																"src": "6695:431:17",
																"statements": [
																	{
																		"nativeSrc": "6709:54:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6709:54:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6757:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "6757:5:17"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6725:31:17",
																				"nodeType": "YulIdentifier",
																				"src": "6725:31:17"
																			},
																			"nativeSrc": "6725:38:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6725:38:17"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6713:8:17",
																				"nodeType": "YulTypedName",
																				"src": "6713:8:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6776:63:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6776:63:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6799:8:17",
																					"nodeType": "YulIdentifier",
																					"src": "6799:8:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6827:10:17",
																							"nodeType": "YulIdentifier",
																							"src": "6827:10:17"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6809:17:17",
																						"nodeType": "YulIdentifier",
																						"src": "6809:17:17"
																					},
																					"nativeSrc": "6809:29:17",
																					"nodeType": "YulFunctionCall",
																					"src": "6809:29:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6795:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "6795:3:17"
																			},
																			"nativeSrc": "6795:44:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6795:44:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6780:11:17",
																				"nodeType": "YulTypedName",
																				"src": "6780:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6996:27:17",
																			"nodeType": "YulBlock",
																			"src": "6996:27:17",
																			"statements": [
																				{
																					"nativeSrc": "6998:23:17",
																					"nodeType": "YulAssignment",
																					"src": "6998:23:17",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7013:8:17",
																						"nodeType": "YulIdentifier",
																						"src": "7013:8:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6998:11:17",
																							"nodeType": "YulIdentifier",
																							"src": "6998:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6980:10:17",
																					"nodeType": "YulIdentifier",
																					"src": "6980:10:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6992:2:17",
																					"nodeType": "YulLiteral",
																					"src": "6992:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6977:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "6977:2:17"
																			},
																			"nativeSrc": "6977:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "6977:18:17"
																		},
																		"nativeSrc": "6974:49:17",
																		"nodeType": "YulIf",
																		"src": "6974:49:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7065:11:17",
																					"nodeType": "YulIdentifier",
																					"src": "7065:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7082:8:17",
																							"nodeType": "YulIdentifier",
																							"src": "7082:8:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7110:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "7110:3:17"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7092:17:17",
																								"nodeType": "YulIdentifier",
																								"src": "7092:17:17"
																							},
																							"nativeSrc": "7092:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "7092:22:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7078:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "7078:3:17"
																					},
																					"nativeSrc": "7078:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "7078:37:17"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7036:28:17",
																				"nodeType": "YulIdentifier",
																				"src": "7036:28:17"
																			},
																			"nativeSrc": "7036:80:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7036:80:17"
																		},
																		"nativeSrc": "7036:80:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7036:80:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6686:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6686:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6691:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6691:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6683:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "6683:2:17"
																},
																"nativeSrc": "6683:11:17",
																"nodeType": "YulFunctionCall",
																"src": "6683:11:17"
															},
															"nativeSrc": "6680:446:17",
															"nodeType": "YulIf",
															"src": "6680:446:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6590:543:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6645:5:17",
														"nodeType": "YulTypedName",
														"src": "6645:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6652:3:17",
														"nodeType": "YulTypedName",
														"src": "6652:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6657:10:17",
														"nodeType": "YulTypedName",
														"src": "6657:10:17",
														"type": ""
													}
												],
												"src": "6590:543:17"
											},
											{
												"body": {
													"nativeSrc": "7202:54:17",
													"nodeType": "YulBlock",
													"src": "7202:54:17",
													"statements": [
														{
															"nativeSrc": "7212:37:17",
															"nodeType": "YulAssignment",
															"src": "7212:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7237:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "7237:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7243:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7243:5:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7233:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7233:3:17"
																},
																"nativeSrc": "7233:16:17",
																"nodeType": "YulFunctionCall",
																"src": "7233:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7212:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "7212:8:17"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7139:117:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7177:4:17",
														"nodeType": "YulTypedName",
														"src": "7177:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7183:5:17",
														"nodeType": "YulTypedName",
														"src": "7183:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7193:8:17",
														"nodeType": "YulTypedName",
														"src": "7193:8:17",
														"type": ""
													}
												],
												"src": "7139:117:17"
											},
											{
												"body": {
													"nativeSrc": "7313:118:17",
													"nodeType": "YulBlock",
													"src": "7313:118:17",
													"statements": [
														{
															"nativeSrc": "7323:68:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7323:68:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7372:1:17",
																						"nodeType": "YulLiteral",
																						"src": "7372:1:17",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7375:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "7375:5:17"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7368:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7368:3:17"
																				},
																				"nativeSrc": "7368:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7368:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7387:1:17",
																						"nodeType": "YulLiteral",
																						"src": "7387:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7383:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7383:3:17"
																				},
																				"nativeSrc": "7383:6:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7383:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7339:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "7339:28:17"
																		},
																		"nativeSrc": "7339:51:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7339:51:17"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7335:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7335:3:17"
																},
																"nativeSrc": "7335:56:17",
																"nodeType": "YulFunctionCall",
																"src": "7335:56:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7327:4:17",
																	"nodeType": "YulTypedName",
																	"src": "7327:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7400:25:17",
															"nodeType": "YulAssignment",
															"src": "7400:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7414:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "7414:4:17"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7420:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "7420:4:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7410:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7410:3:17"
																},
																"nativeSrc": "7410:15:17",
																"nodeType": "YulFunctionCall",
																"src": "7410:15:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7400:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7400:6:17"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7262:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7290:4:17",
														"nodeType": "YulTypedName",
														"src": "7290:4:17",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7296:5:17",
														"nodeType": "YulTypedName",
														"src": "7296:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7306:6:17",
														"nodeType": "YulTypedName",
														"src": "7306:6:17",
														"type": ""
													}
												],
												"src": "7262:169:17"
											},
											{
												"body": {
													"nativeSrc": "7517:214:17",
													"nodeType": "YulBlock",
													"src": "7517:214:17",
													"statements": [
														{
															"nativeSrc": "7650:37:17",
															"nodeType": "YulAssignment",
															"src": "7650:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7677:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "7677:4:17"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7683:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7683:3:17"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7658:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "7658:18:17"
																},
																"nativeSrc": "7658:29:17",
																"nodeType": "YulFunctionCall",
																"src": "7658:29:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7650:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7650:4:17"
																}
															]
														},
														{
															"nativeSrc": "7696:29:17",
															"nodeType": "YulAssignment",
															"src": "7696:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7707:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "7707:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7717:1:17",
																				"nodeType": "YulLiteral",
																				"src": "7717:1:17",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7720:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7720:3:17"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7713:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7713:3:17"
																		},
																		"nativeSrc": "7713:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7713:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7704:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7704:2:17"
																},
																"nativeSrc": "7704:21:17",
																"nodeType": "YulFunctionCall",
																"src": "7704:21:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7696:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7696:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7436:295:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7498:4:17",
														"nodeType": "YulTypedName",
														"src": "7498:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7504:3:17",
														"nodeType": "YulTypedName",
														"src": "7504:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7512:4:17",
														"nodeType": "YulTypedName",
														"src": "7512:4:17",
														"type": ""
													}
												],
												"src": "7436:295:17"
											},
											{
												"body": {
													"nativeSrc": "7828:1303:17",
													"nodeType": "YulBlock",
													"src": "7828:1303:17",
													"statements": [
														{
															"nativeSrc": "7839:51:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7839:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7886:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7886:3:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7853:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "7853:32:17"
																},
																"nativeSrc": "7853:37:17",
																"nodeType": "YulFunctionCall",
																"src": "7853:37:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7843:6:17",
																	"nodeType": "YulTypedName",
																	"src": "7843:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7975:22:17",
																"nodeType": "YulBlock",
																"src": "7975:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7977:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "7977:16:17"
																			},
																			"nativeSrc": "7977:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7977:18:17"
																		},
																		"nativeSrc": "7977:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7977:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7947:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7947:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7955:18:17",
																		"nodeType": "YulLiteral",
																		"src": "7955:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7944:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7944:2:17"
																},
																"nativeSrc": "7944:30:17",
																"nodeType": "YulFunctionCall",
																"src": "7944:30:17"
															},
															"nativeSrc": "7941:56:17",
															"nodeType": "YulIf",
															"src": "7941:56:17"
														},
														{
															"nativeSrc": "8007:52:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8007:52:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8053:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "8053:4:17"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8047:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "8047:5:17"
																		},
																		"nativeSrc": "8047:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8047:11:17"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8021:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "8021:25:17"
																},
																"nativeSrc": "8021:38:17",
																"nodeType": "YulFunctionCall",
																"src": "8021:38:17"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8011:6:17",
																	"nodeType": "YulTypedName",
																	"src": "8011:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8152:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "8152:4:17"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8158:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8158:6:17"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8166:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8166:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8106:45:17",
																	"nodeType": "YulIdentifier",
																	"src": "8106:45:17"
																},
																"nativeSrc": "8106:67:17",
																"nodeType": "YulFunctionCall",
																"src": "8106:67:17"
															},
															"nativeSrc": "8106:67:17",
															"nodeType": "YulExpressionStatement",
															"src": "8106:67:17"
														},
														{
															"nativeSrc": "8183:18:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8183:18:17",
															"value": {
																"kind": "number",
																"nativeSrc": "8200:1:17",
																"nodeType": "YulLiteral",
																"src": "8200:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8187:9:17",
																	"nodeType": "YulTypedName",
																	"src": "8187:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8211:17:17",
															"nodeType": "YulAssignment",
															"src": "8211:17:17",
															"value": {
																"kind": "number",
																"nativeSrc": "8224:4:17",
																"nodeType": "YulLiteral",
																"src": "8224:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8211:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "8211:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8275:611:17",
																		"nodeType": "YulBlock",
																		"src": "8275:611:17",
																		"statements": [
																			{
																				"nativeSrc": "8289:37:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8289:37:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8308:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "8308:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8320:4:17",
																									"nodeType": "YulLiteral",
																									"src": "8320:4:17",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8316:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "8316:3:17"
																							},
																							"nativeSrc": "8316:9:17",
																							"nodeType": "YulFunctionCall",
																							"src": "8316:9:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8304:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "8304:3:17"
																					},
																					"nativeSrc": "8304:22:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8304:22:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8293:7:17",
																						"nodeType": "YulTypedName",
																						"src": "8293:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8340:51:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8340:51:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8386:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "8386:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8354:31:17",
																						"nodeType": "YulIdentifier",
																						"src": "8354:31:17"
																					},
																					"nativeSrc": "8354:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8354:37:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8344:6:17",
																						"nodeType": "YulTypedName",
																						"src": "8344:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8404:10:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8404:10:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8413:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8413:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8408:1:17",
																						"nodeType": "YulTypedName",
																						"src": "8408:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8472:163:17",
																					"nodeType": "YulBlock",
																					"src": "8472:163:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8497:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "8497:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8515:3:17",
																														"nodeType": "YulIdentifier",
																														"src": "8515:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8520:9:17",
																														"nodeType": "YulIdentifier",
																														"src": "8520:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8511:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "8511:3:17"
																												},
																												"nativeSrc": "8511:19:17",
																												"nodeType": "YulFunctionCall",
																												"src": "8511:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8505:5:17",
																											"nodeType": "YulIdentifier",
																											"src": "8505:5:17"
																										},
																										"nativeSrc": "8505:26:17",
																										"nodeType": "YulFunctionCall",
																										"src": "8505:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8490:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "8490:6:17"
																								},
																								"nativeSrc": "8490:42:17",
																								"nodeType": "YulFunctionCall",
																								"src": "8490:42:17"
																							},
																							"nativeSrc": "8490:42:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "8490:42:17"
																						},
																						{
																							"nativeSrc": "8549:24:17",
																							"nodeType": "YulAssignment",
																							"src": "8549:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8563:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "8563:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8571:1:17",
																										"nodeType": "YulLiteral",
																										"src": "8571:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8559:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "8559:3:17"
																								},
																								"nativeSrc": "8559:14:17",
																								"nodeType": "YulFunctionCall",
																								"src": "8559:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8549:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "8549:6:17"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8590:31:17",
																							"nodeType": "YulAssignment",
																							"src": "8590:31:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8607:9:17",
																										"nodeType": "YulIdentifier",
																										"src": "8607:9:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8618:2:17",
																										"nodeType": "YulLiteral",
																										"src": "8618:2:17",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8603:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "8603:3:17"
																								},
																								"nativeSrc": "8603:18:17",
																								"nodeType": "YulFunctionCall",
																								"src": "8603:18:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8590:9:17",
																									"nodeType": "YulIdentifier",
																									"src": "8590:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8438:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "8438:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8441:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "8441:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8435:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "8435:2:17"
																					},
																					"nativeSrc": "8435:14:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8435:14:17"
																				},
																				"nativeSrc": "8427:208:17",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8450:21:17",
																					"nodeType": "YulBlock",
																					"src": "8450:21:17",
																					"statements": [
																						{
																							"nativeSrc": "8452:17:17",
																							"nodeType": "YulAssignment",
																							"src": "8452:17:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8461:1:17",
																										"nodeType": "YulIdentifier",
																										"src": "8461:1:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8464:4:17",
																										"nodeType": "YulLiteral",
																										"src": "8464:4:17",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8457:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "8457:3:17"
																								},
																								"nativeSrc": "8457:12:17",
																								"nodeType": "YulFunctionCall",
																								"src": "8457:12:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8452:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "8452:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8431:3:17",
																					"nodeType": "YulBlock",
																					"src": "8431:3:17",
																					"statements": []
																				},
																				"src": "8427:208:17"
																			},
																			{
																				"body": {
																					"nativeSrc": "8671:156:17",
																					"nodeType": "YulBlock",
																					"src": "8671:156:17",
																					"statements": [
																						{
																							"nativeSrc": "8689:43:17",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8689:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8716:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "8716:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8721:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "8721:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8712:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "8712:3:17"
																										},
																										"nativeSrc": "8712:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "8712:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8706:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "8706:5:17"
																								},
																								"nativeSrc": "8706:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "8706:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8693:9:17",
																									"nodeType": "YulTypedName",
																									"src": "8693:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8756:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "8756:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8783:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "8783:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8798:6:17",
																														"nodeType": "YulIdentifier",
																														"src": "8798:6:17"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8806:4:17",
																														"nodeType": "YulLiteral",
																														"src": "8806:4:17",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8794:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "8794:3:17"
																												},
																												"nativeSrc": "8794:17:17",
																												"nodeType": "YulFunctionCall",
																												"src": "8794:17:17"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8764:18:17",
																											"nodeType": "YulIdentifier",
																											"src": "8764:18:17"
																										},
																										"nativeSrc": "8764:48:17",
																										"nodeType": "YulFunctionCall",
																										"src": "8764:48:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8749:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "8749:6:17"
																								},
																								"nativeSrc": "8749:64:17",
																								"nodeType": "YulFunctionCall",
																								"src": "8749:64:17"
																							},
																							"nativeSrc": "8749:64:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "8749:64:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8654:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "8654:7:17"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8663:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "8663:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8651:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "8651:2:17"
																					},
																					"nativeSrc": "8651:19:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8651:19:17"
																				},
																				"nativeSrc": "8648:179:17",
																				"nodeType": "YulIf",
																				"src": "8648:179:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8847:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "8847:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8861:6:17",
																											"nodeType": "YulIdentifier",
																											"src": "8861:6:17"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8869:1:17",
																											"nodeType": "YulLiteral",
																											"src": "8869:1:17",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8857:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "8857:3:17"
																									},
																									"nativeSrc": "8857:14:17",
																									"nodeType": "YulFunctionCall",
																									"src": "8857:14:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8873:1:17",
																									"nodeType": "YulLiteral",
																									"src": "8873:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8853:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "8853:3:17"
																							},
																							"nativeSrc": "8853:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "8853:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8840:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8840:6:17"
																					},
																					"nativeSrc": "8840:36:17",
																					"nodeType": "YulFunctionCall",
																					"src": "8840:36:17"
																				},
																				"nativeSrc": "8840:36:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "8840:36:17"
																			}
																		]
																	},
																	"nativeSrc": "8268:618:17",
																	"nodeType": "YulCase",
																	"src": "8268:618:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8273:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8273:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8903:222:17",
																		"nodeType": "YulBlock",
																		"src": "8903:222:17",
																		"statements": [
																			{
																				"nativeSrc": "8917:14:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8917:14:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8930:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8930:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8921:5:17",
																						"nodeType": "YulTypedName",
																						"src": "8921:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8954:67:17",
																					"nodeType": "YulBlock",
																					"src": "8954:67:17",
																					"statements": [
																						{
																							"nativeSrc": "8972:35:17",
																							"nodeType": "YulAssignment",
																							"src": "8972:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8991:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "8991:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8996:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "8996:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8987:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "8987:3:17"
																										},
																										"nativeSrc": "8987:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "8987:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8981:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "8981:5:17"
																								},
																								"nativeSrc": "8981:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "8981:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8972:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "8972:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8947:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "8947:6:17"
																				},
																				"nativeSrc": "8944:77:17",
																				"nodeType": "YulIf",
																				"src": "8944:77:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9041:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "9041:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9100:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "9100:5:17"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9107:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "9107:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9047:52:17",
																								"nodeType": "YulIdentifier",
																								"src": "9047:52:17"
																							},
																							"nativeSrc": "9047:67:17",
																							"nodeType": "YulFunctionCall",
																							"src": "9047:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9034:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9034:6:17"
																					},
																					"nativeSrc": "9034:81:17",
																					"nodeType": "YulFunctionCall",
																					"src": "9034:81:17"
																				},
																				"nativeSrc": "9034:81:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "9034:81:17"
																			}
																		]
																	},
																	"nativeSrc": "8895:230:17",
																	"nodeType": "YulCase",
																	"src": "8895:230:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8248:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8248:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8256:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8256:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8245:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "8245:2:17"
																},
																"nativeSrc": "8245:14:17",
																"nodeType": "YulFunctionCall",
																"src": "8245:14:17"
															},
															"nativeSrc": "8238:887:17",
															"nodeType": "YulSwitch",
															"src": "8238:887:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7736:1395:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7817:4:17",
														"nodeType": "YulTypedName",
														"src": "7817:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7823:3:17",
														"nodeType": "YulTypedName",
														"src": "7823:3:17",
														"type": ""
													}
												],
												"src": "7736:1395:17"
											},
											{
												"body": {
													"nativeSrc": "9182:32:17",
													"nodeType": "YulBlock",
													"src": "9182:32:17",
													"statements": [
														{
															"nativeSrc": "9192:16:17",
															"nodeType": "YulAssignment",
															"src": "9192:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "9203:5:17",
																"nodeType": "YulIdentifier",
																"src": "9203:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9192:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "9192:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "9137:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9164:5:17",
														"nodeType": "YulTypedName",
														"src": "9164:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9174:7:17",
														"nodeType": "YulTypedName",
														"src": "9174:7:17",
														"type": ""
													}
												],
												"src": "9137:77:17"
											},
											{
												"body": {
													"nativeSrc": "9285:53:17",
													"nodeType": "YulBlock",
													"src": "9285:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9302:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "9302:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9325:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "9325:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "9307:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "9307:17:17"
																		},
																		"nativeSrc": "9307:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9307:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9295:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9295:6:17"
																},
																"nativeSrc": "9295:37:17",
																"nodeType": "YulFunctionCall",
																"src": "9295:37:17"
															},
															"nativeSrc": "9295:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "9295:37:17"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "9220:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9273:5:17",
														"nodeType": "YulTypedName",
														"src": "9273:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9280:3:17",
														"nodeType": "YulTypedName",
														"src": "9280:3:17",
														"type": ""
													}
												],
												"src": "9220:118:17"
											},
											{
												"body": {
													"nativeSrc": "9409:53:17",
													"nodeType": "YulBlock",
													"src": "9409:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9426:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "9426:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9449:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "9449:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9431:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "9431:17:17"
																		},
																		"nativeSrc": "9431:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9431:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9419:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9419:6:17"
																},
																"nativeSrc": "9419:37:17",
																"nodeType": "YulFunctionCall",
																"src": "9419:37:17"
															},
															"nativeSrc": "9419:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "9419:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9344:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9397:5:17",
														"nodeType": "YulTypedName",
														"src": "9397:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9404:3:17",
														"nodeType": "YulTypedName",
														"src": "9404:3:17",
														"type": ""
													}
												],
												"src": "9344:118:17"
											},
											{
												"body": {
													"nativeSrc": "9533:53:17",
													"nodeType": "YulBlock",
													"src": "9533:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9550:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "9550:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9573:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "9573:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9555:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "9555:17:17"
																		},
																		"nativeSrc": "9555:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9555:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9543:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9543:6:17"
																},
																"nativeSrc": "9543:37:17",
																"nodeType": "YulFunctionCall",
																"src": "9543:37:17"
															},
															"nativeSrc": "9543:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "9543:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9468:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9521:5:17",
														"nodeType": "YulTypedName",
														"src": "9521:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9528:3:17",
														"nodeType": "YulTypedName",
														"src": "9528:3:17",
														"type": ""
													}
												],
												"src": "9468:118:17"
											},
											{
												"body": {
													"nativeSrc": "9802:454:17",
													"nodeType": "YulBlock",
													"src": "9802:454:17",
													"statements": [
														{
															"nativeSrc": "9812:27:17",
															"nodeType": "YulAssignment",
															"src": "9812:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9824:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9824:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9835:3:17",
																		"nodeType": "YulLiteral",
																		"src": "9835:3:17",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9820:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9820:3:17"
																},
																"nativeSrc": "9820:19:17",
																"nodeType": "YulFunctionCall",
																"src": "9820:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9812:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9812:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9893:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9893:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9906:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9906:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9917:1:17",
																				"nodeType": "YulLiteral",
																				"src": "9917:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9902:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9902:3:17"
																		},
																		"nativeSrc": "9902:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9902:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9849:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "9849:43:17"
																},
																"nativeSrc": "9849:71:17",
																"nodeType": "YulFunctionCall",
																"src": "9849:71:17"
															},
															"nativeSrc": "9849:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "9849:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9974:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9974:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9987:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9987:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9998:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9998:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9983:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9983:3:17"
																		},
																		"nativeSrc": "9983:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9983:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9930:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "9930:43:17"
																},
																"nativeSrc": "9930:72:17",
																"nodeType": "YulFunctionCall",
																"src": "9930:72:17"
															},
															"nativeSrc": "9930:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "9930:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10056:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10056:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10069:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10069:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10080:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10080:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10065:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10065:3:17"
																		},
																		"nativeSrc": "10065:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10065:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10012:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "10012:43:17"
																},
																"nativeSrc": "10012:72:17",
																"nodeType": "YulFunctionCall",
																"src": "10012:72:17"
															},
															"nativeSrc": "10012:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "10012:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10138:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10138:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10151:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10151:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10162:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10162:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10147:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10147:3:17"
																		},
																		"nativeSrc": "10147:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10147:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10094:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "10094:43:17"
																},
																"nativeSrc": "10094:72:17",
																"nodeType": "YulFunctionCall",
																"src": "10094:72:17"
															},
															"nativeSrc": "10094:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "10094:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "10220:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10220:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10233:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10233:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10244:3:17",
																				"nodeType": "YulLiteral",
																				"src": "10244:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10229:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10229:3:17"
																		},
																		"nativeSrc": "10229:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10229:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10176:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "10176:43:17"
																},
																"nativeSrc": "10176:73:17",
																"nodeType": "YulFunctionCall",
																"src": "10176:73:17"
															},
															"nativeSrc": "10176:73:17",
															"nodeType": "YulExpressionStatement",
															"src": "10176:73:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "9592:664:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9742:9:17",
														"nodeType": "YulTypedName",
														"src": "9742:9:17",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9754:6:17",
														"nodeType": "YulTypedName",
														"src": "9754:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9762:6:17",
														"nodeType": "YulTypedName",
														"src": "9762:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9770:6:17",
														"nodeType": "YulTypedName",
														"src": "9770:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9778:6:17",
														"nodeType": "YulTypedName",
														"src": "9778:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9786:6:17",
														"nodeType": "YulTypedName",
														"src": "9786:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9797:4:17",
														"nodeType": "YulTypedName",
														"src": "9797:4:17",
														"type": ""
													}
												],
												"src": "9592:664:17"
											},
											{
												"body": {
													"nativeSrc": "10358:73:17",
													"nodeType": "YulBlock",
													"src": "10358:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10375:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10375:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10380:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10380:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10368:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10368:6:17"
																},
																"nativeSrc": "10368:19:17",
																"nodeType": "YulFunctionCall",
																"src": "10368:19:17"
															},
															"nativeSrc": "10368:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "10368:19:17"
														},
														{
															"nativeSrc": "10396:29:17",
															"nodeType": "YulAssignment",
															"src": "10396:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10415:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10415:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10420:4:17",
																		"nodeType": "YulLiteral",
																		"src": "10420:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10411:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10411:3:17"
																},
																"nativeSrc": "10411:14:17",
																"nodeType": "YulFunctionCall",
																"src": "10411:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10396:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "10396:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10262:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10330:3:17",
														"nodeType": "YulTypedName",
														"src": "10330:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10335:6:17",
														"nodeType": "YulTypedName",
														"src": "10335:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10346:11:17",
														"nodeType": "YulTypedName",
														"src": "10346:11:17",
														"type": ""
													}
												],
												"src": "10262:169:17"
											},
											{
												"body": {
													"nativeSrc": "10529:285:17",
													"nodeType": "YulBlock",
													"src": "10529:285:17",
													"statements": [
														{
															"nativeSrc": "10539:53:17",
															"nodeType": "YulVariableDeclaration",
															"src": "10539:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10586:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "10586:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "10553:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "10553:32:17"
																},
																"nativeSrc": "10553:39:17",
																"nodeType": "YulFunctionCall",
																"src": "10553:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10543:6:17",
																	"nodeType": "YulTypedName",
																	"src": "10543:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10601:78:17",
															"nodeType": "YulAssignment",
															"src": "10601:78:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10667:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10667:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10672:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10672:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10608:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "10608:58:17"
																},
																"nativeSrc": "10608:71:17",
																"nodeType": "YulFunctionCall",
																"src": "10608:71:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10601:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10601:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10727:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "10727:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10734:4:17",
																				"nodeType": "YulLiteral",
																				"src": "10734:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10723:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10723:3:17"
																		},
																		"nativeSrc": "10723:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10723:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10741:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10741:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10746:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10746:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10688:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "10688:34:17"
																},
																"nativeSrc": "10688:65:17",
																"nodeType": "YulFunctionCall",
																"src": "10688:65:17"
															},
															"nativeSrc": "10688:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "10688:65:17"
														},
														{
															"nativeSrc": "10762:46:17",
															"nodeType": "YulAssignment",
															"src": "10762:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10773:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10773:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10800:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10800:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10778:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "10778:21:17"
																		},
																		"nativeSrc": "10778:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10778:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10769:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10769:3:17"
																},
																"nativeSrc": "10769:39:17",
																"nodeType": "YulFunctionCall",
																"src": "10769:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10762:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10762:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10437:377:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10510:5:17",
														"nodeType": "YulTypedName",
														"src": "10510:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10517:3:17",
														"nodeType": "YulTypedName",
														"src": "10517:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10525:3:17",
														"nodeType": "YulTypedName",
														"src": "10525:3:17",
														"type": ""
													}
												],
												"src": "10437:377:17"
											},
											{
												"body": {
													"nativeSrc": "10938:195:17",
													"nodeType": "YulBlock",
													"src": "10938:195:17",
													"statements": [
														{
															"nativeSrc": "10948:26:17",
															"nodeType": "YulAssignment",
															"src": "10948:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10960:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10960:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10971:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10971:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10956:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10956:3:17"
																},
																"nativeSrc": "10956:18:17",
																"nodeType": "YulFunctionCall",
																"src": "10956:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10948:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10948:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10995:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10995:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11006:1:17",
																				"nodeType": "YulLiteral",
																				"src": "11006:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10991:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10991:3:17"
																		},
																		"nativeSrc": "10991:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10991:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11014:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "11014:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11020:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11020:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11010:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11010:3:17"
																		},
																		"nativeSrc": "11010:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11010:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10984:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10984:6:17"
																},
																"nativeSrc": "10984:47:17",
																"nodeType": "YulFunctionCall",
																"src": "10984:47:17"
															},
															"nativeSrc": "10984:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "10984:47:17"
														},
														{
															"nativeSrc": "11040:86:17",
															"nodeType": "YulAssignment",
															"src": "11040:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11112:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11112:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "11121:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "11121:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11048:63:17",
																	"nodeType": "YulIdentifier",
																	"src": "11048:63:17"
																},
																"nativeSrc": "11048:78:17",
																"nodeType": "YulFunctionCall",
																"src": "11048:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11040:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11040:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10820:313:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10910:9:17",
														"nodeType": "YulTypedName",
														"src": "10910:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10922:6:17",
														"nodeType": "YulTypedName",
														"src": "10922:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10933:4:17",
														"nodeType": "YulTypedName",
														"src": "10933:4:17",
														"type": ""
													}
												],
												"src": "10820:313:17"
											},
											{
												"body": {
													"nativeSrc": "11197:40:17",
													"nodeType": "YulBlock",
													"src": "11197:40:17",
													"statements": [
														{
															"nativeSrc": "11208:22:17",
															"nodeType": "YulAssignment",
															"src": "11208:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11224:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "11224:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11218:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "11218:5:17"
																},
																"nativeSrc": "11218:12:17",
																"nodeType": "YulFunctionCall",
																"src": "11218:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11208:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11208:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "11139:98:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11180:5:17",
														"nodeType": "YulTypedName",
														"src": "11180:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11190:6:17",
														"nodeType": "YulTypedName",
														"src": "11190:6:17",
														"type": ""
													}
												],
												"src": "11139:98:17"
											},
											{
												"body": {
													"nativeSrc": "11299:60:17",
													"nodeType": "YulBlock",
													"src": "11299:60:17",
													"statements": [
														{
															"nativeSrc": "11309:11:17",
															"nodeType": "YulAssignment",
															"src": "11309:11:17",
															"value": {
																"name": "ptr",
																"nativeSrc": "11317:3:17",
																"nodeType": "YulIdentifier",
																"src": "11317:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11309:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11309:4:17"
																}
															]
														},
														{
															"nativeSrc": "11330:22:17",
															"nodeType": "YulAssignment",
															"src": "11330:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "11342:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11342:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11347:4:17",
																		"nodeType": "YulLiteral",
																		"src": "11347:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11338:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11338:3:17"
																},
																"nativeSrc": "11338:14:17",
																"nodeType": "YulFunctionCall",
																"src": "11338:14:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11330:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11330:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nativeSrc": "11243:116:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11286:3:17",
														"nodeType": "YulTypedName",
														"src": "11286:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11294:4:17",
														"nodeType": "YulTypedName",
														"src": "11294:4:17",
														"type": ""
													}
												],
												"src": "11243:116:17"
											},
											{
												"body": {
													"nativeSrc": "11420:99:17",
													"nodeType": "YulBlock",
													"src": "11420:99:17",
													"statements": [
														{
															"nativeSrc": "11431:42:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11431:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "11468:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "11468:3:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "11462:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "11462:5:17"
																		},
																		"nativeSrc": "11462:10:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11462:10:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nativeSrc": "11444:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "11444:17:17"
																},
																"nativeSrc": "11444:29:17",
																"nodeType": "YulFunctionCall",
																"src": "11444:29:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "11435:5:17",
																	"nodeType": "YulTypedName",
																	"src": "11435:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11483:29:17",
															"nodeType": "YulAssignment",
															"src": "11483:29:17",
															"value": {
																"name": "value",
																"nativeSrc": "11507:5:17",
																"nodeType": "YulIdentifier",
																"src": "11507:5:17"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "11483:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "11483:11:17"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nativeSrc": "11365:154:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11400:3:17",
														"nodeType": "YulTypedName",
														"src": "11400:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nativeSrc": "11408:11:17",
														"nodeType": "YulTypedName",
														"src": "11408:11:17",
														"type": ""
													}
												],
												"src": "11365:154:17"
											},
											{
												"body": {
													"nativeSrc": "11615:504:17",
													"nodeType": "YulBlock",
													"src": "11615:504:17",
													"statements": [
														{
															"nativeSrc": "11626:52:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11626:52:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11672:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "11672:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "11640:31:17",
																	"nodeType": "YulIdentifier",
																	"src": "11640:31:17"
																},
																"nativeSrc": "11640:38:17",
																"nodeType": "YulFunctionCall",
																"src": "11640:38:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11630:6:17",
																	"nodeType": "YulTypedName",
																	"src": "11630:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11687:21:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11687:21:17",
															"value": {
																"name": "array",
																"nativeSrc": "11703:5:17",
																"nodeType": "YulIdentifier",
																"src": "11703:5:17"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nativeSrc": "11691:8:17",
																	"nodeType": "YulTypedName",
																	"src": "11691:8:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11718:52:17",
															"nodeType": "YulAssignment",
															"src": "11718:52:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11764:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "11764:5:17"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nativeSrc": "11730:33:17",
																	"nodeType": "YulIdentifier",
																	"src": "11730:33:17"
																},
																"nativeSrc": "11730:40:17",
																"nodeType": "YulFunctionCall",
																"src": "11730:40:17"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nativeSrc": "11718:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "11718:8:17"
																}
															]
														},
														{
															"nativeSrc": "11780:44:17",
															"nodeType": "YulAssignment",
															"src": "11780:44:17",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "11815:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "11815:8:17"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nativeSrc": "11789:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "11789:25:17"
																},
																"nativeSrc": "11789:35:17",
																"nodeType": "YulFunctionCall",
																"src": "11789:35:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11780:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "11780:5:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11852:260:17",
																"nodeType": "YulBlock",
																"src": "11852:260:17",
																"statements": [
																	{
																		"nativeSrc": "11866:236:17",
																		"nodeType": "YulAssignment",
																		"src": "11866:236:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "11896:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "11896:5:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "11963:1:17",
																									"nodeType": "YulLiteral",
																									"src": "11963:1:17",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "11970:2:17",
																											"nodeType": "YulLiteral",
																											"src": "11970:2:17",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "11974:6:17",
																											"nodeType": "YulIdentifier",
																											"src": "11974:6:17"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "11966:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "11966:3:17"
																									},
																									"nativeSrc": "11966:15:17",
																									"nodeType": "YulFunctionCall",
																									"src": "11966:15:17"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "11959:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "11959:3:17"
																							},
																							"nativeSrc": "11959:23:17",
																							"nodeType": "YulFunctionCall",
																							"src": "11959:23:17"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "12004:66:17",
																							"nodeType": "YulLiteral",
																							"src": "12004:66:17",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nativeSrc": "11919:18:17",
																						"nodeType": "YulIdentifier",
																						"src": "11919:18:17"
																					},
																					"nativeSrc": "11919:169:17",
																					"nodeType": "YulFunctionCall",
																					"src": "11919:169:17"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11875:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "11875:3:17"
																			},
																			"nativeSrc": "11875:227:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11875:227:17"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "11866:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "11866:5:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11840:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11840:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11848:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11848:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11837:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "11837:2:17"
																},
																"nativeSrc": "11837:14:17",
																"nodeType": "YulFunctionCall",
																"src": "11837:14:17"
															},
															"nativeSrc": "11834:278:17",
															"nodeType": "YulIf",
															"src": "11834:278:17"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "11525:594:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11599:5:17",
														"nodeType": "YulTypedName",
														"src": "11599:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11609:5:17",
														"nodeType": "YulTypedName",
														"src": "11609:5:17",
														"type": ""
													}
												],
												"src": "11525:594:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2086 CODESIZE SUB DUP1 PUSH2 0x2086 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x554 JUMP JUMPDEST DUP3 DUP3 PUSH2 0x48 PUSH1 0x1 DUP4 PUSH2 0x139 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH2 0x64 PUSH1 0x2 DUP3 PUSH2 0x139 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH2 0xA1 PUSH2 0x186 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0xF0 PUSH0 DUP1 SHL CALLER PUSH2 0x1E0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0xA3A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH2 0x15A JUMPI PUSH2 0x153 DUP4 PUSH2 0x2D5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH2 0x180 JUMP JUMPDEST DUP3 PUSH2 0x16A DUP4 PUSH2 0x33A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x7E9 JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1C5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1F1 DUP4 DUP4 PUSH2 0x343 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2CB JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x268 PUSH2 0x3A6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x2CF JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH2 0x321 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH2 0x32D SWAP1 PUSH2 0x9D4 JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x40C DUP3 PUSH2 0x3C6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x42B JUMPI PUSH2 0x42A PUSH2 0x3D6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x43D PUSH2 0x3AD JUMP JUMPDEST SWAP1 POP PUSH2 0x449 DUP3 DUP3 PUSH2 0x403 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x468 JUMPI PUSH2 0x467 PUSH2 0x3D6 JUMP JUMPDEST JUMPDEST PUSH2 0x471 DUP3 PUSH2 0x3C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x49E PUSH2 0x499 DUP5 PUSH2 0x44E JUMP JUMPDEST PUSH2 0x434 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4BA JUMPI PUSH2 0x4B9 PUSH2 0x3C2 JUMP JUMPDEST JUMPDEST PUSH2 0x4C5 DUP5 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4E1 JUMPI PUSH2 0x4E0 PUSH2 0x3BE JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4F1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x48C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x523 DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x533 DUP2 PUSH2 0x519 JUMP JUMPDEST DUP2 EQ PUSH2 0x53D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x54E DUP2 PUSH2 0x52A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x56B JUMPI PUSH2 0x56A PUSH2 0x3B6 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x588 JUMPI PUSH2 0x587 PUSH2 0x3BA JUMP JUMPDEST JUMPDEST PUSH2 0x594 DUP7 DUP3 DUP8 ADD PUSH2 0x4CD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B5 JUMPI PUSH2 0x5B4 PUSH2 0x3BA JUMP JUMPDEST JUMPDEST PUSH2 0x5C1 DUP7 DUP3 DUP8 ADD PUSH2 0x4CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5D2 DUP7 DUP3 DUP8 ADD PUSH2 0x540 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x62A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x63D JUMPI PUSH2 0x63C PUSH2 0x5E6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x69F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x664 JUMP JUMPDEST PUSH2 0x6A9 DUP7 DUP4 PUSH2 0x664 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6ED PUSH2 0x6E8 PUSH2 0x6E3 DUP5 PUSH2 0x6C1 JUMP JUMPDEST PUSH2 0x6CA JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x706 DUP4 PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x71A PUSH2 0x712 DUP3 PUSH2 0x6F4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x670 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x72E PUSH2 0x722 JUMP JUMPDEST PUSH2 0x739 DUP2 DUP5 DUP5 PUSH2 0x6FD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH2 0x751 PUSH0 DUP3 PUSH2 0x726 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x73F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7A1 JUMPI PUSH2 0x772 DUP2 PUSH2 0x643 JUMP JUMPDEST PUSH2 0x77B DUP5 PUSH2 0x655 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x78A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x79E PUSH2 0x796 DUP6 PUSH2 0x655 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x73E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7C1 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x7A6 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7D9 DUP4 DUP4 PUSH2 0x7B2 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7F2 DUP3 PUSH2 0x5DC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x80B JUMPI PUSH2 0x80A PUSH2 0x3D6 JUMP JUMPDEST JUMPDEST PUSH2 0x815 DUP3 SLOAD PUSH2 0x613 JUMP JUMPDEST PUSH2 0x820 DUP3 DUP3 DUP6 PUSH2 0x760 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x851 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x83F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x849 DUP6 DUP3 PUSH2 0x7CE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x8B0 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x85F DUP7 PUSH2 0x643 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x886 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x861 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x8A3 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x89F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x7B2 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CA DUP2 PUSH2 0x8B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x8D9 DUP2 PUSH2 0x6C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x8E8 DUP2 PUSH2 0x519 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x901 PUSH0 DUP4 ADD DUP9 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x90E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x91B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x8C1 JUMP JUMPDEST PUSH2 0x928 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0x935 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x8DF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x959 DUP3 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x963 DUP2 DUP6 PUSH2 0x93F JUMP JUMPDEST SWAP4 POP PUSH2 0x973 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x47E JUMP JUMPDEST PUSH2 0x97C DUP2 PUSH2 0x3C6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x99F DUP2 DUP5 PUSH2 0x94F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9CB DUP3 MLOAD PUSH2 0x8B8 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9DE DUP3 PUSH2 0x9A7 JUMP JUMPDEST DUP3 PUSH2 0x9E8 DUP5 PUSH2 0x9B1 JUMP JUMPDEST SWAP1 POP PUSH2 0x9F3 DUP2 PUSH2 0x9C0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH2 0xA33 JUMPI PUSH2 0xA2E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH2 0x664 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160A PUSH2 0xA7C PUSH0 CODECOPY PUSH0 PUSH2 0xB00 ADD MSTORE PUSH0 PUSH2 0xAC5 ADD MSTORE PUSH0 POP POP PUSH0 POP POP PUSH0 POP POP PUSH0 POP POP PUSH0 POP POP PUSH2 0x160A PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xDF6244DB EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xE7705DB6 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xF736C365 EQ PUSH2 0x306 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xA3669AEF EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA865E5FE EQ PUSH2 0x280 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x7FA417B3 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x1F2 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x337C061 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x17E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BE PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x5E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F0 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH2 0x705 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x394 JUMPI POP PUSH2 0x393 DUP3 PUSH2 0x866 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x3A7 DUP2 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x3D1 PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP4 PUSH2 0x3F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FA DUP3 PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x403 DUP2 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x40D DUP4 DUP4 PUSH2 0x8E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x41B PUSH2 0x9CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x489 DUP3 DUP3 PUSH2 0x9D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x4E8 PUSH2 0xABC JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0xAF7 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x50F JUMPI PUSH2 0x50E PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x53D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x5F1 DUP2 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x61B PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP4 PUSH2 0x651 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x64A PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP4 PUSH2 0x57C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65A DUP3 PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x663 DUP2 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x66D DUP4 DUP4 PUSH2 0x9D3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x69D DUP2 PUSH2 0x8CF JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP2 JUMP JUMPDEST PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 PUSH2 0x72F DUP2 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1E8E1E13 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x140C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7AA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH2 0x80D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x804 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9055E6953596A4BEC3EE94FE69263DBBB095EBEE41411BC4902A0C4CF0A51A21 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x855 SWAP3 SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E0 DUP2 PUSH2 0x8DB PUSH2 0x9CC JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x8EE DUP4 DUP4 PUSH2 0x57C JUMP JUMPDEST PUSH2 0x9C2 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x95F PUSH2 0x9CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x9C6 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9DE DUP4 DUP4 PUSH2 0x57C JUMP JUMPDEST ISZERO PUSH2 0xAB2 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xA4F PUSH2 0x9CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xAB6 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAF2 PUSH1 0x1 PUSH32 0x0 PUSH2 0xB83 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB2D PUSH1 0x2 PUSH32 0x0 PUSH2 0xB83 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB3C DUP3 DUP3 PUSH2 0x57C JUMP JUMPDEST PUSH2 0xB7F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB76 SWAP3 SWAP2 SWAP1 PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0xB9F JUMPI PUSH2 0xB98 DUP4 PUSH2 0xC30 JUMP JUMPDEST SWAP1 POP PUSH2 0xC2A JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xBAB SWAP1 PUSH2 0x15A4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBD7 SWAP1 PUSH2 0x15A4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC22 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBF9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC22 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC05 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xC3C DUP4 PUSH2 0xCA2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC5A JUMPI PUSH2 0xC59 PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC8C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0xCE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD2C DUP2 PUSH2 0xCF8 JUMP JUMPDEST DUP2 EQ PUSH2 0xD36 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD47 DUP2 PUSH2 0xD23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD62 JUMPI PUSH2 0xD61 PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD6F DUP5 DUP3 DUP6 ADD PUSH2 0xD39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8C DUP2 PUSH2 0xD78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA5 PUSH0 DUP4 ADD DUP5 PUSH2 0xD83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDD4 DUP3 PUSH2 0xDAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE4 DUP2 PUSH2 0xDCA JUMP JUMPDEST DUP2 EQ PUSH2 0xDEE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDFF DUP2 PUSH2 0xDDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1A JUMPI PUSH2 0xE19 PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE27 DUP5 DUP3 DUP6 ADD PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE42 DUP2 PUSH2 0xE30 JUMP JUMPDEST DUP2 EQ PUSH2 0xE4C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5D DUP2 PUSH2 0xE39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE78 JUMPI PUSH2 0xE77 PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE85 DUP5 DUP3 DUP6 ADD PUSH2 0xE4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE97 DUP2 PUSH2 0xE30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB0 PUSH0 DUP4 ADD DUP5 PUSH2 0xE8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xECC JUMPI PUSH2 0xECB PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xED9 DUP6 DUP3 DUP7 ADD PUSH2 0xE4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEEA DUP6 DUP3 DUP7 ADD PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF17 PUSH2 0xF12 PUSH2 0xF0D DUP5 PUSH2 0xDAB JUMP JUMPDEST PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF28 DUP3 PUSH2 0xEFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF39 DUP3 PUSH2 0xF1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF49 DUP2 PUSH2 0xF2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF62 PUSH0 DUP4 ADD DUP5 PUSH2 0xF40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9C DUP2 PUSH2 0xF68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFE4 DUP3 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xFEE DUP2 DUP6 PUSH2 0xFAC JUMP JUMPDEST SWAP4 POP PUSH2 0xFFE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFBC JUMP JUMPDEST PUSH2 0x1007 DUP2 PUSH2 0xFCA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1024 DUP2 PUSH2 0x1012 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1033 DUP2 PUSH2 0xDCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106B DUP2 PUSH2 0x1012 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x107C DUP4 DUP4 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x109E DUP3 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x10A8 DUP2 DUP6 PUSH2 0x1043 JUMP JUMPDEST SWAP4 POP PUSH2 0x10B3 DUP4 PUSH2 0x1053 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10E3 JUMPI DUP2 MLOAD PUSH2 0x10CA DUP9 DUP3 PUSH2 0x1071 JUMP JUMPDEST SWAP8 POP PUSH2 0x10D5 DUP4 PUSH2 0x1088 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x10B6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1103 PUSH0 DUP4 ADD DUP11 PUSH2 0xF93 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1115 DUP2 DUP10 PUSH2 0xFDA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1129 DUP2 DUP9 PUSH2 0xFDA JUMP JUMPDEST SWAP1 POP PUSH2 0x1138 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x1145 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x1152 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xE8E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1164 DUP2 DUP5 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1193 JUMPI PUSH2 0x1192 PUSH2 0x1172 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B0 JUMPI PUSH2 0x11AF PUSH2 0x1176 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x11CC JUMPI PUSH2 0x11CB PUSH2 0x117A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x11E8 JUMPI PUSH2 0x11E7 PUSH2 0x1172 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1205 JUMPI PUSH2 0x1204 PUSH2 0x1176 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1221 JUMPI PUSH2 0x1220 PUSH2 0x117A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x123D JUMPI PUSH2 0x123C PUSH2 0x1172 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x125A JUMPI PUSH2 0x1259 PUSH2 0x1176 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1276 JUMPI PUSH2 0x1275 PUSH2 0x117A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1297 JUMPI PUSH2 0x1296 PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST PUSH0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12B4 JUMPI PUSH2 0x12B3 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST PUSH2 0x12C0 DUP10 DUP3 DUP11 ADD PUSH2 0x117E JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12E3 JUMPI PUSH2 0x12E2 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST PUSH2 0x12EF DUP10 DUP3 DUP11 ADD PUSH2 0x11D3 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1312 JUMPI PUSH2 0x1311 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST PUSH2 0x131E DUP10 DUP3 DUP11 ADD PUSH2 0x1228 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1383 DUP4 DUP6 PUSH2 0x135A JUMP JUMPDEST SWAP4 POP PUSH2 0x1390 DUP4 DUP6 DUP5 PUSH2 0x136A JUMP JUMPDEST PUSH2 0x1399 DUP4 PUSH2 0xFCA JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13BC DUP4 DUP6 PUSH2 0x1043 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x13EF JUMPI PUSH2 0x13EE PUSH2 0x13A4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0x1400 DUP4 DUP6 DUP5 PUSH2 0x13A8 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1425 DUP2 DUP7 DUP9 PUSH2 0x1378 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x143A DUP2 DUP5 DUP7 PUSH2 0x13B1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x144E DUP2 PUSH2 0xD78 JUMP JUMPDEST DUP2 EQ PUSH2 0x1458 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1469 DUP2 PUSH2 0x1445 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1484 JUMPI PUSH2 0x1483 PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1491 DUP5 DUP3 DUP6 ADD PUSH2 0x145B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726F6F6647656E65726174696F6E3A20496E76616C69642070726F6F660000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14CE PUSH1 0x1E DUP4 PUSH2 0xFAC JUMP JUMPDEST SWAP2 POP PUSH2 0x14D9 DUP3 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14FB DUP2 PUSH2 0x14C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x150D DUP4 DUP6 PUSH2 0xFAC JUMP JUMPDEST SWAP4 POP PUSH2 0x151A DUP4 DUP6 DUP5 PUSH2 0x136A JUMP JUMPDEST PUSH2 0x1523 DUP4 PUSH2 0xFCA JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1547 DUP2 DUP5 DUP7 PUSH2 0x1502 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1563 PUSH0 DUP4 ADD DUP6 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x1570 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x15BB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15CE JUMPI PUSH2 0x15CD PUSH2 0x1577 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH24 0xA69BE758A4C0671134C42FBE916528414D14BF228CD860B6 0xEF 0xD2 SWAP2 SWAP7 LOG2 JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "897:2259:16:-:0;;;1258:216;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1344:4;1350:7;3401:45:9;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1369:42:16::1;2232:4:0;1380:18:16::0;::::1;1400:10;1369;;;:42;;:::i;:::-;;1452:14;1421:13;;:46;;;;;;;;;;;;;;;;;;1258:216:::0;;;897:2259;;2914:340:5;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:9:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;1708:286:5:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:6:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:126::-;2607:7;2647:42;2640:5;2636:54;2625:65;;2570:126;;;:::o;2702:96::-;2739:7;2768:24;2786:5;2768:24;:::i;:::-;2757:35;;2702:96;;;:::o;2804:122::-;2877:24;2895:5;2877:24;:::i;:::-;2870:5;2867:35;2857:63;;2916:1;2913;2906:12;2857:63;2804:122;:::o;2932:143::-;2989:5;3020:6;3014:13;3005:22;;3036:33;3063:5;3036:33;:::i;:::-;2932:143;;;;:::o;3081:1009::-;3189:6;3197;3205;3254:2;3242:9;3233:7;3229:23;3225:32;3222:119;;;3260:79;;:::i;:::-;3222:119;3401:1;3390:9;3386:17;3380:24;3431:18;3423:6;3420:30;3417:117;;;3453:79;;:::i;:::-;3417:117;3558:74;3624:7;3615:6;3604:9;3600:22;3558:74;:::i;:::-;3548:84;;3351:291;3702:2;3691:9;3687:18;3681:25;3733:18;3725:6;3722:30;3719:117;;;3755:79;;:::i;:::-;3719:117;3860:74;3926:7;3917:6;3906:9;3902:22;3860:74;:::i;:::-;3850:84;;3652:292;3983:2;4009:64;4065:7;4056:6;4045:9;4041:22;4009:64;:::i;:::-;3999:74;;3954:129;3081:1009;;;;;:::o;4096:99::-;4148:6;4182:5;4176:12;4166:22;;4096:99;;;:::o;4201:180::-;4249:77;4246:1;4239:88;4346:4;4343:1;4336:15;4370:4;4367:1;4360:15;4387:320;4431:6;4468:1;4462:4;4458:12;4448:22;;4515:1;4509:4;4505:12;4536:18;4526:81;;4592:4;4584:6;4580:17;4570:27;;4526:81;4654:2;4646:6;4643:14;4623:18;4620:38;4617:84;;4673:18;;:::i;:::-;4617:84;4438:269;4387:320;;;:::o;4713:141::-;4762:4;4785:3;4777:11;;4808:3;4805:1;4798:14;4842:4;4839:1;4829:18;4821:26;;4713:141;;;:::o;4860:93::-;4897:6;4944:2;4939;4932:5;4928:14;4924:23;4914:33;;4860:93;;;:::o;4959:107::-;5003:8;5053:5;5047:4;5043:16;5022:37;;4959:107;;;;:::o;5072:393::-;5141:6;5191:1;5179:10;5175:18;5214:97;5244:66;5233:9;5214:97;:::i;:::-;5332:39;5362:8;5351:9;5332:39;:::i;:::-;5320:51;;5404:4;5400:9;5393:5;5389:21;5380:30;;5453:4;5443:8;5439:19;5432:5;5429:30;5419:40;;5148:317;;5072:393;;;;;:::o;5471:77::-;5508:7;5537:5;5526:16;;5471:77;;;:::o;5554:60::-;5582:3;5603:5;5596:12;;5554:60;;;:::o;5620:142::-;5670:9;5703:53;5721:34;5730:24;5748:5;5730:24;:::i;:::-;5721:34;:::i;:::-;5703:53;:::i;:::-;5690:66;;5620:142;;;:::o;5768:75::-;5811:3;5832:5;5825:12;;5768:75;;;:::o;5849:269::-;5959:39;5990:7;5959:39;:::i;:::-;6020:91;6069:41;6093:16;6069:41;:::i;:::-;6061:6;6054:4;6048:11;6020:91;:::i;:::-;6014:4;6007:105;5925:193;5849:269;;;:::o;6124:73::-;6169:3;6124:73;:::o;6203:189::-;6280:32;;:::i;:::-;6321:65;6379:6;6371;6365:4;6321:65;:::i;:::-;6256:136;6203:189;;:::o;6398:186::-;6458:120;6475:3;6468:5;6465:14;6458:120;;;6529:39;6566:1;6559:5;6529:39;:::i;:::-;6502:1;6495:5;6491:13;6482:22;;6458:120;;;6398:186;;:::o;6590:543::-;6691:2;6686:3;6683:11;6680:446;;;6725:38;6757:5;6725:38;:::i;:::-;6809:29;6827:10;6809:29;:::i;:::-;6799:8;6795:44;6992:2;6980:10;6977:18;6974:49;;;7013:8;6998:23;;6974:49;7036:80;7092:22;7110:3;7092:22;:::i;:::-;7082:8;7078:37;7065:11;7036:80;:::i;:::-;6695:431;;6680:446;6590:543;;;:::o;7139:117::-;7193:8;7243:5;7237:4;7233:16;7212:37;;7139:117;;;;:::o;7262:169::-;7306:6;7339:51;7387:1;7383:6;7375:5;7372:1;7368:13;7339:51;:::i;:::-;7335:56;7420:4;7414;7410:15;7400:25;;7313:118;7262:169;;;;:::o;7436:295::-;7512:4;7658:29;7683:3;7677:4;7658:29;:::i;:::-;7650:37;;7720:3;7717:1;7713:11;7707:4;7704:21;7696:29;;7436:295;;;;:::o;7736:1395::-;7853:37;7886:3;7853:37;:::i;:::-;7955:18;7947:6;7944:30;7941:56;;;7977:18;;:::i;:::-;7941:56;8021:38;8053:4;8047:11;8021:38;:::i;:::-;8106:67;8166:6;8158;8152:4;8106:67;:::i;:::-;8200:1;8224:4;8211:17;;8256:2;8248:6;8245:14;8273:1;8268:618;;;;8930:1;8947:6;8944:77;;;8996:9;8991:3;8987:19;8981:26;8972:35;;8944:77;9047:67;9107:6;9100:5;9047:67;:::i;:::-;9041:4;9034:81;8903:222;8238:887;;8268:618;8320:4;8316:9;8308:6;8304:22;8354:37;8386:4;8354:37;:::i;:::-;8413:1;8427:208;8441:7;8438:1;8435:14;8427:208;;;8520:9;8515:3;8511:19;8505:26;8497:6;8490:42;8571:1;8563:6;8559:14;8549:24;;8618:2;8607:9;8603:18;8590:31;;8464:4;8461:1;8457:12;8452:17;;8427:208;;;8663:6;8654:7;8651:19;8648:179;;;8721:9;8716:3;8712:19;8706:26;8764:48;8806:4;8798:6;8794:17;8783:9;8764:48;:::i;:::-;8756:6;8749:64;8671:156;8648:179;8873:1;8869;8861:6;8857:14;8853:22;8847:4;8840:36;8275:611;;;8238:887;;7828:1303;;;7736:1395;;:::o;9137:77::-;9174:7;9203:5;9192:16;;9137:77;;;:::o;9220:118::-;9307:24;9325:5;9307:24;:::i;:::-;9302:3;9295:37;9220:118;;:::o;9344:::-;9431:24;9449:5;9431:24;:::i;:::-;9426:3;9419:37;9344:118;;:::o;9468:::-;9555:24;9573:5;9555:24;:::i;:::-;9550:3;9543:37;9468:118;;:::o;9592:664::-;9797:4;9835:3;9824:9;9820:19;9812:27;;9849:71;9917:1;9906:9;9902:17;9893:6;9849:71;:::i;:::-;9930:72;9998:2;9987:9;9983:18;9974:6;9930:72;:::i;:::-;10012;10080:2;10069:9;10065:18;10056:6;10012:72;:::i;:::-;10094;10162:2;10151:9;10147:18;10138:6;10094:72;:::i;:::-;10176:73;10244:3;10233:9;10229:19;10220:6;10176:73;:::i;:::-;9592:664;;;;;;;;:::o;10262:169::-;10346:11;10380:6;10375:3;10368:19;10420:4;10415:3;10411:14;10396:29;;10262:169;;;;:::o;10437:377::-;10525:3;10553:39;10586:5;10553:39;:::i;:::-;10608:71;10672:6;10667:3;10608:71;:::i;:::-;10601:78;;10688:65;10746:6;10741:3;10734:4;10727:5;10723:16;10688:65;:::i;:::-;10778:29;10800:6;10778:29;:::i;:::-;10773:3;10769:39;10762:46;;10529:285;10437:377;;;;:::o;10820:313::-;10933:4;10971:2;10960:9;10956:18;10948:26;;11020:9;11014:4;11010:20;11006:1;10995:9;10991:17;10984:47;11048:78;11121:4;11112:6;11048:78;:::i;:::-;11040:86;;10820:313;;;;:::o;11139:98::-;11190:6;11224:5;11218:12;11208:22;;11139:98;;;:::o;11243:116::-;11294:4;11317:3;11309:11;;11347:4;11342:3;11338:14;11330:22;;11243:116;;;:::o;11365:154::-;11408:11;11444:29;11468:3;11462:10;11444:29;:::i;:::-;11507:5;11483:29;;11420:99;11365:154;;;:::o;11525:594::-;11609:5;11640:38;11672:5;11640:38;:::i;:::-;11703:5;11730:40;11764:5;11730:40;:::i;:::-;11718:52;;11789:35;11815:8;11789:35;:::i;:::-;11780:44;;11848:2;11840:6;11837:14;11834:278;;;11919:169;12004:66;11974:6;11970:2;11966:15;11963:1;11959:23;11919:169;:::i;:::-;11896:5;11875:227;11866:236;;11834:278;11615:504;;11525:594;;;:::o;897:2259:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_3012": {
									"entryPoint": 1166,
									"id": 3012,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 1503,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@VERIFIER_ROLE_3017": {
									"entryPoint": 1761,
									"id": 3017,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_EIP712Name_1591": {
									"entryPoint": 2748,
									"id": 1591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_1603": {
									"entryPoint": 2807,
									"id": 1603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkRole_114": {
									"entryPoint": 2866,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 2255,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 2275,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_429": {
									"entryPoint": 2508,
									"id": 429,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 2515,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@byteLength_565": {
									"entryPoint": 3234,
									"id": 565,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@eip712Domain_1579": {
									"entryPoint": 1239,
									"id": 1579,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@generateProof_3082": {
									"entryPoint": 1797,
									"id": 3082,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": 981,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1009,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@grantVerifierRole_3113": {
									"entryPoint": 923,
									"id": 3113,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1404,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@hasVerifierRole_3142": {
									"entryPoint": 1567,
									"id": 3142,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@proofVerifier_3020": {
									"entryPoint": 1202,
									"id": 3020,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 1043,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 1617,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeVerifierRole_3128": {
									"entryPoint": 1509,
									"id": 3128,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setProofVerifier_3098": {
									"entryPoint": 1651,
									"id": 3098,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1802": {
									"entryPoint": 2150,
									"id": 1802,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 802,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toStringWithFallback_632": {
									"entryPoint": 2947,
									"id": 632,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_533": {
									"entryPoint": 3120,
									"id": 533,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 4563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 3663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 4478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 4648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_string_calldata_ptr": {
									"entryPoint": 4733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 4209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5041,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 3987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4984,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IProofVerifier_$2996_to_t_address_fromStack": {
									"entryPoint": 3904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5378,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 5456,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4336,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 3741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_bytes_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5132,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IProofVerifier_$2996__to_t_address__fromStack_reversed": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5422,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 4163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 3944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IProofVerifier_$2996_to_t_address": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 5032,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 4970,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4028,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 5495,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 4470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4466,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 4474,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3316,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec": {
									"entryPoint": 5028,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3312,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e": {
									"entryPoint": 5274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 3641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17981:17",
										"nodeType": "YulBlock",
										"src": "0:17981:17",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:17",
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nativeSrc": "57:19:17",
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:17",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nativeSrc": "67:9:17",
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:17",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nativeSrc": "177:28:17",
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:17",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:17",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nativeSrc": "187:12:17",
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nativeSrc": "187:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nativeSrc": "300:28:17",
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:17",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:17",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nativeSrc": "310:12:17",
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nativeSrc": "310:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nativeSrc": "378:105:17",
													"nodeType": "YulBlock",
													"src": "378:105:17",
													"statements": [
														{
															"nativeSrc": "388:89:17",
															"nodeType": "YulAssignment",
															"src": "388:89:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:17",
																		"nodeType": "YulLiteral",
																		"src": "410:66:17",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:17"
																},
																"nativeSrc": "399:78:17",
																"nodeType": "YulFunctionCall",
																"src": "399:78:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:17",
														"nodeType": "YulTypedName",
														"src": "360:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:17",
														"nodeType": "YulTypedName",
														"src": "370:7:17",
														"type": ""
													}
												],
												"src": "334:149:17"
											},
											{
												"body": {
													"nativeSrc": "531:78:17",
													"nodeType": "YulBlock",
													"src": "531:78:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:17",
																"nodeType": "YulBlock",
																"src": "587:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:17",
																					"nodeType": "YulLiteral",
																					"src": "596:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:17",
																					"nodeType": "YulLiteral",
																					"src": "599:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:17"
																			},
																			"nativeSrc": "589:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:17"
																		},
																		"nativeSrc": "589:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:17",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:17"
																				},
																				"nativeSrc": "561:23:17",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:17"
																		},
																		"nativeSrc": "551:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:17"
																},
																"nativeSrc": "544:42:17",
																"nodeType": "YulFunctionCall",
																"src": "544:42:17"
															},
															"nativeSrc": "541:62:17",
															"nodeType": "YulIf",
															"src": "541:62:17"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:17",
														"nodeType": "YulTypedName",
														"src": "524:5:17",
														"type": ""
													}
												],
												"src": "489:120:17"
											},
											{
												"body": {
													"nativeSrc": "666:86:17",
													"nodeType": "YulBlock",
													"src": "666:86:17",
													"statements": [
														{
															"nativeSrc": "676:29:17",
															"nodeType": "YulAssignment",
															"src": "676:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:17"
																},
																"nativeSrc": "685:20:17",
																"nodeType": "YulFunctionCall",
																"src": "685:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:17"
																},
																"nativeSrc": "714:32:17",
																"nodeType": "YulFunctionCall",
																"src": "714:32:17"
															},
															"nativeSrc": "714:32:17",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:17"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:17",
														"nodeType": "YulTypedName",
														"src": "644:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:17",
														"nodeType": "YulTypedName",
														"src": "652:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:17",
														"nodeType": "YulTypedName",
														"src": "660:5:17",
														"type": ""
													}
												],
												"src": "615:137:17"
											},
											{
												"body": {
													"nativeSrc": "823:262:17",
													"nodeType": "YulBlock",
													"src": "823:262:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:17",
																"nodeType": "YulBlock",
																"src": "869:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:17"
																			},
																			"nativeSrc": "871:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:17"
																		},
																		"nativeSrc": "871:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:17"
																		},
																		"nativeSrc": "840:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:17",
																		"nodeType": "YulLiteral",
																		"src": "865:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:17"
																},
																"nativeSrc": "836:32:17",
																"nodeType": "YulFunctionCall",
																"src": "836:32:17"
															},
															"nativeSrc": "833:119:17",
															"nodeType": "YulIf",
															"src": "833:119:17"
														},
														{
															"nativeSrc": "962:116:17",
															"nodeType": "YulBlock",
															"src": "962:116:17",
															"statements": [
																{
																	"nativeSrc": "977:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:17",
																		"nodeType": "YulLiteral",
																		"src": "991:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:17",
																			"nodeType": "YulTypedName",
																			"src": "981:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:17",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:17"
																				},
																				"nativeSrc": "1036:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:17",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:17"
																		},
																		"nativeSrc": "1016:52:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:17",
														"nodeType": "YulTypedName",
														"src": "793:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:17",
														"nodeType": "YulTypedName",
														"src": "804:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:17",
														"nodeType": "YulTypedName",
														"src": "816:6:17",
														"type": ""
													}
												],
												"src": "758:327:17"
											},
											{
												"body": {
													"nativeSrc": "1133:48:17",
													"nodeType": "YulBlock",
													"src": "1133:48:17",
													"statements": [
														{
															"nativeSrc": "1143:32:17",
															"nodeType": "YulAssignment",
															"src": "1143:32:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:17"
																		},
																		"nativeSrc": "1161:13:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:17"
																},
																"nativeSrc": "1154:21:17",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:17",
														"nodeType": "YulTypedName",
														"src": "1115:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:17",
														"nodeType": "YulTypedName",
														"src": "1125:7:17",
														"type": ""
													}
												],
												"src": "1091:90:17"
											},
											{
												"body": {
													"nativeSrc": "1246:50:17",
													"nodeType": "YulBlock",
													"src": "1246:50:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:17",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:17"
																		},
																		"nativeSrc": "1268:21:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:17"
																},
																"nativeSrc": "1256:34:17",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:17"
															},
															"nativeSrc": "1256:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:17"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:17",
														"nodeType": "YulTypedName",
														"src": "1234:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:17",
														"nodeType": "YulTypedName",
														"src": "1241:3:17",
														"type": ""
													}
												],
												"src": "1187:109:17"
											},
											{
												"body": {
													"nativeSrc": "1394:118:17",
													"nodeType": "YulBlock",
													"src": "1394:118:17",
													"statements": [
														{
															"nativeSrc": "1404:26:17",
															"nodeType": "YulAssignment",
															"src": "1404:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:17"
																},
																"nativeSrc": "1412:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:17",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:17"
																		},
																		"nativeSrc": "1487:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:17",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:17"
																},
																"nativeSrc": "1440:65:17",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:17"
															},
															"nativeSrc": "1440:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:17",
														"nodeType": "YulTypedName",
														"src": "1366:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:17",
														"nodeType": "YulTypedName",
														"src": "1378:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:17",
														"nodeType": "YulTypedName",
														"src": "1389:4:17",
														"type": ""
													}
												],
												"src": "1302:210:17"
											},
											{
												"body": {
													"nativeSrc": "1563:81:17",
													"nodeType": "YulBlock",
													"src": "1563:81:17",
													"statements": [
														{
															"nativeSrc": "1573:65:17",
															"nodeType": "YulAssignment",
															"src": "1573:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:17",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:17"
																},
																"nativeSrc": "1584:54:17",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:17",
														"nodeType": "YulTypedName",
														"src": "1545:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:17",
														"nodeType": "YulTypedName",
														"src": "1555:7:17",
														"type": ""
													}
												],
												"src": "1518:126:17"
											},
											{
												"body": {
													"nativeSrc": "1695:51:17",
													"nodeType": "YulBlock",
													"src": "1695:51:17",
													"statements": [
														{
															"nativeSrc": "1705:35:17",
															"nodeType": "YulAssignment",
															"src": "1705:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:17"
																},
																"nativeSrc": "1716:24:17",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:17",
														"nodeType": "YulTypedName",
														"src": "1677:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:17",
														"nodeType": "YulTypedName",
														"src": "1687:7:17",
														"type": ""
													}
												],
												"src": "1650:96:17"
											},
											{
												"body": {
													"nativeSrc": "1795:79:17",
													"nodeType": "YulBlock",
													"src": "1795:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:17",
																"nodeType": "YulBlock",
																"src": "1852:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:17"
																			},
																			"nativeSrc": "1854:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:17"
																		},
																		"nativeSrc": "1854:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:17"
																				},
																				"nativeSrc": "1825:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:17"
																		},
																		"nativeSrc": "1815:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:17"
																},
																"nativeSrc": "1808:43:17",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:17"
															},
															"nativeSrc": "1805:63:17",
															"nodeType": "YulIf",
															"src": "1805:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:17",
														"nodeType": "YulTypedName",
														"src": "1788:5:17",
														"type": ""
													}
												],
												"src": "1752:122:17"
											},
											{
												"body": {
													"nativeSrc": "1932:87:17",
													"nodeType": "YulBlock",
													"src": "1932:87:17",
													"statements": [
														{
															"nativeSrc": "1942:29:17",
															"nodeType": "YulAssignment",
															"src": "1942:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:17"
																},
																"nativeSrc": "1951:20:17",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:17"
																},
																"nativeSrc": "1980:33:17",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:17"
															},
															"nativeSrc": "1980:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:17",
														"nodeType": "YulTypedName",
														"src": "1910:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:17",
														"nodeType": "YulTypedName",
														"src": "1918:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:17",
														"nodeType": "YulTypedName",
														"src": "1926:5:17",
														"type": ""
													}
												],
												"src": "1880:139:17"
											},
											{
												"body": {
													"nativeSrc": "2091:263:17",
													"nodeType": "YulBlock",
													"src": "2091:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2137:83:17",
																"nodeType": "YulBlock",
																"src": "2137:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2139:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "2139:77:17"
																			},
																			"nativeSrc": "2139:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2139:79:17"
																		},
																		"nativeSrc": "2139:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2112:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2112:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2121:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2108:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:17"
																		},
																		"nativeSrc": "2108:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2108:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2104:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:17"
																},
																"nativeSrc": "2104:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2104:32:17"
															},
															"nativeSrc": "2101:119:17",
															"nodeType": "YulIf",
															"src": "2101:119:17"
														},
														{
															"nativeSrc": "2230:117:17",
															"nodeType": "YulBlock",
															"src": "2230:117:17",
															"statements": [
																{
																	"nativeSrc": "2245:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2245:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2259:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2259:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2249:6:17",
																			"nodeType": "YulTypedName",
																			"src": "2249:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2274:63:17",
																	"nodeType": "YulAssignment",
																	"src": "2274:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2309:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "2309:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2320:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "2320:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2305:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2305:3:17"
																				},
																				"nativeSrc": "2305:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2305:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2329:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2329:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2284:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "2284:20:17"
																		},
																		"nativeSrc": "2284:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2284:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2274:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "2274:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2025:329:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2061:9:17",
														"nodeType": "YulTypedName",
														"src": "2061:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2072:7:17",
														"nodeType": "YulTypedName",
														"src": "2072:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2084:6:17",
														"nodeType": "YulTypedName",
														"src": "2084:6:17",
														"type": ""
													}
												],
												"src": "2025:329:17"
											},
											{
												"body": {
													"nativeSrc": "2405:32:17",
													"nodeType": "YulBlock",
													"src": "2405:32:17",
													"statements": [
														{
															"nativeSrc": "2415:16:17",
															"nodeType": "YulAssignment",
															"src": "2415:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "2426:5:17",
																"nodeType": "YulIdentifier",
																"src": "2426:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2415:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "2415:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "2360:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2387:5:17",
														"nodeType": "YulTypedName",
														"src": "2387:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2397:7:17",
														"nodeType": "YulTypedName",
														"src": "2397:7:17",
														"type": ""
													}
												],
												"src": "2360:77:17"
											},
											{
												"body": {
													"nativeSrc": "2486:79:17",
													"nodeType": "YulBlock",
													"src": "2486:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2543:16:17",
																"nodeType": "YulBlock",
																"src": "2543:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2552:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2552:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2555:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2555:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2545:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2545:6:17"
																			},
																			"nativeSrc": "2545:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2545:12:17"
																		},
																		"nativeSrc": "2545:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2545:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2509:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "2509:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2534:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "2534:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "2516:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "2516:17:17"
																				},
																				"nativeSrc": "2516:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2516:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2506:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "2506:2:17"
																		},
																		"nativeSrc": "2506:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2506:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2499:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2499:6:17"
																},
																"nativeSrc": "2499:43:17",
																"nodeType": "YulFunctionCall",
																"src": "2499:43:17"
															},
															"nativeSrc": "2496:63:17",
															"nodeType": "YulIf",
															"src": "2496:63:17"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "2443:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2479:5:17",
														"nodeType": "YulTypedName",
														"src": "2479:5:17",
														"type": ""
													}
												],
												"src": "2443:122:17"
											},
											{
												"body": {
													"nativeSrc": "2623:87:17",
													"nodeType": "YulBlock",
													"src": "2623:87:17",
													"statements": [
														{
															"nativeSrc": "2633:29:17",
															"nodeType": "YulAssignment",
															"src": "2633:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2655:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2655:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2642:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2642:12:17"
																},
																"nativeSrc": "2642:20:17",
																"nodeType": "YulFunctionCall",
																"src": "2642:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2633:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2633:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2698:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2698:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "2671:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "2671:26:17"
																},
																"nativeSrc": "2671:33:17",
																"nodeType": "YulFunctionCall",
																"src": "2671:33:17"
															},
															"nativeSrc": "2671:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "2671:33:17"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "2571:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2601:6:17",
														"nodeType": "YulTypedName",
														"src": "2601:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2609:3:17",
														"nodeType": "YulTypedName",
														"src": "2609:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2617:5:17",
														"nodeType": "YulTypedName",
														"src": "2617:5:17",
														"type": ""
													}
												],
												"src": "2571:139:17"
											},
											{
												"body": {
													"nativeSrc": "2782:263:17",
													"nodeType": "YulBlock",
													"src": "2782:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2828:83:17",
																"nodeType": "YulBlock",
																"src": "2828:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2830:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "2830:77:17"
																			},
																			"nativeSrc": "2830:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2830:79:17"
																		},
																		"nativeSrc": "2830:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2830:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2803:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2803:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2812:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2812:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2799:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2799:3:17"
																		},
																		"nativeSrc": "2799:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2799:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2824:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2824:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2795:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2795:3:17"
																},
																"nativeSrc": "2795:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2795:32:17"
															},
															"nativeSrc": "2792:119:17",
															"nodeType": "YulIf",
															"src": "2792:119:17"
														},
														{
															"nativeSrc": "2921:117:17",
															"nodeType": "YulBlock",
															"src": "2921:117:17",
															"statements": [
																{
																	"nativeSrc": "2936:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2936:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2950:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2950:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2940:6:17",
																			"nodeType": "YulTypedName",
																			"src": "2940:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2965:63:17",
																	"nodeType": "YulAssignment",
																	"src": "2965:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3000:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3000:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3011:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3011:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2996:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2996:3:17"
																				},
																				"nativeSrc": "2996:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2996:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3020:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3020:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2975:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "2975:20:17"
																		},
																		"nativeSrc": "2975:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2975:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2965:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "2965:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2716:329:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2752:9:17",
														"nodeType": "YulTypedName",
														"src": "2752:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2763:7:17",
														"nodeType": "YulTypedName",
														"src": "2763:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2775:6:17",
														"nodeType": "YulTypedName",
														"src": "2775:6:17",
														"type": ""
													}
												],
												"src": "2716:329:17"
											},
											{
												"body": {
													"nativeSrc": "3116:53:17",
													"nodeType": "YulBlock",
													"src": "3116:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3133:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3133:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3156:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3156:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "3138:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "3138:17:17"
																		},
																		"nativeSrc": "3138:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3138:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3126:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3126:6:17"
																},
																"nativeSrc": "3126:37:17",
																"nodeType": "YulFunctionCall",
																"src": "3126:37:17"
															},
															"nativeSrc": "3126:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "3126:37:17"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "3051:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3104:5:17",
														"nodeType": "YulTypedName",
														"src": "3104:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3111:3:17",
														"nodeType": "YulTypedName",
														"src": "3111:3:17",
														"type": ""
													}
												],
												"src": "3051:118:17"
											},
											{
												"body": {
													"nativeSrc": "3273:124:17",
													"nodeType": "YulBlock",
													"src": "3273:124:17",
													"statements": [
														{
															"nativeSrc": "3283:26:17",
															"nodeType": "YulAssignment",
															"src": "3283:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3295:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3295:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3306:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3306:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3291:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3291:3:17"
																},
																"nativeSrc": "3291:18:17",
																"nodeType": "YulFunctionCall",
																"src": "3291:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3283:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "3283:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3363:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3363:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3376:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3376:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3387:1:17",
																				"nodeType": "YulLiteral",
																				"src": "3387:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3372:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3372:3:17"
																		},
																		"nativeSrc": "3372:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3372:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "3319:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "3319:43:17"
																},
																"nativeSrc": "3319:71:17",
																"nodeType": "YulFunctionCall",
																"src": "3319:71:17"
															},
															"nativeSrc": "3319:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "3319:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3175:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3245:9:17",
														"nodeType": "YulTypedName",
														"src": "3245:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3257:6:17",
														"nodeType": "YulTypedName",
														"src": "3257:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3268:4:17",
														"nodeType": "YulTypedName",
														"src": "3268:4:17",
														"type": ""
													}
												],
												"src": "3175:222:17"
											},
											{
												"body": {
													"nativeSrc": "3486:391:17",
													"nodeType": "YulBlock",
													"src": "3486:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3532:83:17",
																"nodeType": "YulBlock",
																"src": "3532:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3534:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "3534:77:17"
																			},
																			"nativeSrc": "3534:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3534:79:17"
																		},
																		"nativeSrc": "3534:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3534:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3507:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3507:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3516:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3516:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3503:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3503:3:17"
																		},
																		"nativeSrc": "3503:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3503:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3528:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3528:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3499:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3499:3:17"
																},
																"nativeSrc": "3499:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3499:32:17"
															},
															"nativeSrc": "3496:119:17",
															"nodeType": "YulIf",
															"src": "3496:119:17"
														},
														{
															"nativeSrc": "3625:117:17",
															"nodeType": "YulBlock",
															"src": "3625:117:17",
															"statements": [
																{
																	"nativeSrc": "3640:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3640:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3654:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3654:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3644:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3644:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3669:63:17",
																	"nodeType": "YulAssignment",
																	"src": "3669:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3704:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3704:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3715:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3715:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3700:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3700:3:17"
																				},
																				"nativeSrc": "3700:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3700:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3724:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3724:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3679:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "3679:20:17"
																		},
																		"nativeSrc": "3679:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3679:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3669:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3669:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3752:118:17",
															"nodeType": "YulBlock",
															"src": "3752:118:17",
															"statements": [
																{
																	"nativeSrc": "3767:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3767:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3781:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3781:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3771:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3771:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3797:63:17",
																	"nodeType": "YulAssignment",
																	"src": "3797:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3832:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3832:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3843:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3843:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3828:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3828:3:17"
																				},
																				"nativeSrc": "3828:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3828:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3852:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3852:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3807:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "3807:20:17"
																		},
																		"nativeSrc": "3807:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3797:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3797:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3403:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3448:9:17",
														"nodeType": "YulTypedName",
														"src": "3448:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3459:7:17",
														"nodeType": "YulTypedName",
														"src": "3459:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3471:6:17",
														"nodeType": "YulTypedName",
														"src": "3471:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3479:6:17",
														"nodeType": "YulTypedName",
														"src": "3479:6:17",
														"type": ""
													}
												],
												"src": "3403:474:17"
											},
											{
												"body": {
													"nativeSrc": "3915:28:17",
													"nodeType": "YulBlock",
													"src": "3915:28:17",
													"statements": [
														{
															"nativeSrc": "3925:12:17",
															"nodeType": "YulAssignment",
															"src": "3925:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "3932:5:17",
																"nodeType": "YulIdentifier",
																"src": "3932:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3925:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3925:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3883:60:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3901:5:17",
														"nodeType": "YulTypedName",
														"src": "3901:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3911:3:17",
														"nodeType": "YulTypedName",
														"src": "3911:3:17",
														"type": ""
													}
												],
												"src": "3883:60:17"
											},
											{
												"body": {
													"nativeSrc": "4009:82:17",
													"nodeType": "YulBlock",
													"src": "4009:82:17",
													"statements": [
														{
															"nativeSrc": "4019:66:17",
															"nodeType": "YulAssignment",
															"src": "4019:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4077:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "4077:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4059:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "4059:17:17"
																				},
																				"nativeSrc": "4059:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4059:24:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4050:8:17",
																			"nodeType": "YulIdentifier",
																			"src": "4050:8:17"
																		},
																		"nativeSrc": "4050:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4050:34:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4032:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "4032:17:17"
																},
																"nativeSrc": "4032:53:17",
																"nodeType": "YulFunctionCall",
																"src": "4032:53:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4019:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "4019:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3949:142:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3989:5:17",
														"nodeType": "YulTypedName",
														"src": "3989:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3999:9:17",
														"nodeType": "YulTypedName",
														"src": "3999:9:17",
														"type": ""
													}
												],
												"src": "3949:142:17"
											},
											{
												"body": {
													"nativeSrc": "4157:66:17",
													"nodeType": "YulBlock",
													"src": "4157:66:17",
													"statements": [
														{
															"nativeSrc": "4167:50:17",
															"nodeType": "YulAssignment",
															"src": "4167:50:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4211:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "4211:5:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4180:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "4180:30:17"
																},
																"nativeSrc": "4180:37:17",
																"nodeType": "YulFunctionCall",
																"src": "4180:37:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4167:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "4167:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4097:126:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4137:5:17",
														"nodeType": "YulTypedName",
														"src": "4137:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4147:9:17",
														"nodeType": "YulTypedName",
														"src": "4147:9:17",
														"type": ""
													}
												],
												"src": "4097:126:17"
											},
											{
												"body": {
													"nativeSrc": "4312:66:17",
													"nodeType": "YulBlock",
													"src": "4312:66:17",
													"statements": [
														{
															"nativeSrc": "4322:50:17",
															"nodeType": "YulAssignment",
															"src": "4322:50:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4366:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "4366:5:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4335:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "4335:30:17"
																},
																"nativeSrc": "4335:37:17",
																"nodeType": "YulFunctionCall",
																"src": "4335:37:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4322:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "4322:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IProofVerifier_$2996_to_t_address",
												"nativeSrc": "4229:149:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4292:5:17",
														"nodeType": "YulTypedName",
														"src": "4292:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4302:9:17",
														"nodeType": "YulTypedName",
														"src": "4302:9:17",
														"type": ""
													}
												],
												"src": "4229:149:17"
											},
											{
												"body": {
													"nativeSrc": "4472:89:17",
													"nodeType": "YulBlock",
													"src": "4472:89:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4489:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "4489:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4548:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "4548:5:17"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IProofVerifier_$2996_to_t_address",
																			"nativeSrc": "4494:53:17",
																			"nodeType": "YulIdentifier",
																			"src": "4494:53:17"
																		},
																		"nativeSrc": "4494:60:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4494:60:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4482:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4482:6:17"
																},
																"nativeSrc": "4482:73:17",
																"nodeType": "YulFunctionCall",
																"src": "4482:73:17"
															},
															"nativeSrc": "4482:73:17",
															"nodeType": "YulExpressionStatement",
															"src": "4482:73:17"
														}
													]
												},
												"name": "abi_encode_t_contract$_IProofVerifier_$2996_to_t_address_fromStack",
												"nativeSrc": "4384:177:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4460:5:17",
														"nodeType": "YulTypedName",
														"src": "4460:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4467:3:17",
														"nodeType": "YulTypedName",
														"src": "4467:3:17",
														"type": ""
													}
												],
												"src": "4384:177:17"
											},
											{
												"body": {
													"nativeSrc": "4688:147:17",
													"nodeType": "YulBlock",
													"src": "4688:147:17",
													"statements": [
														{
															"nativeSrc": "4698:26:17",
															"nodeType": "YulAssignment",
															"src": "4698:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4710:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4710:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4721:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4721:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4706:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4706:3:17"
																},
																"nativeSrc": "4706:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4706:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4698:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4698:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4801:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4801:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4814:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4814:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4825:1:17",
																				"nodeType": "YulLiteral",
																				"src": "4825:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4810:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4810:3:17"
																		},
																		"nativeSrc": "4810:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4810:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IProofVerifier_$2996_to_t_address_fromStack",
																	"nativeSrc": "4734:66:17",
																	"nodeType": "YulIdentifier",
																	"src": "4734:66:17"
																},
																"nativeSrc": "4734:94:17",
																"nodeType": "YulFunctionCall",
																"src": "4734:94:17"
															},
															"nativeSrc": "4734:94:17",
															"nodeType": "YulExpressionStatement",
															"src": "4734:94:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IProofVerifier_$2996__to_t_address__fromStack_reversed",
												"nativeSrc": "4567:268:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4660:9:17",
														"nodeType": "YulTypedName",
														"src": "4660:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4672:6:17",
														"nodeType": "YulTypedName",
														"src": "4672:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4683:4:17",
														"nodeType": "YulTypedName",
														"src": "4683:4:17",
														"type": ""
													}
												],
												"src": "4567:268:17"
											},
											{
												"body": {
													"nativeSrc": "4885:105:17",
													"nodeType": "YulBlock",
													"src": "4885:105:17",
													"statements": [
														{
															"nativeSrc": "4895:89:17",
															"nodeType": "YulAssignment",
															"src": "4895:89:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4910:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "4910:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4917:66:17",
																		"nodeType": "YulLiteral",
																		"src": "4917:66:17",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4906:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4906:3:17"
																},
																"nativeSrc": "4906:78:17",
																"nodeType": "YulFunctionCall",
																"src": "4906:78:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4895:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "4895:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nativeSrc": "4841:149:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4867:5:17",
														"nodeType": "YulTypedName",
														"src": "4867:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4877:7:17",
														"nodeType": "YulTypedName",
														"src": "4877:7:17",
														"type": ""
													}
												],
												"src": "4841:149:17"
											},
											{
												"body": {
													"nativeSrc": "5059:52:17",
													"nodeType": "YulBlock",
													"src": "5059:52:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5076:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5076:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5098:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "5098:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nativeSrc": "5081:16:17",
																			"nodeType": "YulIdentifier",
																			"src": "5081:16:17"
																		},
																		"nativeSrc": "5081:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5081:23:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5069:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5069:6:17"
																},
																"nativeSrc": "5069:36:17",
																"nodeType": "YulFunctionCall",
																"src": "5069:36:17"
															},
															"nativeSrc": "5069:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "5069:36:17"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nativeSrc": "4996:115:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5047:5:17",
														"nodeType": "YulTypedName",
														"src": "5047:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5054:3:17",
														"nodeType": "YulTypedName",
														"src": "5054:3:17",
														"type": ""
													}
												],
												"src": "4996:115:17"
											},
											{
												"body": {
													"nativeSrc": "5176:40:17",
													"nodeType": "YulBlock",
													"src": "5176:40:17",
													"statements": [
														{
															"nativeSrc": "5187:22:17",
															"nodeType": "YulAssignment",
															"src": "5187:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5203:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "5203:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5197:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "5197:5:17"
																},
																"nativeSrc": "5197:12:17",
																"nodeType": "YulFunctionCall",
																"src": "5197:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5187:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5187:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5117:99:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5159:5:17",
														"nodeType": "YulTypedName",
														"src": "5159:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5169:6:17",
														"nodeType": "YulTypedName",
														"src": "5169:6:17",
														"type": ""
													}
												],
												"src": "5117:99:17"
											},
											{
												"body": {
													"nativeSrc": "5318:73:17",
													"nodeType": "YulBlock",
													"src": "5318:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5335:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5335:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5340:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5340:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5328:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5328:6:17"
																},
																"nativeSrc": "5328:19:17",
																"nodeType": "YulFunctionCall",
																"src": "5328:19:17"
															},
															"nativeSrc": "5328:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "5328:19:17"
														},
														{
															"nativeSrc": "5356:29:17",
															"nodeType": "YulAssignment",
															"src": "5356:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5375:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5375:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5380:4:17",
																		"nodeType": "YulLiteral",
																		"src": "5380:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5371:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5371:3:17"
																},
																"nativeSrc": "5371:14:17",
																"nodeType": "YulFunctionCall",
																"src": "5371:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5356:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "5356:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5222:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5290:3:17",
														"nodeType": "YulTypedName",
														"src": "5290:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5295:6:17",
														"nodeType": "YulTypedName",
														"src": "5295:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5306:11:17",
														"nodeType": "YulTypedName",
														"src": "5306:11:17",
														"type": ""
													}
												],
												"src": "5222:169:17"
											},
											{
												"body": {
													"nativeSrc": "5459:77:17",
													"nodeType": "YulBlock",
													"src": "5459:77:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5476:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5476:3:17"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5481:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5481:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5486:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5486:6:17"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "5470:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "5470:5:17"
																},
																"nativeSrc": "5470:23:17",
																"nodeType": "YulFunctionCall",
																"src": "5470:23:17"
															},
															"nativeSrc": "5470:23:17",
															"nodeType": "YulExpressionStatement",
															"src": "5470:23:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5513:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "5513:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5518:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5518:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5509:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:17"
																		},
																		"nativeSrc": "5509:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5509:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5527:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5527:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5502:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5502:6:17"
																},
																"nativeSrc": "5502:27:17",
																"nodeType": "YulFunctionCall",
																"src": "5502:27:17"
															},
															"nativeSrc": "5502:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "5502:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5397:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5441:3:17",
														"nodeType": "YulTypedName",
														"src": "5441:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5446:3:17",
														"nodeType": "YulTypedName",
														"src": "5446:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5451:6:17",
														"nodeType": "YulTypedName",
														"src": "5451:6:17",
														"type": ""
													}
												],
												"src": "5397:139:17"
											},
											{
												"body": {
													"nativeSrc": "5590:54:17",
													"nodeType": "YulBlock",
													"src": "5590:54:17",
													"statements": [
														{
															"nativeSrc": "5600:38:17",
															"nodeType": "YulAssignment",
															"src": "5600:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5618:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "5618:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5625:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5614:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5614:3:17"
																		},
																		"nativeSrc": "5614:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5614:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5634:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5634:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5630:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5630:3:17"
																		},
																		"nativeSrc": "5630:7:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5630:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5610:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5610:3:17"
																},
																"nativeSrc": "5610:28:17",
																"nodeType": "YulFunctionCall",
																"src": "5610:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5600:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5600:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "5542:102:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5573:5:17",
														"nodeType": "YulTypedName",
														"src": "5573:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5583:6:17",
														"nodeType": "YulTypedName",
														"src": "5583:6:17",
														"type": ""
													}
												],
												"src": "5542:102:17"
											},
											{
												"body": {
													"nativeSrc": "5742:285:17",
													"nodeType": "YulBlock",
													"src": "5742:285:17",
													"statements": [
														{
															"nativeSrc": "5752:53:17",
															"nodeType": "YulVariableDeclaration",
															"src": "5752:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5799:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "5799:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5766:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "5766:32:17"
																},
																"nativeSrc": "5766:39:17",
																"nodeType": "YulFunctionCall",
																"src": "5766:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5756:6:17",
																	"nodeType": "YulTypedName",
																	"src": "5756:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5814:78:17",
															"nodeType": "YulAssignment",
															"src": "5814:78:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5880:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5880:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5885:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5885:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5821:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "5821:58:17"
																},
																"nativeSrc": "5821:71:17",
																"nodeType": "YulFunctionCall",
																"src": "5821:71:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5814:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5814:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5940:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "5940:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5947:4:17",
																				"nodeType": "YulLiteral",
																				"src": "5947:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5936:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5936:3:17"
																		},
																		"nativeSrc": "5936:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5936:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5954:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5954:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5959:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5959:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5901:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "5901:34:17"
																},
																"nativeSrc": "5901:65:17",
																"nodeType": "YulFunctionCall",
																"src": "5901:65:17"
															},
															"nativeSrc": "5901:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "5901:65:17"
														},
														{
															"nativeSrc": "5975:46:17",
															"nodeType": "YulAssignment",
															"src": "5975:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5986:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "5986:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6013:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6013:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5991:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "5991:21:17"
																		},
																		"nativeSrc": "5991:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5991:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5982:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5982:3:17"
																},
																"nativeSrc": "5982:39:17",
																"nodeType": "YulFunctionCall",
																"src": "5982:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5975:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5975:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5650:377:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5723:5:17",
														"nodeType": "YulTypedName",
														"src": "5723:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5730:3:17",
														"nodeType": "YulTypedName",
														"src": "5730:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5738:3:17",
														"nodeType": "YulTypedName",
														"src": "5738:3:17",
														"type": ""
													}
												],
												"src": "5650:377:17"
											},
											{
												"body": {
													"nativeSrc": "6078:32:17",
													"nodeType": "YulBlock",
													"src": "6078:32:17",
													"statements": [
														{
															"nativeSrc": "6088:16:17",
															"nodeType": "YulAssignment",
															"src": "6088:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "6099:5:17",
																"nodeType": "YulIdentifier",
																"src": "6099:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6088:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "6088:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "6033:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6060:5:17",
														"nodeType": "YulTypedName",
														"src": "6060:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6070:7:17",
														"nodeType": "YulTypedName",
														"src": "6070:7:17",
														"type": ""
													}
												],
												"src": "6033:77:17"
											},
											{
												"body": {
													"nativeSrc": "6181:53:17",
													"nodeType": "YulBlock",
													"src": "6181:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6198:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6198:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6221:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6221:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6203:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "6203:17:17"
																		},
																		"nativeSrc": "6203:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6203:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6191:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6191:6:17"
																},
																"nativeSrc": "6191:37:17",
																"nodeType": "YulFunctionCall",
																"src": "6191:37:17"
															},
															"nativeSrc": "6191:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "6191:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6116:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6169:5:17",
														"nodeType": "YulTypedName",
														"src": "6169:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6176:3:17",
														"nodeType": "YulTypedName",
														"src": "6176:3:17",
														"type": ""
													}
												],
												"src": "6116:118:17"
											},
											{
												"body": {
													"nativeSrc": "6305:53:17",
													"nodeType": "YulBlock",
													"src": "6305:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6322:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6322:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6345:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6345:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6327:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "6327:17:17"
																		},
																		"nativeSrc": "6327:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6327:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6315:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:17"
																},
																"nativeSrc": "6315:37:17",
																"nodeType": "YulFunctionCall",
																"src": "6315:37:17"
															},
															"nativeSrc": "6315:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "6315:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6240:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6293:5:17",
														"nodeType": "YulTypedName",
														"src": "6293:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6300:3:17",
														"nodeType": "YulTypedName",
														"src": "6300:3:17",
														"type": ""
													}
												],
												"src": "6240:118:17"
											},
											{
												"body": {
													"nativeSrc": "6438:40:17",
													"nodeType": "YulBlock",
													"src": "6438:40:17",
													"statements": [
														{
															"nativeSrc": "6449:22:17",
															"nodeType": "YulAssignment",
															"src": "6449:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6465:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "6465:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6459:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "6459:5:17"
																},
																"nativeSrc": "6459:12:17",
																"nodeType": "YulFunctionCall",
																"src": "6459:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6449:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6449:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6364:114:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6421:5:17",
														"nodeType": "YulTypedName",
														"src": "6421:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6431:6:17",
														"nodeType": "YulTypedName",
														"src": "6431:6:17",
														"type": ""
													}
												],
												"src": "6364:114:17"
											},
											{
												"body": {
													"nativeSrc": "6595:73:17",
													"nodeType": "YulBlock",
													"src": "6595:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6612:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6612:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6617:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6617:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6605:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6605:6:17"
																},
																"nativeSrc": "6605:19:17",
																"nodeType": "YulFunctionCall",
																"src": "6605:19:17"
															},
															"nativeSrc": "6605:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "6605:19:17"
														},
														{
															"nativeSrc": "6633:29:17",
															"nodeType": "YulAssignment",
															"src": "6633:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6652:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6652:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6657:4:17",
																		"nodeType": "YulLiteral",
																		"src": "6657:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6648:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6648:3:17"
																},
																"nativeSrc": "6648:14:17",
																"nodeType": "YulFunctionCall",
																"src": "6648:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6633:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "6633:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6484:184:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6567:3:17",
														"nodeType": "YulTypedName",
														"src": "6567:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6572:6:17",
														"nodeType": "YulTypedName",
														"src": "6572:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6583:11:17",
														"nodeType": "YulTypedName",
														"src": "6583:11:17",
														"type": ""
													}
												],
												"src": "6484:184:17"
											},
											{
												"body": {
													"nativeSrc": "6746:60:17",
													"nodeType": "YulBlock",
													"src": "6746:60:17",
													"statements": [
														{
															"nativeSrc": "6756:11:17",
															"nodeType": "YulAssignment",
															"src": "6756:11:17",
															"value": {
																"name": "ptr",
																"nativeSrc": "6764:3:17",
																"nodeType": "YulIdentifier",
																"src": "6764:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6756:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6756:4:17"
																}
															]
														},
														{
															"nativeSrc": "6777:22:17",
															"nodeType": "YulAssignment",
															"src": "6777:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6789:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6789:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6794:4:17",
																		"nodeType": "YulLiteral",
																		"src": "6794:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6785:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6785:3:17"
																},
																"nativeSrc": "6785:14:17",
																"nodeType": "YulFunctionCall",
																"src": "6785:14:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6777:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6777:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6674:132:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6733:3:17",
														"nodeType": "YulTypedName",
														"src": "6733:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6741:4:17",
														"nodeType": "YulTypedName",
														"src": "6741:4:17",
														"type": ""
													}
												],
												"src": "6674:132:17"
											},
											{
												"body": {
													"nativeSrc": "6867:53:17",
													"nodeType": "YulBlock",
													"src": "6867:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6884:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6884:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6907:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6907:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6889:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "6889:17:17"
																		},
																		"nativeSrc": "6889:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6889:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:17"
																},
																"nativeSrc": "6877:37:17",
																"nodeType": "YulFunctionCall",
																"src": "6877:37:17"
															},
															"nativeSrc": "6877:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "6877:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6812:108:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6855:5:17",
														"nodeType": "YulTypedName",
														"src": "6855:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6862:3:17",
														"nodeType": "YulTypedName",
														"src": "6862:3:17",
														"type": ""
													}
												],
												"src": "6812:108:17"
											},
											{
												"body": {
													"nativeSrc": "7006:99:17",
													"nodeType": "YulBlock",
													"src": "7006:99:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7050:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7050:6:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7058:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7058:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "7016:33:17",
																	"nodeType": "YulIdentifier",
																	"src": "7016:33:17"
																},
																"nativeSrc": "7016:46:17",
																"nodeType": "YulFunctionCall",
																"src": "7016:46:17"
															},
															"nativeSrc": "7016:46:17",
															"nodeType": "YulExpressionStatement",
															"src": "7016:46:17"
														},
														{
															"nativeSrc": "7071:28:17",
															"nodeType": "YulAssignment",
															"src": "7071:28:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7089:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7089:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7094:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7094:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7085:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7085:3:17"
																},
																"nativeSrc": "7085:14:17",
																"nodeType": "YulFunctionCall",
																"src": "7085:14:17"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "7071:10:17",
																	"nodeType": "YulIdentifier",
																	"src": "7071:10:17"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "6926:179:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6979:6:17",
														"nodeType": "YulTypedName",
														"src": "6979:6:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6987:3:17",
														"nodeType": "YulTypedName",
														"src": "6987:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6995:10:17",
														"nodeType": "YulTypedName",
														"src": "6995:10:17",
														"type": ""
													}
												],
												"src": "6926:179:17"
											},
											{
												"body": {
													"nativeSrc": "7186:38:17",
													"nodeType": "YulBlock",
													"src": "7186:38:17",
													"statements": [
														{
															"nativeSrc": "7196:22:17",
															"nodeType": "YulAssignment",
															"src": "7196:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7208:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7208:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7213:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7213:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7204:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7204:3:17"
																},
																"nativeSrc": "7204:14:17",
																"nodeType": "YulFunctionCall",
																"src": "7204:14:17"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "7196:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7196:4:17"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7111:113:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7173:3:17",
														"nodeType": "YulTypedName",
														"src": "7173:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "7181:4:17",
														"nodeType": "YulTypedName",
														"src": "7181:4:17",
														"type": ""
													}
												],
												"src": "7111:113:17"
											},
											{
												"body": {
													"nativeSrc": "7384:608:17",
													"nodeType": "YulBlock",
													"src": "7384:608:17",
													"statements": [
														{
															"nativeSrc": "7394:68:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7394:68:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7456:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7456:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7408:47:17",
																	"nodeType": "YulIdentifier",
																	"src": "7408:47:17"
																},
																"nativeSrc": "7408:54:17",
																"nodeType": "YulFunctionCall",
																"src": "7408:54:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7398:6:17",
																	"nodeType": "YulTypedName",
																	"src": "7398:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7471:93:17",
															"nodeType": "YulAssignment",
															"src": "7471:93:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7552:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7552:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7557:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7557:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7478:73:17",
																	"nodeType": "YulIdentifier",
																	"src": "7478:73:17"
																},
																"nativeSrc": "7478:86:17",
																"nodeType": "YulFunctionCall",
																"src": "7478:86:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7471:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7471:3:17"
																}
															]
														},
														{
															"nativeSrc": "7573:71:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7573:71:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7638:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7638:5:17"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7588:49:17",
																	"nodeType": "YulIdentifier",
																	"src": "7588:49:17"
																},
																"nativeSrc": "7588:56:17",
																"nodeType": "YulFunctionCall",
																"src": "7588:56:17"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7577:7:17",
																	"nodeType": "YulTypedName",
																	"src": "7577:7:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7653:21:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7653:21:17",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7667:7:17",
																"nodeType": "YulIdentifier",
																"src": "7667:7:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7657:6:17",
																	"nodeType": "YulTypedName",
																	"src": "7657:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7743:224:17",
																"nodeType": "YulBlock",
																"src": "7743:224:17",
																"statements": [
																	{
																		"nativeSrc": "7757:34:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7757:34:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7784:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "7784:6:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7778:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "7778:5:17"
																			},
																			"nativeSrc": "7778:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7778:13:17"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7761:13:17",
																				"nodeType": "YulTypedName",
																				"src": "7761:13:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7804:70:17",
																		"nodeType": "YulAssignment",
																		"src": "7804:70:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7855:13:17",
																					"nodeType": "YulIdentifier",
																					"src": "7855:13:17"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7870:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7870:3:17"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "7811:43:17",
																				"nodeType": "YulIdentifier",
																				"src": "7811:43:17"
																			},
																			"nativeSrc": "7811:63:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7811:63:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7804:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7804:3:17"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7887:70:17",
																		"nodeType": "YulAssignment",
																		"src": "7887:70:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7950:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "7950:6:17"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "7897:52:17",
																				"nodeType": "YulIdentifier",
																				"src": "7897:52:17"
																			},
																			"nativeSrc": "7897:60:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7897:60:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7887:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7887:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7705:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "7705:1:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7708:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7708:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7702:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7702:2:17"
																},
																"nativeSrc": "7702:13:17",
																"nodeType": "YulFunctionCall",
																"src": "7702:13:17"
															},
															"nativeSrc": "7683:284:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7716:18:17",
																"nodeType": "YulBlock",
																"src": "7716:18:17",
																"statements": [
																	{
																		"nativeSrc": "7718:14:17",
																		"nodeType": "YulAssignment",
																		"src": "7718:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7727:1:17",
																					"nodeType": "YulIdentifier",
																					"src": "7727:1:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7730:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7730:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7723:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7723:3:17"
																			},
																			"nativeSrc": "7723:9:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7723:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7718:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "7718:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7687:14:17",
																"nodeType": "YulBlock",
																"src": "7687:14:17",
																"statements": [
																	{
																		"nativeSrc": "7689:10:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7689:10:17",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7698:1:17",
																			"nodeType": "YulLiteral",
																			"src": "7698:1:17",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7693:1:17",
																				"nodeType": "YulTypedName",
																				"src": "7693:1:17",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7683:284:17"
														},
														{
															"nativeSrc": "7976:10:17",
															"nodeType": "YulAssignment",
															"src": "7976:10:17",
															"value": {
																"name": "pos",
																"nativeSrc": "7983:3:17",
																"nodeType": "YulIdentifier",
																"src": "7983:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7976:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7976:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7260:732:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7363:5:17",
														"nodeType": "YulTypedName",
														"src": "7363:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7370:3:17",
														"nodeType": "YulTypedName",
														"src": "7370:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7379:3:17",
														"nodeType": "YulTypedName",
														"src": "7379:3:17",
														"type": ""
													}
												],
												"src": "7260:732:17"
											},
											{
												"body": {
													"nativeSrc": "8352:861:17",
													"nodeType": "YulBlock",
													"src": "8352:861:17",
													"statements": [
														{
															"nativeSrc": "8362:27:17",
															"nodeType": "YulAssignment",
															"src": "8362:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8374:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8374:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8385:3:17",
																		"nodeType": "YulLiteral",
																		"src": "8385:3:17",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8370:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8370:3:17"
																},
																"nativeSrc": "8370:19:17",
																"nodeType": "YulFunctionCall",
																"src": "8370:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8362:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8362:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8441:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8441:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8454:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8454:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8465:1:17",
																				"nodeType": "YulLiteral",
																				"src": "8465:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8450:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8450:3:17"
																		},
																		"nativeSrc": "8450:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8450:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nativeSrc": "8399:41:17",
																	"nodeType": "YulIdentifier",
																	"src": "8399:41:17"
																},
																"nativeSrc": "8399:69:17",
																"nodeType": "YulFunctionCall",
																"src": "8399:69:17"
															},
															"nativeSrc": "8399:69:17",
															"nodeType": "YulExpressionStatement",
															"src": "8399:69:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8489:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8489:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8500:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8500:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8485:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8485:3:17"
																		},
																		"nativeSrc": "8485:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8485:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8509:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "8509:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8515:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8515:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8505:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8505:3:17"
																		},
																		"nativeSrc": "8505:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8505:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8478:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8478:6:17"
																},
																"nativeSrc": "8478:48:17",
																"nodeType": "YulFunctionCall",
																"src": "8478:48:17"
															},
															"nativeSrc": "8478:48:17",
															"nodeType": "YulExpressionStatement",
															"src": "8478:48:17"
														},
														{
															"nativeSrc": "8535:86:17",
															"nodeType": "YulAssignment",
															"src": "8535:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8607:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8607:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8616:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "8616:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8543:63:17",
																	"nodeType": "YulIdentifier",
																	"src": "8543:63:17"
																},
																"nativeSrc": "8543:78:17",
																"nodeType": "YulFunctionCall",
																"src": "8543:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8535:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8535:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8642:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8642:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8653:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8653:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8638:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8638:3:17"
																		},
																		"nativeSrc": "8638:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8638:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8662:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "8662:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8668:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8668:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8658:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8658:3:17"
																		},
																		"nativeSrc": "8658:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8658:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8631:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8631:6:17"
																},
																"nativeSrc": "8631:48:17",
																"nodeType": "YulFunctionCall",
																"src": "8631:48:17"
															},
															"nativeSrc": "8631:48:17",
															"nodeType": "YulExpressionStatement",
															"src": "8631:48:17"
														},
														{
															"nativeSrc": "8688:86:17",
															"nodeType": "YulAssignment",
															"src": "8688:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8760:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8760:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8769:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "8769:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8696:63:17",
																	"nodeType": "YulIdentifier",
																	"src": "8696:63:17"
																},
																"nativeSrc": "8696:78:17",
																"nodeType": "YulFunctionCall",
																"src": "8696:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8688:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8688:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8828:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8828:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8841:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8841:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8852:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8852:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8837:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8837:3:17"
																		},
																		"nativeSrc": "8837:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8837:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8784:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "8784:43:17"
																},
																"nativeSrc": "8784:72:17",
																"nodeType": "YulFunctionCall",
																"src": "8784:72:17"
															},
															"nativeSrc": "8784:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "8784:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8910:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8910:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8923:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8923:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8934:3:17",
																				"nodeType": "YulLiteral",
																				"src": "8934:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8919:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8919:3:17"
																		},
																		"nativeSrc": "8919:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8919:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8866:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "8866:43:17"
																},
																"nativeSrc": "8866:73:17",
																"nodeType": "YulFunctionCall",
																"src": "8866:73:17"
															},
															"nativeSrc": "8866:73:17",
															"nodeType": "YulExpressionStatement",
															"src": "8866:73:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8993:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8993:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9006:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9006:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9017:3:17",
																				"nodeType": "YulLiteral",
																				"src": "9017:3:17",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9002:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9002:3:17"
																		},
																		"nativeSrc": "9002:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9002:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8949:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "8949:43:17"
																},
																"nativeSrc": "8949:73:17",
																"nodeType": "YulFunctionCall",
																"src": "8949:73:17"
															},
															"nativeSrc": "8949:73:17",
															"nodeType": "YulExpressionStatement",
															"src": "8949:73:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9043:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9043:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9054:3:17",
																				"nodeType": "YulLiteral",
																				"src": "9054:3:17",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9039:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9039:3:17"
																		},
																		"nativeSrc": "9039:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9039:19:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9064:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "9064:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9070:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9070:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9060:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9060:3:17"
																		},
																		"nativeSrc": "9060:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9060:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9032:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9032:6:17"
																},
																"nativeSrc": "9032:49:17",
																"nodeType": "YulFunctionCall",
																"src": "9032:49:17"
															},
															"nativeSrc": "9032:49:17",
															"nodeType": "YulExpressionStatement",
															"src": "9032:49:17"
														},
														{
															"nativeSrc": "9090:116:17",
															"nodeType": "YulAssignment",
															"src": "9090:116:17",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "9192:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9192:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "9201:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "9201:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9098:93:17",
																	"nodeType": "YulIdentifier",
																	"src": "9098:93:17"
																},
																"nativeSrc": "9098:108:17",
																"nodeType": "YulFunctionCall",
																"src": "9098:108:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9090:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9090:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7998:1215:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8276:9:17",
														"nodeType": "YulTypedName",
														"src": "8276:9:17",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "8288:6:17",
														"nodeType": "YulTypedName",
														"src": "8288:6:17",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "8296:6:17",
														"nodeType": "YulTypedName",
														"src": "8296:6:17",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8304:6:17",
														"nodeType": "YulTypedName",
														"src": "8304:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8312:6:17",
														"nodeType": "YulTypedName",
														"src": "8312:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8320:6:17",
														"nodeType": "YulTypedName",
														"src": "8320:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8328:6:17",
														"nodeType": "YulTypedName",
														"src": "8328:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8336:6:17",
														"nodeType": "YulTypedName",
														"src": "8336:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8347:4:17",
														"nodeType": "YulTypedName",
														"src": "8347:4:17",
														"type": ""
													}
												],
												"src": "7998:1215:17"
											},
											{
												"body": {
													"nativeSrc": "9308:28:17",
													"nodeType": "YulBlock",
													"src": "9308:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9328:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9328:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9318:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9318:6:17"
																},
																"nativeSrc": "9318:12:17",
																"nodeType": "YulFunctionCall",
																"src": "9318:12:17"
															},
															"nativeSrc": "9318:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "9318:12:17"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "9219:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "9219:117:17"
											},
											{
												"body": {
													"nativeSrc": "9431:28:17",
													"nodeType": "YulBlock",
													"src": "9431:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9448:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9448:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9451:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9451:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9441:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9441:6:17"
																},
																"nativeSrc": "9441:12:17",
																"nodeType": "YulFunctionCall",
																"src": "9441:12:17"
															},
															"nativeSrc": "9441:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "9441:12:17"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "9342:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "9342:117:17"
											},
											{
												"body": {
													"nativeSrc": "9554:28:17",
													"nodeType": "YulBlock",
													"src": "9554:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9571:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9571:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9574:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9574:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9564:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9564:6:17"
																},
																"nativeSrc": "9564:12:17",
																"nodeType": "YulFunctionCall",
																"src": "9564:12:17"
															},
															"nativeSrc": "9564:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "9564:12:17"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "9465:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "9465:117:17"
											},
											{
												"body": {
													"nativeSrc": "9675:478:17",
													"nodeType": "YulBlock",
													"src": "9675:478:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "9724:83:17",
																"nodeType": "YulBlock",
																"src": "9724:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9726:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "9726:77:17"
																			},
																			"nativeSrc": "9726:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9726:79:17"
																		},
																		"nativeSrc": "9726:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9726:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9703:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9703:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9711:4:17",
																						"nodeType": "YulLiteral",
																						"src": "9711:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9699:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9699:3:17"
																				},
																				"nativeSrc": "9699:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9699:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9718:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "9718:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9695:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9695:3:17"
																		},
																		"nativeSrc": "9695:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9695:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9688:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9688:6:17"
																},
																"nativeSrc": "9688:35:17",
																"nodeType": "YulFunctionCall",
																"src": "9688:35:17"
															},
															"nativeSrc": "9685:122:17",
															"nodeType": "YulIf",
															"src": "9685:122:17"
														},
														{
															"nativeSrc": "9816:30:17",
															"nodeType": "YulAssignment",
															"src": "9816:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9839:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9839:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9826:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "9826:12:17"
																},
																"nativeSrc": "9826:20:17",
																"nodeType": "YulFunctionCall",
																"src": "9826:20:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9816:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9816:6:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9889:83:17",
																"nodeType": "YulBlock",
																"src": "9889:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "9891:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "9891:77:17"
																			},
																			"nativeSrc": "9891:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9891:79:17"
																		},
																		"nativeSrc": "9891:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9891:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9861:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9861:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9869:18:17",
																		"nodeType": "YulLiteral",
																		"src": "9869:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9858:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "9858:2:17"
																},
																"nativeSrc": "9858:30:17",
																"nodeType": "YulFunctionCall",
																"src": "9858:30:17"
															},
															"nativeSrc": "9855:117:17",
															"nodeType": "YulIf",
															"src": "9855:117:17"
														},
														{
															"nativeSrc": "9981:29:17",
															"nodeType": "YulAssignment",
															"src": "9981:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9997:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9997:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10005:4:17",
																		"nodeType": "YulLiteral",
																		"src": "10005:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9993:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9993:3:17"
																},
																"nativeSrc": "9993:17:17",
																"nodeType": "YulFunctionCall",
																"src": "9993:17:17"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "9981:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "9981:8:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10064:83:17",
																"nodeType": "YulBlock",
																"src": "10064:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "10066:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10066:77:17"
																			},
																			"nativeSrc": "10066:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10066:79:17"
																		},
																		"nativeSrc": "10066:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10066:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "10029:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "10029:8:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "10043:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10043:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10051:4:17",
																						"nodeType": "YulLiteral",
																						"src": "10051:4:17",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "10039:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10039:3:17"
																				},
																				"nativeSrc": "10039:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10039:17:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10025:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10025:3:17"
																		},
																		"nativeSrc": "10025:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10025:32:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10059:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10059:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10022:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "10022:2:17"
																},
																"nativeSrc": "10022:41:17",
																"nodeType": "YulFunctionCall",
																"src": "10022:41:17"
															},
															"nativeSrc": "10019:128:17",
															"nodeType": "YulIf",
															"src": "10019:128:17"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "9601:552:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9642:6:17",
														"nodeType": "YulTypedName",
														"src": "9642:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9650:3:17",
														"nodeType": "YulTypedName",
														"src": "9650:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "9658:8:17",
														"nodeType": "YulTypedName",
														"src": "9658:8:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9668:6:17",
														"nodeType": "YulTypedName",
														"src": "9668:6:17",
														"type": ""
													}
												],
												"src": "9601:552:17"
											},
											{
												"body": {
													"nativeSrc": "10266:478:17",
													"nodeType": "YulBlock",
													"src": "10266:478:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "10315:83:17",
																"nodeType": "YulBlock",
																"src": "10315:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10317:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10317:77:17"
																			},
																			"nativeSrc": "10317:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10317:79:17"
																		},
																		"nativeSrc": "10317:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10317:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10294:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10294:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10302:4:17",
																						"nodeType": "YulLiteral",
																						"src": "10302:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10290:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10290:3:17"
																				},
																				"nativeSrc": "10290:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10290:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10309:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "10309:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10286:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10286:3:17"
																		},
																		"nativeSrc": "10286:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10286:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10279:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10279:6:17"
																},
																"nativeSrc": "10279:35:17",
																"nodeType": "YulFunctionCall",
																"src": "10279:35:17"
															},
															"nativeSrc": "10276:122:17",
															"nodeType": "YulIf",
															"src": "10276:122:17"
														},
														{
															"nativeSrc": "10407:30:17",
															"nodeType": "YulAssignment",
															"src": "10407:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10430:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10430:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10417:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "10417:12:17"
																},
																"nativeSrc": "10417:20:17",
																"nodeType": "YulFunctionCall",
																"src": "10417:20:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10407:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10407:6:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10480:83:17",
																"nodeType": "YulBlock",
																"src": "10480:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "10482:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10482:77:17"
																			},
																			"nativeSrc": "10482:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10482:79:17"
																		},
																		"nativeSrc": "10482:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10482:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10452:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10452:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10460:18:17",
																		"nodeType": "YulLiteral",
																		"src": "10460:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10449:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "10449:2:17"
																},
																"nativeSrc": "10449:30:17",
																"nodeType": "YulFunctionCall",
																"src": "10449:30:17"
															},
															"nativeSrc": "10446:117:17",
															"nodeType": "YulIf",
															"src": "10446:117:17"
														},
														{
															"nativeSrc": "10572:29:17",
															"nodeType": "YulAssignment",
															"src": "10572:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10588:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10588:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10596:4:17",
																		"nodeType": "YulLiteral",
																		"src": "10596:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10584:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10584:3:17"
																},
																"nativeSrc": "10584:17:17",
																"nodeType": "YulFunctionCall",
																"src": "10584:17:17"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "10572:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "10572:8:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10655:83:17",
																"nodeType": "YulBlock",
																"src": "10655:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "10657:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10657:77:17"
																			},
																			"nativeSrc": "10657:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10657:79:17"
																		},
																		"nativeSrc": "10657:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10657:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "10620:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "10620:8:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "10634:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10634:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10642:4:17",
																						"nodeType": "YulLiteral",
																						"src": "10642:4:17",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "10630:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10630:3:17"
																				},
																				"nativeSrc": "10630:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10630:17:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10616:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10616:3:17"
																		},
																		"nativeSrc": "10616:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10616:32:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10650:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10650:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10613:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "10613:2:17"
																},
																"nativeSrc": "10613:41:17",
																"nodeType": "YulFunctionCall",
																"src": "10613:41:17"
															},
															"nativeSrc": "10610:128:17",
															"nodeType": "YulIf",
															"src": "10610:128:17"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "10176:568:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10233:6:17",
														"nodeType": "YulTypedName",
														"src": "10233:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10241:3:17",
														"nodeType": "YulTypedName",
														"src": "10241:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "10249:8:17",
														"nodeType": "YulTypedName",
														"src": "10249:8:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10259:6:17",
														"nodeType": "YulTypedName",
														"src": "10259:6:17",
														"type": ""
													}
												],
												"src": "10176:568:17"
											},
											{
												"body": {
													"nativeSrc": "10839:478:17",
													"nodeType": "YulBlock",
													"src": "10839:478:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "10888:83:17",
																"nodeType": "YulBlock",
																"src": "10888:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10890:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "10890:77:17"
																			},
																			"nativeSrc": "10890:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10890:79:17"
																		},
																		"nativeSrc": "10890:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10890:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10867:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "10867:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10875:4:17",
																						"nodeType": "YulLiteral",
																						"src": "10875:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10863:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "10863:3:17"
																				},
																				"nativeSrc": "10863:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10863:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10882:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "10882:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10859:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10859:3:17"
																		},
																		"nativeSrc": "10859:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10859:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10852:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10852:6:17"
																},
																"nativeSrc": "10852:35:17",
																"nodeType": "YulFunctionCall",
																"src": "10852:35:17"
															},
															"nativeSrc": "10849:122:17",
															"nodeType": "YulIf",
															"src": "10849:122:17"
														},
														{
															"nativeSrc": "10980:30:17",
															"nodeType": "YulAssignment",
															"src": "10980:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11003:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11003:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10990:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "10990:12:17"
																},
																"nativeSrc": "10990:20:17",
																"nodeType": "YulFunctionCall",
																"src": "10990:20:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10980:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10980:6:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11053:83:17",
																"nodeType": "YulBlock",
																"src": "11053:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "11055:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "11055:77:17"
																			},
																			"nativeSrc": "11055:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11055:79:17"
																		},
																		"nativeSrc": "11055:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11055:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11025:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11025:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11033:18:17",
																		"nodeType": "YulLiteral",
																		"src": "11033:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11022:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "11022:2:17"
																},
																"nativeSrc": "11022:30:17",
																"nodeType": "YulFunctionCall",
																"src": "11022:30:17"
															},
															"nativeSrc": "11019:117:17",
															"nodeType": "YulIf",
															"src": "11019:117:17"
														},
														{
															"nativeSrc": "11145:29:17",
															"nodeType": "YulAssignment",
															"src": "11145:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11161:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11161:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11169:4:17",
																		"nodeType": "YulLiteral",
																		"src": "11169:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11157:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11157:3:17"
																},
																"nativeSrc": "11157:17:17",
																"nodeType": "YulFunctionCall",
																"src": "11157:17:17"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "11145:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "11145:8:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11228:83:17",
																"nodeType": "YulBlock",
																"src": "11228:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "11230:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "11230:77:17"
																			},
																			"nativeSrc": "11230:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11230:79:17"
																		},
																		"nativeSrc": "11230:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11230:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "11193:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "11193:8:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "11207:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "11207:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11215:4:17",
																						"nodeType": "YulLiteral",
																						"src": "11215:4:17",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "11203:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11203:3:17"
																				},
																				"nativeSrc": "11203:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11203:17:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11189:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11189:3:17"
																		},
																		"nativeSrc": "11189:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11189:32:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11223:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11223:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11186:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "11186:2:17"
																},
																"nativeSrc": "11186:41:17",
																"nodeType": "YulFunctionCall",
																"src": "11186:41:17"
															},
															"nativeSrc": "11183:128:17",
															"nodeType": "YulIf",
															"src": "11183:128:17"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "10764:553:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10806:6:17",
														"nodeType": "YulTypedName",
														"src": "10806:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10814:3:17",
														"nodeType": "YulTypedName",
														"src": "10814:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "10822:8:17",
														"nodeType": "YulTypedName",
														"src": "10822:8:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10832:6:17",
														"nodeType": "YulTypedName",
														"src": "10832:6:17",
														"type": ""
													}
												],
												"src": "10764:553:17"
											},
											{
												"body": {
													"nativeSrc": "11497:1073:17",
													"nodeType": "YulBlock",
													"src": "11497:1073:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "11543:83:17",
																"nodeType": "YulBlock",
																"src": "11543:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11545:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "11545:77:17"
																			},
																			"nativeSrc": "11545:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11545:79:17"
																		},
																		"nativeSrc": "11545:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11545:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11518:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11518:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11527:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11527:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11514:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11514:3:17"
																		},
																		"nativeSrc": "11514:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11514:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11539:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11539:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11510:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11510:3:17"
																},
																"nativeSrc": "11510:32:17",
																"nodeType": "YulFunctionCall",
																"src": "11510:32:17"
															},
															"nativeSrc": "11507:119:17",
															"nodeType": "YulIf",
															"src": "11507:119:17"
														},
														{
															"nativeSrc": "11636:296:17",
															"nodeType": "YulBlock",
															"src": "11636:296:17",
															"statements": [
																{
																	"nativeSrc": "11651:45:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11651:45:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11682:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "11682:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11693:1:17",
																						"nodeType": "YulLiteral",
																						"src": "11693:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11678:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11678:3:17"
																				},
																				"nativeSrc": "11678:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11678:17:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11665:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "11665:12:17"
																		},
																		"nativeSrc": "11665:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11665:31:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11655:6:17",
																			"nodeType": "YulTypedName",
																			"src": "11655:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11743:83:17",
																		"nodeType": "YulBlock",
																		"src": "11743:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11745:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "11745:77:17"
																					},
																					"nativeSrc": "11745:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "11745:79:17"
																				},
																				"nativeSrc": "11745:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "11745:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11715:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11715:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11723:18:17",
																				"nodeType": "YulLiteral",
																				"src": "11723:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11712:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "11712:2:17"
																		},
																		"nativeSrc": "11712:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11712:30:17"
																	},
																	"nativeSrc": "11709:117:17",
																	"nodeType": "YulIf",
																	"src": "11709:117:17"
																},
																{
																	"nativeSrc": "11840:82:17",
																	"nodeType": "YulAssignment",
																	"src": "11840:82:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11894:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "11894:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11905:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "11905:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11890:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11890:3:17"
																				},
																				"nativeSrc": "11890:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11890:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11914:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11914:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "11858:31:17",
																			"nodeType": "YulIdentifier",
																			"src": "11858:31:17"
																		},
																		"nativeSrc": "11858:64:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11858:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11840:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "11840:6:17"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "11848:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "11848:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11942:313:17",
															"nodeType": "YulBlock",
															"src": "11942:313:17",
															"statements": [
																{
																	"nativeSrc": "11957:46:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11957:46:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11988:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "11988:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11999:2:17",
																						"nodeType": "YulLiteral",
																						"src": "11999:2:17",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11984:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11984:3:17"
																				},
																				"nativeSrc": "11984:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11984:18:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11971:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "11971:12:17"
																		},
																		"nativeSrc": "11971:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11971:32:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11961:6:17",
																			"nodeType": "YulTypedName",
																			"src": "11961:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12050:83:17",
																		"nodeType": "YulBlock",
																		"src": "12050:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12052:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "12052:77:17"
																					},
																					"nativeSrc": "12052:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "12052:79:17"
																				},
																				"nativeSrc": "12052:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "12052:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12022:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12022:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12030:18:17",
																				"nodeType": "YulLiteral",
																				"src": "12030:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12019:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "12019:2:17"
																		},
																		"nativeSrc": "12019:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12019:30:17"
																	},
																	"nativeSrc": "12016:117:17",
																	"nodeType": "YulIf",
																	"src": "12016:117:17"
																},
																{
																	"nativeSrc": "12147:98:17",
																	"nodeType": "YulAssignment",
																	"src": "12147:98:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12217:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12217:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12228:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12228:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12213:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12213:3:17"
																				},
																				"nativeSrc": "12213:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12213:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12237:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12237:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "12165:47:17",
																			"nodeType": "YulIdentifier",
																			"src": "12165:47:17"
																		},
																		"nativeSrc": "12165:80:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12165:80:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12147:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12147:6:17"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "12155:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12155:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12265:298:17",
															"nodeType": "YulBlock",
															"src": "12265:298:17",
															"statements": [
																{
																	"nativeSrc": "12280:46:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12280:46:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12311:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12311:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12322:2:17",
																						"nodeType": "YulLiteral",
																						"src": "12322:2:17",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12307:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12307:3:17"
																				},
																				"nativeSrc": "12307:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12307:18:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12294:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "12294:12:17"
																		},
																		"nativeSrc": "12294:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12294:32:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12284:6:17",
																			"nodeType": "YulTypedName",
																			"src": "12284:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12373:83:17",
																		"nodeType": "YulBlock",
																		"src": "12373:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12375:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "12375:77:17"
																					},
																					"nativeSrc": "12375:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "12375:79:17"
																				},
																				"nativeSrc": "12375:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "12375:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12345:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12345:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12353:18:17",
																				"nodeType": "YulLiteral",
																				"src": "12353:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12342:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "12342:2:17"
																		},
																		"nativeSrc": "12342:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12342:30:17"
																	},
																	"nativeSrc": "12339:117:17",
																	"nodeType": "YulIf",
																	"src": "12339:117:17"
																},
																{
																	"nativeSrc": "12470:83:17",
																	"nodeType": "YulAssignment",
																	"src": "12470:83:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12525:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12525:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12536:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12536:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12521:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12521:3:17"
																				},
																				"nativeSrc": "12521:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12521:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12545:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12545:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "12488:32:17",
																			"nodeType": "YulIdentifier",
																			"src": "12488:32:17"
																		},
																		"nativeSrc": "12488:65:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12488:65:17"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "12470:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12470:6:17"
																		},
																		{
																			"name": "value5",
																			"nativeSrc": "12478:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12478:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_string_calldata_ptr",
												"nativeSrc": "11323:1247:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11427:9:17",
														"nodeType": "YulTypedName",
														"src": "11427:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11438:7:17",
														"nodeType": "YulTypedName",
														"src": "11438:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11450:6:17",
														"nodeType": "YulTypedName",
														"src": "11450:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11458:6:17",
														"nodeType": "YulTypedName",
														"src": "11458:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11466:6:17",
														"nodeType": "YulTypedName",
														"src": "11466:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11474:6:17",
														"nodeType": "YulTypedName",
														"src": "11474:6:17",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11482:6:17",
														"nodeType": "YulTypedName",
														"src": "11482:6:17",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "11490:6:17",
														"nodeType": "YulTypedName",
														"src": "11490:6:17",
														"type": ""
													}
												],
												"src": "11323:1247:17"
											},
											{
												"body": {
													"nativeSrc": "12604:152:17",
													"nodeType": "YulBlock",
													"src": "12604:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12621:1:17",
																		"nodeType": "YulLiteral",
																		"src": "12621:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12624:77:17",
																		"nodeType": "YulLiteral",
																		"src": "12624:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12614:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12614:6:17"
																},
																"nativeSrc": "12614:88:17",
																"nodeType": "YulFunctionCall",
																"src": "12614:88:17"
															},
															"nativeSrc": "12614:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "12614:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12718:1:17",
																		"nodeType": "YulLiteral",
																		"src": "12718:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12721:4:17",
																		"nodeType": "YulLiteral",
																		"src": "12721:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12711:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12711:6:17"
																},
																"nativeSrc": "12711:15:17",
																"nodeType": "YulFunctionCall",
																"src": "12711:15:17"
															},
															"nativeSrc": "12711:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "12711:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12742:1:17",
																		"nodeType": "YulLiteral",
																		"src": "12742:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12745:4:17",
																		"nodeType": "YulLiteral",
																		"src": "12745:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12735:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12735:6:17"
																},
																"nativeSrc": "12735:15:17",
																"nodeType": "YulFunctionCall",
																"src": "12735:15:17"
															},
															"nativeSrc": "12735:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "12735:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "12576:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "12576:180:17"
											},
											{
												"body": {
													"nativeSrc": "12857:73:17",
													"nodeType": "YulBlock",
													"src": "12857:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12874:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12874:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12879:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12879:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12867:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12867:6:17"
																},
																"nativeSrc": "12867:19:17",
																"nodeType": "YulFunctionCall",
																"src": "12867:19:17"
															},
															"nativeSrc": "12867:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "12867:19:17"
														},
														{
															"nativeSrc": "12895:29:17",
															"nodeType": "YulAssignment",
															"src": "12895:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12914:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "12914:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12919:4:17",
																		"nodeType": "YulLiteral",
																		"src": "12919:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12910:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12910:3:17"
																},
																"nativeSrc": "12910:14:17",
																"nodeType": "YulFunctionCall",
																"src": "12910:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12895:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "12895:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "12762:168:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12829:3:17",
														"nodeType": "YulTypedName",
														"src": "12829:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12834:6:17",
														"nodeType": "YulTypedName",
														"src": "12834:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12845:11:17",
														"nodeType": "YulTypedName",
														"src": "12845:11:17",
														"type": ""
													}
												],
												"src": "12762:168:17"
											},
											{
												"body": {
													"nativeSrc": "13000:84:17",
													"nodeType": "YulBlock",
													"src": "13000:84:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "13024:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13024:3:17"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "13029:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13029:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13034:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13034:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "13011:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "13011:12:17"
																},
																"nativeSrc": "13011:30:17",
																"nodeType": "YulFunctionCall",
																"src": "13011:30:17"
															},
															"nativeSrc": "13011:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "13011:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "13061:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "13061:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "13066:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13066:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13057:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13057:3:17"
																		},
																		"nativeSrc": "13057:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13057:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13075:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13075:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13050:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13050:6:17"
																},
																"nativeSrc": "13050:27:17",
																"nodeType": "YulFunctionCall",
																"src": "13050:27:17"
															},
															"nativeSrc": "13050:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "13050:27:17"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "12936:148:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12982:3:17",
														"nodeType": "YulTypedName",
														"src": "12982:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "12987:3:17",
														"nodeType": "YulTypedName",
														"src": "12987:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12992:6:17",
														"nodeType": "YulTypedName",
														"src": "12992:6:17",
														"type": ""
													}
												],
												"src": "12936:148:17"
											},
											{
												"body": {
													"nativeSrc": "13212:214:17",
													"nodeType": "YulBlock",
													"src": "13212:214:17",
													"statements": [
														{
															"nativeSrc": "13222:77:17",
															"nodeType": "YulAssignment",
															"src": "13222:77:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13287:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13287:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13292:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13292:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13229:57:17",
																	"nodeType": "YulIdentifier",
																	"src": "13229:57:17"
																},
																"nativeSrc": "13229:70:17",
																"nodeType": "YulFunctionCall",
																"src": "13229:70:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13222:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13222:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "13346:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "13346:5:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13353:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13353:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13358:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13358:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "13309:36:17",
																	"nodeType": "YulIdentifier",
																	"src": "13309:36:17"
																},
																"nativeSrc": "13309:56:17",
																"nodeType": "YulFunctionCall",
																"src": "13309:56:17"
															},
															"nativeSrc": "13309:56:17",
															"nodeType": "YulExpressionStatement",
															"src": "13309:56:17"
														},
														{
															"nativeSrc": "13374:46:17",
															"nodeType": "YulAssignment",
															"src": "13374:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13385:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13385:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13412:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13412:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "13390:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "13390:21:17"
																		},
																		"nativeSrc": "13390:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13390:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13381:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13381:3:17"
																},
																"nativeSrc": "13381:39:17",
																"nodeType": "YulFunctionCall",
																"src": "13381:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13374:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13374:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "13112:314:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "13185:5:17",
														"nodeType": "YulTypedName",
														"src": "13185:5:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13192:6:17",
														"nodeType": "YulTypedName",
														"src": "13192:6:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13200:3:17",
														"nodeType": "YulTypedName",
														"src": "13200:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13208:3:17",
														"nodeType": "YulTypedName",
														"src": "13208:3:17",
														"type": ""
													}
												],
												"src": "13112:314:17"
											},
											{
												"body": {
													"nativeSrc": "13521:28:17",
													"nodeType": "YulBlock",
													"src": "13521:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13538:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13538:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13541:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13541:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13531:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13531:6:17"
																},
																"nativeSrc": "13531:12:17",
																"nodeType": "YulFunctionCall",
																"src": "13531:12:17"
															},
															"nativeSrc": "13531:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "13531:12:17"
														}
													]
												},
												"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
												"nativeSrc": "13432:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "13432:117:17"
											},
											{
												"body": {
													"nativeSrc": "13606:48:17",
													"nodeType": "YulBlock",
													"src": "13606:48:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "13630:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13630:3:17"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "13635:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13635:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13640:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13640:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "13617:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "13617:12:17"
																},
																"nativeSrc": "13617:30:17",
																"nodeType": "YulFunctionCall",
																"src": "13617:30:17"
															},
															"nativeSrc": "13617:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "13617:30:17"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nativeSrc": "13555:99:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "13588:3:17",
														"nodeType": "YulTypedName",
														"src": "13588:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "13593:3:17",
														"nodeType": "YulTypedName",
														"src": "13593:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13598:6:17",
														"nodeType": "YulTypedName",
														"src": "13598:6:17",
														"type": ""
													}
												],
												"src": "13555:99:17"
											},
											{
												"body": {
													"nativeSrc": "13822:405:17",
													"nodeType": "YulBlock",
													"src": "13822:405:17",
													"statements": [
														{
															"nativeSrc": "13832:93:17",
															"nodeType": "YulAssignment",
															"src": "13832:93:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13913:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13913:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13918:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13918:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "13839:73:17",
																	"nodeType": "YulIdentifier",
																	"src": "13839:73:17"
																},
																"nativeSrc": "13839:86:17",
																"nodeType": "YulFunctionCall",
																"src": "13839:86:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13832:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13832:3:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14017:83:17",
																"nodeType": "YulBlock",
																"src": "14017:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
																				"nativeSrc": "14019:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "14019:77:17"
																			},
																			"nativeSrc": "14019:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14019:79:17"
																		},
																		"nativeSrc": "14019:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14019:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "13941:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13941:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13949:66:17",
																		"nodeType": "YulLiteral",
																		"src": "13949:66:17",
																		"type": "",
																		"value": "0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13938:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "13938:2:17"
																},
																"nativeSrc": "13938:78:17",
																"nodeType": "YulFunctionCall",
																"src": "13938:78:17"
															},
															"nativeSrc": "13935:165:17",
															"nodeType": "YulIf",
															"src": "13935:165:17"
														},
														{
															"nativeSrc": "14109:27:17",
															"nodeType": "YulAssignment",
															"src": "14109:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "14123:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14123:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14131:4:17",
																		"nodeType": "YulLiteral",
																		"src": "14131:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14119:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14119:3:17"
																},
																"nativeSrc": "14119:17:17",
																"nodeType": "YulFunctionCall",
																"src": "14119:17:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14109:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14109:6:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "14170:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "14170:5:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14177:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "14177:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14182:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14182:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nativeSrc": "14146:23:17",
																	"nodeType": "YulIdentifier",
																	"src": "14146:23:17"
																},
																"nativeSrc": "14146:43:17",
																"nodeType": "YulFunctionCall",
																"src": "14146:43:17"
															},
															"nativeSrc": "14146:43:17",
															"nodeType": "YulExpressionStatement",
															"src": "14146:43:17"
														},
														{
															"nativeSrc": "14198:23:17",
															"nodeType": "YulAssignment",
															"src": "14198:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14209:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "14209:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14214:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14214:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14205:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14205:3:17"
																},
																"nativeSrc": "14205:16:17",
																"nodeType": "YulFunctionCall",
																"src": "14205:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14198:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14198:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "13690:537:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "13795:5:17",
														"nodeType": "YulTypedName",
														"src": "13795:5:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13802:6:17",
														"nodeType": "YulTypedName",
														"src": "13802:6:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13810:3:17",
														"nodeType": "YulTypedName",
														"src": "13810:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13818:3:17",
														"nodeType": "YulTypedName",
														"src": "13818:3:17",
														"type": ""
													}
												],
												"src": "13690:537:17"
											},
											{
												"body": {
													"nativeSrc": "14447:396:17",
													"nodeType": "YulBlock",
													"src": "14447:396:17",
													"statements": [
														{
															"nativeSrc": "14457:26:17",
															"nodeType": "YulAssignment",
															"src": "14457:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14469:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "14469:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14480:2:17",
																		"nodeType": "YulLiteral",
																		"src": "14480:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14465:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14465:3:17"
																},
																"nativeSrc": "14465:18:17",
																"nodeType": "YulFunctionCall",
																"src": "14465:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14457:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "14457:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14504:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14504:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14515:1:17",
																				"nodeType": "YulLiteral",
																				"src": "14515:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14500:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14500:3:17"
																		},
																		"nativeSrc": "14500:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14500:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14523:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "14523:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14529:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14529:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14519:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14519:3:17"
																		},
																		"nativeSrc": "14519:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14519:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14493:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14493:6:17"
																},
																"nativeSrc": "14493:47:17",
																"nodeType": "YulFunctionCall",
																"src": "14493:47:17"
															},
															"nativeSrc": "14493:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "14493:47:17"
														},
														{
															"nativeSrc": "14549:94:17",
															"nodeType": "YulAssignment",
															"src": "14549:94:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14621:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14621:6:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14629:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14629:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14638:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "14638:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "14557:63:17",
																	"nodeType": "YulIdentifier",
																	"src": "14557:63:17"
																},
																"nativeSrc": "14557:86:17",
																"nodeType": "YulFunctionCall",
																"src": "14557:86:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14549:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "14549:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14664:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14664:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14675:2:17",
																				"nodeType": "YulLiteral",
																				"src": "14675:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14660:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14660:3:17"
																		},
																		"nativeSrc": "14660:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14660:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14684:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "14684:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14690:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "14690:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14680:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14680:3:17"
																		},
																		"nativeSrc": "14680:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14680:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14653:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14653:6:17"
																},
																"nativeSrc": "14653:48:17",
																"nodeType": "YulFunctionCall",
																"src": "14653:48:17"
															},
															"nativeSrc": "14653:48:17",
															"nodeType": "YulExpressionStatement",
															"src": "14653:48:17"
														},
														{
															"nativeSrc": "14710:126:17",
															"nodeType": "YulAssignment",
															"src": "14710:126:17",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14814:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14814:6:17"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "14822:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14822:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14831:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "14831:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "14718:95:17",
																	"nodeType": "YulIdentifier",
																	"src": "14718:95:17"
																},
																"nativeSrc": "14718:118:17",
																"nodeType": "YulFunctionCall",
																"src": "14718:118:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14710:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "14710:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_bytes_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "14233:610:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14395:9:17",
														"nodeType": "YulTypedName",
														"src": "14395:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14407:6:17",
														"nodeType": "YulTypedName",
														"src": "14407:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14415:6:17",
														"nodeType": "YulTypedName",
														"src": "14415:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14423:6:17",
														"nodeType": "YulTypedName",
														"src": "14423:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14431:6:17",
														"nodeType": "YulTypedName",
														"src": "14431:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14442:4:17",
														"nodeType": "YulTypedName",
														"src": "14442:4:17",
														"type": ""
													}
												],
												"src": "14233:610:17"
											},
											{
												"body": {
													"nativeSrc": "14889:76:17",
													"nodeType": "YulBlock",
													"src": "14889:76:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "14943:16:17",
																"nodeType": "YulBlock",
																"src": "14943:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14952:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14952:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14955:1:17",
																					"nodeType": "YulLiteral",
																					"src": "14955:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14945:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14945:6:17"
																			},
																			"nativeSrc": "14945:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14945:12:17"
																		},
																		"nativeSrc": "14945:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14945:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14912:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "14912:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14934:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "14934:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "14919:14:17",
																					"nodeType": "YulIdentifier",
																					"src": "14919:14:17"
																				},
																				"nativeSrc": "14919:21:17",
																				"nodeType": "YulFunctionCall",
																				"src": "14919:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14909:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "14909:2:17"
																		},
																		"nativeSrc": "14909:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14909:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14902:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14902:6:17"
																},
																"nativeSrc": "14902:40:17",
																"nodeType": "YulFunctionCall",
																"src": "14902:40:17"
															},
															"nativeSrc": "14899:60:17",
															"nodeType": "YulIf",
															"src": "14899:60:17"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "14849:116:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14882:5:17",
														"nodeType": "YulTypedName",
														"src": "14882:5:17",
														"type": ""
													}
												],
												"src": "14849:116:17"
											},
											{
												"body": {
													"nativeSrc": "15031:77:17",
													"nodeType": "YulBlock",
													"src": "15031:77:17",
													"statements": [
														{
															"nativeSrc": "15041:22:17",
															"nodeType": "YulAssignment",
															"src": "15041:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15056:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "15056:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15050:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "15050:5:17"
																},
																"nativeSrc": "15050:13:17",
																"nodeType": "YulFunctionCall",
																"src": "15050:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15041:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "15041:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15096:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "15096:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "15072:23:17",
																	"nodeType": "YulIdentifier",
																	"src": "15072:23:17"
																},
																"nativeSrc": "15072:30:17",
																"nodeType": "YulFunctionCall",
																"src": "15072:30:17"
															},
															"nativeSrc": "15072:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "15072:30:17"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "14971:137:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15009:6:17",
														"nodeType": "YulTypedName",
														"src": "15009:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15017:3:17",
														"nodeType": "YulTypedName",
														"src": "15017:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15025:5:17",
														"nodeType": "YulTypedName",
														"src": "15025:5:17",
														"type": ""
													}
												],
												"src": "14971:137:17"
											},
											{
												"body": {
													"nativeSrc": "15188:271:17",
													"nodeType": "YulBlock",
													"src": "15188:271:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "15234:83:17",
																"nodeType": "YulBlock",
																"src": "15234:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15236:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "15236:77:17"
																			},
																			"nativeSrc": "15236:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15236:79:17"
																		},
																		"nativeSrc": "15236:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "15236:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15209:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "15209:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15218:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "15218:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15205:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15205:3:17"
																		},
																		"nativeSrc": "15205:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15205:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15230:2:17",
																		"nodeType": "YulLiteral",
																		"src": "15230:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15201:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15201:3:17"
																},
																"nativeSrc": "15201:32:17",
																"nodeType": "YulFunctionCall",
																"src": "15201:32:17"
															},
															"nativeSrc": "15198:119:17",
															"nodeType": "YulIf",
															"src": "15198:119:17"
														},
														{
															"nativeSrc": "15327:125:17",
															"nodeType": "YulBlock",
															"src": "15327:125:17",
															"statements": [
																{
																	"nativeSrc": "15342:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15342:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15356:1:17",
																		"nodeType": "YulLiteral",
																		"src": "15356:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15346:6:17",
																			"nodeType": "YulTypedName",
																			"src": "15346:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15371:71:17",
																	"nodeType": "YulAssignment",
																	"src": "15371:71:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15414:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "15414:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15425:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "15425:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15410:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "15410:3:17"
																				},
																				"nativeSrc": "15410:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "15410:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15434:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "15434:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "15381:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "15381:28:17"
																		},
																		"nativeSrc": "15381:61:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15381:61:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15371:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "15371:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "15114:345:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15158:9:17",
														"nodeType": "YulTypedName",
														"src": "15158:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15169:7:17",
														"nodeType": "YulTypedName",
														"src": "15169:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15181:6:17",
														"nodeType": "YulTypedName",
														"src": "15181:6:17",
														"type": ""
													}
												],
												"src": "15114:345:17"
											},
											{
												"body": {
													"nativeSrc": "15571:74:17",
													"nodeType": "YulBlock",
													"src": "15571:74:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15593:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15593:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15601:1:17",
																				"nodeType": "YulLiteral",
																				"src": "15601:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15589:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15589:3:17"
																		},
																		"nativeSrc": "15589:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15589:14:17"
																	},
																	{
																		"hexValue": "50726f6f6647656e65726174696f6e3a20496e76616c69642070726f6f66",
																		"kind": "string",
																		"nativeSrc": "15605:32:17",
																		"nodeType": "YulLiteral",
																		"src": "15605:32:17",
																		"type": "",
																		"value": "ProofGeneration: Invalid proof"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15582:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15582:6:17"
																},
																"nativeSrc": "15582:56:17",
																"nodeType": "YulFunctionCall",
																"src": "15582:56:17"
															},
															"nativeSrc": "15582:56:17",
															"nodeType": "YulExpressionStatement",
															"src": "15582:56:17"
														}
													]
												},
												"name": "store_literal_in_memory_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e",
												"nativeSrc": "15465:180:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15563:6:17",
														"nodeType": "YulTypedName",
														"src": "15563:6:17",
														"type": ""
													}
												],
												"src": "15465:180:17"
											},
											{
												"body": {
													"nativeSrc": "15797:220:17",
													"nodeType": "YulBlock",
													"src": "15797:220:17",
													"statements": [
														{
															"nativeSrc": "15807:74:17",
															"nodeType": "YulAssignment",
															"src": "15807:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15873:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "15873:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15878:2:17",
																		"nodeType": "YulLiteral",
																		"src": "15878:2:17",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15814:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "15814:58:17"
																},
																"nativeSrc": "15814:67:17",
																"nodeType": "YulFunctionCall",
																"src": "15814:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15807:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15807:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15979:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "15979:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e",
																	"nativeSrc": "15890:88:17",
																	"nodeType": "YulIdentifier",
																	"src": "15890:88:17"
																},
																"nativeSrc": "15890:93:17",
																"nodeType": "YulFunctionCall",
																"src": "15890:93:17"
															},
															"nativeSrc": "15890:93:17",
															"nodeType": "YulExpressionStatement",
															"src": "15890:93:17"
														},
														{
															"nativeSrc": "15992:19:17",
															"nodeType": "YulAssignment",
															"src": "15992:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16003:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "16003:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16008:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16008:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15999:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15999:3:17"
																},
																"nativeSrc": "15999:12:17",
																"nodeType": "YulFunctionCall",
																"src": "15999:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15992:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15992:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15651:366:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15785:3:17",
														"nodeType": "YulTypedName",
														"src": "15785:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15793:3:17",
														"nodeType": "YulTypedName",
														"src": "15793:3:17",
														"type": ""
													}
												],
												"src": "15651:366:17"
											},
											{
												"body": {
													"nativeSrc": "16194:248:17",
													"nodeType": "YulBlock",
													"src": "16194:248:17",
													"statements": [
														{
															"nativeSrc": "16204:26:17",
															"nodeType": "YulAssignment",
															"src": "16204:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16216:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "16216:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16227:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16227:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16212:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16212:3:17"
																},
																"nativeSrc": "16212:18:17",
																"nodeType": "YulFunctionCall",
																"src": "16212:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16204:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "16204:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16251:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16251:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16262:1:17",
																				"nodeType": "YulLiteral",
																				"src": "16262:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16247:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16247:3:17"
																		},
																		"nativeSrc": "16247:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16247:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16270:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "16270:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16276:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16276:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16266:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16266:3:17"
																		},
																		"nativeSrc": "16266:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16266:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16240:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16240:6:17"
																},
																"nativeSrc": "16240:47:17",
																"nodeType": "YulFunctionCall",
																"src": "16240:47:17"
															},
															"nativeSrc": "16240:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "16240:47:17"
														},
														{
															"nativeSrc": "16296:139:17",
															"nodeType": "YulAssignment",
															"src": "16296:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16430:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "16430:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16304:124:17",
																	"nodeType": "YulIdentifier",
																	"src": "16304:124:17"
																},
																"nativeSrc": "16304:131:17",
																"nodeType": "YulFunctionCall",
																"src": "16304:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16296:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "16296:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16023:419:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16174:9:17",
														"nodeType": "YulTypedName",
														"src": "16174:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16189:4:17",
														"nodeType": "YulTypedName",
														"src": "16189:4:17",
														"type": ""
													}
												],
												"src": "16023:419:17"
											},
											{
												"body": {
													"nativeSrc": "16574:215:17",
													"nodeType": "YulBlock",
													"src": "16574:215:17",
													"statements": [
														{
															"nativeSrc": "16584:78:17",
															"nodeType": "YulAssignment",
															"src": "16584:78:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16650:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "16650:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16655:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "16655:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16591:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "16591:58:17"
																},
																"nativeSrc": "16591:71:17",
																"nodeType": "YulFunctionCall",
																"src": "16591:71:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16584:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16584:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "16709:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "16709:5:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16716:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "16716:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16721:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "16721:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "16672:36:17",
																	"nodeType": "YulIdentifier",
																	"src": "16672:36:17"
																},
																"nativeSrc": "16672:56:17",
																"nodeType": "YulFunctionCall",
																"src": "16672:56:17"
															},
															"nativeSrc": "16672:56:17",
															"nodeType": "YulExpressionStatement",
															"src": "16672:56:17"
														},
														{
															"nativeSrc": "16737:46:17",
															"nodeType": "YulAssignment",
															"src": "16737:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16748:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "16748:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "16775:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "16775:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "16753:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "16753:21:17"
																		},
																		"nativeSrc": "16753:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16753:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16744:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16744:3:17"
																},
																"nativeSrc": "16744:39:17",
																"nodeType": "YulFunctionCall",
																"src": "16744:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16737:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16737:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16472:317:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "16547:5:17",
														"nodeType": "YulTypedName",
														"src": "16547:5:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16554:6:17",
														"nodeType": "YulTypedName",
														"src": "16554:6:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16562:3:17",
														"nodeType": "YulTypedName",
														"src": "16562:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16570:3:17",
														"nodeType": "YulTypedName",
														"src": "16570:3:17",
														"type": ""
													}
												],
												"src": "16472:317:17"
											},
											{
												"body": {
													"nativeSrc": "16923:205:17",
													"nodeType": "YulBlock",
													"src": "16923:205:17",
													"statements": [
														{
															"nativeSrc": "16933:26:17",
															"nodeType": "YulAssignment",
															"src": "16933:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16945:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "16945:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16956:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16956:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16941:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16941:3:17"
																},
																"nativeSrc": "16941:18:17",
																"nodeType": "YulFunctionCall",
																"src": "16941:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16933:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "16933:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16980:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16980:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16991:1:17",
																				"nodeType": "YulLiteral",
																				"src": "16991:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16976:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16976:3:17"
																		},
																		"nativeSrc": "16976:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16976:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16999:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "16999:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17005:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17005:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16995:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16995:3:17"
																		},
																		"nativeSrc": "16995:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16995:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16969:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16969:6:17"
																},
																"nativeSrc": "16969:47:17",
																"nodeType": "YulFunctionCall",
																"src": "16969:47:17"
															},
															"nativeSrc": "16969:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "16969:47:17"
														},
														{
															"nativeSrc": "17025:96:17",
															"nodeType": "YulAssignment",
															"src": "17025:96:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17099:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17099:6:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "17107:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17107:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "17116:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "17116:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17033:65:17",
																	"nodeType": "YulIdentifier",
																	"src": "17033:65:17"
																},
																"nativeSrc": "17033:88:17",
																"nodeType": "YulFunctionCall",
																"src": "17033:88:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17025:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "17025:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16795:333:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16887:9:17",
														"nodeType": "YulTypedName",
														"src": "16887:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16899:6:17",
														"nodeType": "YulTypedName",
														"src": "16899:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16907:6:17",
														"nodeType": "YulTypedName",
														"src": "16907:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16918:4:17",
														"nodeType": "YulTypedName",
														"src": "16918:4:17",
														"type": ""
													}
												],
												"src": "16795:333:17"
											},
											{
												"body": {
													"nativeSrc": "17260:206:17",
													"nodeType": "YulBlock",
													"src": "17260:206:17",
													"statements": [
														{
															"nativeSrc": "17270:26:17",
															"nodeType": "YulAssignment",
															"src": "17270:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17282:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "17282:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17293:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17293:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17278:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17278:3:17"
																},
																"nativeSrc": "17278:18:17",
																"nodeType": "YulFunctionCall",
																"src": "17278:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17270:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "17270:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17350:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17350:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17363:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17363:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17374:1:17",
																				"nodeType": "YulLiteral",
																				"src": "17374:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17359:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17359:3:17"
																		},
																		"nativeSrc": "17359:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17359:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17306:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "17306:43:17"
																},
																"nativeSrc": "17306:71:17",
																"nodeType": "YulFunctionCall",
																"src": "17306:71:17"
															},
															"nativeSrc": "17306:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "17306:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17431:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17431:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17444:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17444:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17455:2:17",
																				"nodeType": "YulLiteral",
																				"src": "17455:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17440:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17440:3:17"
																		},
																		"nativeSrc": "17440:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17440:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "17387:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "17387:43:17"
																},
																"nativeSrc": "17387:72:17",
																"nodeType": "YulFunctionCall",
																"src": "17387:72:17"
															},
															"nativeSrc": "17387:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "17387:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "17134:332:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17224:9:17",
														"nodeType": "YulTypedName",
														"src": "17224:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17236:6:17",
														"nodeType": "YulTypedName",
														"src": "17236:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17244:6:17",
														"nodeType": "YulTypedName",
														"src": "17244:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17255:4:17",
														"nodeType": "YulTypedName",
														"src": "17255:4:17",
														"type": ""
													}
												],
												"src": "17134:332:17"
											},
											{
												"body": {
													"nativeSrc": "17500:152:17",
													"nodeType": "YulBlock",
													"src": "17500:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17517:1:17",
																		"nodeType": "YulLiteral",
																		"src": "17517:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17520:77:17",
																		"nodeType": "YulLiteral",
																		"src": "17520:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17510:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17510:6:17"
																},
																"nativeSrc": "17510:88:17",
																"nodeType": "YulFunctionCall",
																"src": "17510:88:17"
															},
															"nativeSrc": "17510:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "17510:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17614:1:17",
																		"nodeType": "YulLiteral",
																		"src": "17614:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17617:4:17",
																		"nodeType": "YulLiteral",
																		"src": "17617:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17607:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17607:6:17"
																},
																"nativeSrc": "17607:15:17",
																"nodeType": "YulFunctionCall",
																"src": "17607:15:17"
															},
															"nativeSrc": "17607:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "17607:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17638:1:17",
																		"nodeType": "YulLiteral",
																		"src": "17638:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17641:4:17",
																		"nodeType": "YulLiteral",
																		"src": "17641:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17631:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17631:6:17"
																},
																"nativeSrc": "17631:15:17",
																"nodeType": "YulFunctionCall",
																"src": "17631:15:17"
															},
															"nativeSrc": "17631:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "17631:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "17472:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "17472:180:17"
											},
											{
												"body": {
													"nativeSrc": "17709:269:17",
													"nodeType": "YulBlock",
													"src": "17709:269:17",
													"statements": [
														{
															"nativeSrc": "17719:22:17",
															"nodeType": "YulAssignment",
															"src": "17719:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17733:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "17733:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17739:1:17",
																		"nodeType": "YulLiteral",
																		"src": "17739:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17729:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17729:3:17"
																},
																"nativeSrc": "17729:12:17",
																"nodeType": "YulFunctionCall",
																"src": "17729:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "17719:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17719:6:17"
																}
															]
														},
														{
															"nativeSrc": "17750:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "17750:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17780:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "17780:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17786:1:17",
																		"nodeType": "YulLiteral",
																		"src": "17786:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17776:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17776:3:17"
																},
																"nativeSrc": "17776:12:17",
																"nodeType": "YulFunctionCall",
																"src": "17776:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "17754:18:17",
																	"nodeType": "YulTypedName",
																	"src": "17754:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17827:51:17",
																"nodeType": "YulBlock",
																"src": "17827:51:17",
																"statements": [
																	{
																		"nativeSrc": "17841:27:17",
																		"nodeType": "YulAssignment",
																		"src": "17841:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "17855:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "17855:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17863:4:17",
																					"nodeType": "YulLiteral",
																					"src": "17863:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "17851:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "17851:3:17"
																			},
																			"nativeSrc": "17851:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "17851:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "17841:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "17841:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "17807:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "17807:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17800:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17800:6:17"
																},
																"nativeSrc": "17800:26:17",
																"nodeType": "YulFunctionCall",
																"src": "17800:26:17"
															},
															"nativeSrc": "17797:81:17",
															"nodeType": "YulIf",
															"src": "17797:81:17"
														},
														{
															"body": {
																"nativeSrc": "17930:42:17",
																"nodeType": "YulBlock",
																"src": "17930:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "17944:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "17944:16:17"
																			},
																			"nativeSrc": "17944:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "17944:18:17"
																		},
																		"nativeSrc": "17944:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "17944:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "17894:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "17894:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "17917:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "17917:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17925:2:17",
																				"nodeType": "YulLiteral",
																				"src": "17925:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "17914:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "17914:2:17"
																		},
																		"nativeSrc": "17914:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17914:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17891:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "17891:2:17"
																},
																"nativeSrc": "17891:38:17",
																"nodeType": "YulFunctionCall",
																"src": "17891:38:17"
															},
															"nativeSrc": "17888:84:17",
															"nodeType": "YulIf",
															"src": "17888:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "17658:320:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "17693:4:17",
														"nodeType": "YulTypedName",
														"src": "17693:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "17702:6:17",
														"nodeType": "YulTypedName",
														"src": "17702:6:17",
														"type": ""
													}
												],
												"src": "17658:320:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IProofVerifier_$2996_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IProofVerifier_$2996_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IProofVerifier_$2996_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IProofVerifier_$2996__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IProofVerifier_$2996_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() {\n        revert(0, 0)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n\n        if gt(length, 0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() }\n        length := mul(length, 0x20)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_bytes_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value0, value1,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ProofGeneration: Invalid proof\")\n\n    }\n\n    function abi_encode_t_stringliteral_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value0, value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1409": [
									{
										"length": 32,
										"start": 2757
									}
								],
								"1412": [
									{
										"length": 32,
										"start": 2816
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c806391d1485411610095578063d547741f11610064578063d547741f146102b0578063df6244db146102cc578063e7705db6146102e8578063f736c36514610306576100fe565b806391d1485414610216578063a217fddf14610246578063a3669aef14610264578063a865e5fe14610280576100fe565b806336568abe116100d157806336568abe1461019a57806375b238fc146101b65780637fa417b3146101d457806384b0196e146101f2576100fe565b806301ffc9a7146101025780630337c06114610132578063248a9ca31461014e5780632f2ff15d1461017e575b5f80fd5b61011c60048036038101906101179190610d4d565b610322565b6040516101299190610d92565b60405180910390f35b61014c60048036038101906101479190610e05565b61039b565b005b61016860048036038101906101639190610e63565b6103d5565b6040516101759190610e9d565b60405180910390f35b61019860048036038101906101939190610eb6565b6103f1565b005b6101b460048036038101906101af9190610eb6565b610413565b005b6101be61048e565b6040516101cb9190610e9d565b60405180910390f35b6101dc6104b2565b6040516101e99190610f4f565b60405180910390f35b6101fa6104d7565b60405161020d97969594939291906110f0565b60405180910390f35b610230600480360381019061022b9190610eb6565b61057c565b60405161023d9190610d92565b60405180910390f35b61024e6105df565b60405161025b9190610e9d565b60405180910390f35b61027e60048036038101906102799190610e05565b6105e5565b005b61029a60048036038101906102959190610e05565b61061f565b6040516102a79190610d92565b60405180910390f35b6102ca60048036038101906102c59190610eb6565b610651565b005b6102e660048036038101906102e19190610e05565b610673565b005b6102f06106e1565b6040516102fd9190610e9d565b60405180910390f35b610320600480360381019061031b919061127d565b610705565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610394575061039382610866565b5b9050919050565b5f801b6103a7816108cf565b6103d17f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09836103f1565b5050565b5f805f8381526020019081526020015f20600101549050919050565b6103fa826103d5565b610403816108cf565b61040d83836108e3565b50505050565b61041b6109cc565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461047f576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61048982826109d3565b505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6060805f805f60606104e8610abc565b6104f0610af7565b46305f801b5f67ffffffffffffffff81111561050f5761050e61132d565b5b60405190808252806020026020018201604052801561053d5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f801b81565b5f801b6105f1816108cf565b61061b7f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea0983610651565b5050565b5f61064a7f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea098361057c565b9050919050565b61065a826103d5565b610663816108cf565b61066d83836109d3565b50505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561069d816108cf565b8160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b7f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea0981565b7f0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea0961072f816108cf565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e8e1e13888888886040518563ffffffff1660e01b815260040161078f949392919061140c565b602060405180830381865afa1580156107aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107ce919061146f565b61080d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610804906114e4565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f9055e6953596a4bec3ee94fe69263dbbb095ebee41411bc4902a0c4cf0a51a21848460405161085592919061152e565b60405180910390a250505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6108e0816108db6109cc565b610b32565b50565b5f6108ee838361057c565b6109c25760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061095f6109cc565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506109c6565b5f90505b92915050565b5f33905090565b5f6109de838361057c565b15610ab2575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610a4f6109cc565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610ab6565b5f90505b92915050565b6060610af260017f0000000000000000000000000000000000000000000000000000000000000000610b8390919063ffffffff16565b905090565b6060610b2d60027f0000000000000000000000000000000000000000000000000000000000000000610b8390919063ffffffff16565b905090565b610b3c828261057c565b610b7f5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610b76929190611550565b60405180910390fd5b5050565b606060ff5f1b8314610b9f57610b9883610c30565b9050610c2a565b818054610bab906115a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd7906115a4565b8015610c225780601f10610bf957610100808354040283529160200191610c22565b820191905f5260205f20905b815481529060010190602001808311610c0557829003601f168201915b505050505090505b92915050565b60605f610c3c83610ca2565b90505f602067ffffffffffffffff811115610c5a57610c5961132d565b5b6040519080825280601f01601f191660200182016040528015610c8c5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f811115610ce7576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610d2c81610cf8565b8114610d36575f80fd5b50565b5f81359050610d4781610d23565b92915050565b5f60208284031215610d6257610d61610cf0565b5b5f610d6f84828501610d39565b91505092915050565b5f8115159050919050565b610d8c81610d78565b82525050565b5f602082019050610da55f830184610d83565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dd482610dab565b9050919050565b610de481610dca565b8114610dee575f80fd5b50565b5f81359050610dff81610ddb565b92915050565b5f60208284031215610e1a57610e19610cf0565b5b5f610e2784828501610df1565b91505092915050565b5f819050919050565b610e4281610e30565b8114610e4c575f80fd5b50565b5f81359050610e5d81610e39565b92915050565b5f60208284031215610e7857610e77610cf0565b5b5f610e8584828501610e4f565b91505092915050565b610e9781610e30565b82525050565b5f602082019050610eb05f830184610e8e565b92915050565b5f8060408385031215610ecc57610ecb610cf0565b5b5f610ed985828601610e4f565b9250506020610eea85828601610df1565b9150509250929050565b5f819050919050565b5f610f17610f12610f0d84610dab565b610ef4565b610dab565b9050919050565b5f610f2882610efd565b9050919050565b5f610f3982610f1e565b9050919050565b610f4981610f2f565b82525050565b5f602082019050610f625f830184610f40565b92915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b610f9c81610f68565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610fe482610fa2565b610fee8185610fac565b9350610ffe818560208601610fbc565b61100781610fca565b840191505092915050565b5f819050919050565b61102481611012565b82525050565b61103381610dca565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61106b81611012565b82525050565b5f61107c8383611062565b60208301905092915050565b5f602082019050919050565b5f61109e82611039565b6110a88185611043565b93506110b383611053565b805f5b838110156110e35781516110ca8882611071565b97506110d583611088565b9250506001810190506110b6565b5085935050505092915050565b5f60e0820190506111035f83018a610f93565b81810360208301526111158189610fda565b905081810360408301526111298188610fda565b9050611138606083018761101b565b611145608083018661102a565b61115260a0830185610e8e565b81810360c08301526111648184611094565b905098975050505050505050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261119357611192611172565b5b8235905067ffffffffffffffff8111156111b0576111af611176565b5b6020830191508360018202830111156111cc576111cb61117a565b5b9250929050565b5f8083601f8401126111e8576111e7611172565b5b8235905067ffffffffffffffff81111561120557611204611176565b5b6020830191508360208202830111156112215761122061117a565b5b9250929050565b5f8083601f84011261123d5761123c611172565b5b8235905067ffffffffffffffff81111561125a57611259611176565b5b6020830191508360018202830111156112765761127561117a565b5b9250929050565b5f805f805f806060878903121561129757611296610cf0565b5b5f87013567ffffffffffffffff8111156112b4576112b3610cf4565b5b6112c089828a0161117e565b9650965050602087013567ffffffffffffffff8111156112e3576112e2610cf4565b5b6112ef89828a016111d3565b9450945050604087013567ffffffffffffffff81111561131257611311610cf4565b5b61131e89828a01611228565b92509250509295509295509295565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f82825260208201905092915050565b828183375f83830152505050565b5f611383838561135a565b935061139083858461136a565b61139983610fca565b840190509392505050565b5f80fd5b82818337505050565b5f6113bc8385611043565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156113ef576113ee6113a4565b5b6020830292506114008385846113a8565b82840190509392505050565b5f6040820190508181035f830152611425818688611378565b9050818103602083015261143a8184866113b1565b905095945050505050565b61144e81610d78565b8114611458575f80fd5b50565b5f8151905061146981611445565b92915050565b5f6020828403121561148457611483610cf0565b5b5f6114918482850161145b565b91505092915050565b7f50726f6f6647656e65726174696f6e3a20496e76616c69642070726f6f6600005f82015250565b5f6114ce601e83610fac565b91506114d98261149a565b602082019050919050565b5f6020820190508181035f8301526114fb816114c2565b9050919050565b5f61150d8385610fac565b935061151a83858461136a565b61152383610fca565b840190509392505050565b5f6020820190508181035f830152611547818486611502565b90509392505050565b5f6040820190506115635f83018561102a565b6115706020830184610e8e565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806115bb57607f821691505b6020821081036115ce576115cd611577565b5b5091905056fea26469706673582212208677a69be758a4c0671134c42fbe916528414d14bf228cd860b6efd29196a25b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xDF6244DB EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xE7705DB6 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xF736C365 EQ PUSH2 0x306 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xA3669AEF EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA865E5FE EQ PUSH2 0x280 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x7FA417B3 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x1F2 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x337C061 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x17E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xD4D JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BE PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH2 0x4B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x5E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xD92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x651 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F0 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH2 0x705 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x394 JUMPI POP PUSH2 0x393 DUP3 PUSH2 0x866 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x3A7 DUP2 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x3D1 PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP4 PUSH2 0x3F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FA DUP3 PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x403 DUP2 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x40D DUP4 DUP4 PUSH2 0x8E3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x41B PUSH2 0x9CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x489 DUP3 DUP3 PUSH2 0x9D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x4E8 PUSH2 0xABC JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0xAF7 JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x50F JUMPI PUSH2 0x50E PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x53D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x5F1 DUP2 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x61B PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP4 PUSH2 0x651 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x64A PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP4 PUSH2 0x57C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65A DUP3 PUSH2 0x3D5 JUMP JUMPDEST PUSH2 0x663 DUP2 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x66D DUP4 DUP4 PUSH2 0x9D3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH2 0x69D DUP2 PUSH2 0x8CF JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 DUP2 JUMP JUMPDEST PUSH32 0xCE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09 PUSH2 0x72F DUP2 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1E8E1E13 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x140C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7AA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CE SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH2 0x80D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x804 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9055E6953596A4BEC3EE94FE69263DBBB095EBEE41411BC4902A0C4CF0A51A21 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x855 SWAP3 SWAP2 SWAP1 PUSH2 0x152E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8E0 DUP2 PUSH2 0x8DB PUSH2 0x9CC JUMP JUMPDEST PUSH2 0xB32 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x8EE DUP4 DUP4 PUSH2 0x57C JUMP JUMPDEST PUSH2 0x9C2 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x95F PUSH2 0x9CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x9C6 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9DE DUP4 DUP4 PUSH2 0x57C JUMP JUMPDEST ISZERO PUSH2 0xAB2 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xA4F PUSH2 0x9CC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xAB6 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xAF2 PUSH1 0x1 PUSH32 0x0 PUSH2 0xB83 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB2D PUSH1 0x2 PUSH32 0x0 PUSH2 0xB83 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB3C DUP3 DUP3 PUSH2 0x57C JUMP JUMPDEST PUSH2 0xB7F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB76 SWAP3 SWAP2 SWAP1 PUSH2 0x1550 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0xB9F JUMPI PUSH2 0xB98 DUP4 PUSH2 0xC30 JUMP JUMPDEST SWAP1 POP PUSH2 0xC2A JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0xBAB SWAP1 PUSH2 0x15A4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBD7 SWAP1 PUSH2 0x15A4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC22 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBF9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC22 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC05 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xC3C DUP4 PUSH2 0xCA2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC5A JUMPI PUSH2 0xC59 PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC8C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0xCE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD2C DUP2 PUSH2 0xCF8 JUMP JUMPDEST DUP2 EQ PUSH2 0xD36 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD47 DUP2 PUSH2 0xD23 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD62 JUMPI PUSH2 0xD61 PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD6F DUP5 DUP3 DUP6 ADD PUSH2 0xD39 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8C DUP2 PUSH2 0xD78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDA5 PUSH0 DUP4 ADD DUP5 PUSH2 0xD83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDD4 DUP3 PUSH2 0xDAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDE4 DUP2 PUSH2 0xDCA JUMP JUMPDEST DUP2 EQ PUSH2 0xDEE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDFF DUP2 PUSH2 0xDDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1A JUMPI PUSH2 0xE19 PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE27 DUP5 DUP3 DUP6 ADD PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE42 DUP2 PUSH2 0xE30 JUMP JUMPDEST DUP2 EQ PUSH2 0xE4C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE5D DUP2 PUSH2 0xE39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE78 JUMPI PUSH2 0xE77 PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE85 DUP5 DUP3 DUP6 ADD PUSH2 0xE4F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE97 DUP2 PUSH2 0xE30 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB0 PUSH0 DUP4 ADD DUP5 PUSH2 0xE8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xECC JUMPI PUSH2 0xECB PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xED9 DUP6 DUP3 DUP7 ADD PUSH2 0xE4F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEEA DUP6 DUP3 DUP7 ADD PUSH2 0xDF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF17 PUSH2 0xF12 PUSH2 0xF0D DUP5 PUSH2 0xDAB JUMP JUMPDEST PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF28 DUP3 PUSH2 0xEFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF39 DUP3 PUSH2 0xF1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF49 DUP2 PUSH2 0xF2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF62 PUSH0 DUP4 ADD DUP5 PUSH2 0xF40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9C DUP2 PUSH2 0xF68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFE4 DUP3 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xFEE DUP2 DUP6 PUSH2 0xFAC JUMP JUMPDEST SWAP4 POP PUSH2 0xFFE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFBC JUMP JUMPDEST PUSH2 0x1007 DUP2 PUSH2 0xFCA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1024 DUP2 PUSH2 0x1012 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1033 DUP2 PUSH2 0xDCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106B DUP2 PUSH2 0x1012 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x107C DUP4 DUP4 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x109E DUP3 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x10A8 DUP2 DUP6 PUSH2 0x1043 JUMP JUMPDEST SWAP4 POP PUSH2 0x10B3 DUP4 PUSH2 0x1053 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10E3 JUMPI DUP2 MLOAD PUSH2 0x10CA DUP9 DUP3 PUSH2 0x1071 JUMP JUMPDEST SWAP8 POP PUSH2 0x10D5 DUP4 PUSH2 0x1088 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x10B6 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1103 PUSH0 DUP4 ADD DUP11 PUSH2 0xF93 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1115 DUP2 DUP10 PUSH2 0xFDA JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1129 DUP2 DUP9 PUSH2 0xFDA JUMP JUMPDEST SWAP1 POP PUSH2 0x1138 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x1145 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x1152 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0xE8E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1164 DUP2 DUP5 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1193 JUMPI PUSH2 0x1192 PUSH2 0x1172 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B0 JUMPI PUSH2 0x11AF PUSH2 0x1176 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x11CC JUMPI PUSH2 0x11CB PUSH2 0x117A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x11E8 JUMPI PUSH2 0x11E7 PUSH2 0x1172 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1205 JUMPI PUSH2 0x1204 PUSH2 0x1176 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1221 JUMPI PUSH2 0x1220 PUSH2 0x117A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x123D JUMPI PUSH2 0x123C PUSH2 0x1172 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x125A JUMPI PUSH2 0x1259 PUSH2 0x1176 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1276 JUMPI PUSH2 0x1275 PUSH2 0x117A JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1297 JUMPI PUSH2 0x1296 PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST PUSH0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12B4 JUMPI PUSH2 0x12B3 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST PUSH2 0x12C0 DUP10 DUP3 DUP11 ADD PUSH2 0x117E JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12E3 JUMPI PUSH2 0x12E2 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST PUSH2 0x12EF DUP10 DUP3 DUP11 ADD PUSH2 0x11D3 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1312 JUMPI PUSH2 0x1311 PUSH2 0xCF4 JUMP JUMPDEST JUMPDEST PUSH2 0x131E DUP10 DUP3 DUP11 ADD PUSH2 0x1228 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1383 DUP4 DUP6 PUSH2 0x135A JUMP JUMPDEST SWAP4 POP PUSH2 0x1390 DUP4 DUP6 DUP5 PUSH2 0x136A JUMP JUMPDEST PUSH2 0x1399 DUP4 PUSH2 0xFCA JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13BC DUP4 DUP6 PUSH2 0x1043 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x13EF JUMPI PUSH2 0x13EE PUSH2 0x13A4 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0x1400 DUP4 DUP6 DUP5 PUSH2 0x13A8 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1425 DUP2 DUP7 DUP9 PUSH2 0x1378 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x143A DUP2 DUP5 DUP7 PUSH2 0x13B1 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x144E DUP2 PUSH2 0xD78 JUMP JUMPDEST DUP2 EQ PUSH2 0x1458 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1469 DUP2 PUSH2 0x1445 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1484 JUMPI PUSH2 0x1483 PUSH2 0xCF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1491 DUP5 DUP3 DUP6 ADD PUSH2 0x145B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726F6F6647656E65726174696F6E3A20496E76616C69642070726F6F660000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14CE PUSH1 0x1E DUP4 PUSH2 0xFAC JUMP JUMPDEST SWAP2 POP PUSH2 0x14D9 DUP3 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14FB DUP2 PUSH2 0x14C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x150D DUP4 DUP6 PUSH2 0xFAC JUMP JUMPDEST SWAP4 POP PUSH2 0x151A DUP4 DUP6 DUP5 PUSH2 0x136A JUMP JUMPDEST PUSH2 0x1523 DUP4 PUSH2 0xFCA JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1547 DUP2 DUP5 DUP7 PUSH2 0x1502 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1563 PUSH0 DUP4 ADD DUP6 PUSH2 0x102A JUMP JUMPDEST PUSH2 0x1570 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE8E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x15BB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x15CE JUMPI PUSH2 0x15CD PUSH2 0x1577 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 PUSH24 0xA69BE758A4C0671134C42FBE916528414D14BF228CD860B6 0xEF 0xD2 SWAP2 SWAP7 LOG2 JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "897:2259:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2422:132:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1012:60:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1151:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:9;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2698:134:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3028:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2141:143:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1078:66;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1706:281;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2422:132:16:-;2232:4:0;2484:18:16;;2464:16:0;2475:4;2464:10;:16::i;:::-;2514:33:16::1;1118:26;2539:7;2514:9;:33::i;:::-;2422:132:::0;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1012:60:16:-;1049:23;1012:60;:::o;1151:35::-;;;;;;;;;;;;;:::o;5144:557:9:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2187:49::-;2232:4;2187:49;;;:::o;2698:134:16:-;2232:4:0;2761:18:16;;2464:16:0;2475:4;2464:10;:16::i;:::-;2791:34:16::1;1118:26;2817:7;2791:10;:34::i;:::-;2698:134:::0;;:::o;3028:126::-;3093:4;3116:31;1118:26;3139:7;3116;:31::i;:::-;3109:38;;3028:126;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;2141:143:16:-;1049:23;2464:16:0;2475:4;2464:10;:16::i;:::-;2262:14:16::1;2231:13;;:46;;;;;;;;;;;;;;;;;;2141:143:::0;;:::o;1078:66::-;1118:26;1078:66;:::o;1706:281::-;1118:26;2464:16:0;2475:4;2464:10;:16::i;:::-;1854:13:16::1;;;;;;;;;;;:25;;;1880:5;;1887:6;;1854:40;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1846:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1960:10;1945:35;;;1972:7;;1945:35;;;;;;;:::i;:::-;;;;;;;;1706:281:::0;;;;;;;:::o;762:146:12:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;6021:126:9:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;3385:267:5:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;2078:405::-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;2555:245::-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;88:117:17:-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:329::-;2084:6;2133:2;2121:9;2112:7;2108:23;2104:32;2101:119;;;2139:79;;:::i;:::-;2101:119;2259:1;2284:53;2329:7;2320:6;2309:9;2305:22;2284:53;:::i;:::-;2274:63;;2230:117;2025:329;;;;:::o;2360:77::-;2397:7;2426:5;2415:16;;2360:77;;;:::o;2443:122::-;2516:24;2534:5;2516:24;:::i;:::-;2509:5;2506:35;2496:63;;2555:1;2552;2545:12;2496:63;2443:122;:::o;2571:139::-;2617:5;2655:6;2642:20;2633:29;;2671:33;2698:5;2671:33;:::i;:::-;2571:139;;;;:::o;2716:329::-;2775:6;2824:2;2812:9;2803:7;2799:23;2795:32;2792:119;;;2830:79;;:::i;:::-;2792:119;2950:1;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2921:117;2716:329;;;;:::o;3051:118::-;3138:24;3156:5;3138:24;:::i;:::-;3133:3;3126:37;3051:118;;:::o;3175:222::-;3268:4;3306:2;3295:9;3291:18;3283:26;;3319:71;3387:1;3376:9;3372:17;3363:6;3319:71;:::i;:::-;3175:222;;;;:::o;3403:474::-;3471:6;3479;3528:2;3516:9;3507:7;3503:23;3499:32;3496:119;;;3534:79;;:::i;:::-;3496:119;3654:1;3679:53;3724:7;3715:6;3704:9;3700:22;3679:53;:::i;:::-;3669:63;;3625:117;3781:2;3807:53;3852:7;3843:6;3832:9;3828:22;3807:53;:::i;:::-;3797:63;;3752:118;3403:474;;;;;:::o;3883:60::-;3911:3;3932:5;3925:12;;3883:60;;;:::o;3949:142::-;3999:9;4032:53;4050:34;4059:24;4077:5;4059:24;:::i;:::-;4050:34;:::i;:::-;4032:53;:::i;:::-;4019:66;;3949:142;;;:::o;4097:126::-;4147:9;4180:37;4211:5;4180:37;:::i;:::-;4167:50;;4097:126;;;:::o;4229:149::-;4302:9;4335:37;4366:5;4335:37;:::i;:::-;4322:50;;4229:149;;;:::o;4384:177::-;4494:60;4548:5;4494:60;:::i;:::-;4489:3;4482:73;4384:177;;:::o;4567:268::-;4683:4;4721:2;4710:9;4706:18;4698:26;;4734:94;4825:1;4814:9;4810:17;4801:6;4734:94;:::i;:::-;4567:268;;;;:::o;4841:149::-;4877:7;4917:66;4910:5;4906:78;4895:89;;4841:149;;;:::o;4996:115::-;5081:23;5098:5;5081:23;:::i;:::-;5076:3;5069:36;4996:115;;:::o;5117:99::-;5169:6;5203:5;5197:12;5187:22;;5117:99;;;:::o;5222:169::-;5306:11;5340:6;5335:3;5328:19;5380:4;5375:3;5371:14;5356:29;;5222:169;;;;:::o;5397:139::-;5486:6;5481:3;5476;5470:23;5527:1;5518:6;5513:3;5509:16;5502:27;5397:139;;;:::o;5542:102::-;5583:6;5634:2;5630:7;5625:2;5618:5;5614:14;5610:28;5600:38;;5542:102;;;:::o;5650:377::-;5738:3;5766:39;5799:5;5766:39;:::i;:::-;5821:71;5885:6;5880:3;5821:71;:::i;:::-;5814:78;;5901:65;5959:6;5954:3;5947:4;5940:5;5936:16;5901:65;:::i;:::-;5991:29;6013:6;5991:29;:::i;:::-;5986:3;5982:39;5975:46;;5742:285;5650:377;;;;:::o;6033:77::-;6070:7;6099:5;6088:16;;6033:77;;;:::o;6116:118::-;6203:24;6221:5;6203:24;:::i;:::-;6198:3;6191:37;6116:118;;:::o;6240:::-;6327:24;6345:5;6327:24;:::i;:::-;6322:3;6315:37;6240:118;;:::o;6364:114::-;6431:6;6465:5;6459:12;6449:22;;6364:114;;;:::o;6484:184::-;6583:11;6617:6;6612:3;6605:19;6657:4;6652:3;6648:14;6633:29;;6484:184;;;;:::o;6674:132::-;6741:4;6764:3;6756:11;;6794:4;6789:3;6785:14;6777:22;;6674:132;;;:::o;6812:108::-;6889:24;6907:5;6889:24;:::i;:::-;6884:3;6877:37;6812:108;;:::o;6926:179::-;6995:10;7016:46;7058:3;7050:6;7016:46;:::i;:::-;7094:4;7089:3;7085:14;7071:28;;6926:179;;;;:::o;7111:113::-;7181:4;7213;7208:3;7204:14;7196:22;;7111:113;;;:::o;7260:732::-;7379:3;7408:54;7456:5;7408:54;:::i;:::-;7478:86;7557:6;7552:3;7478:86;:::i;:::-;7471:93;;7588:56;7638:5;7588:56;:::i;:::-;7667:7;7698:1;7683:284;7708:6;7705:1;7702:13;7683:284;;;7784:6;7778:13;7811:63;7870:3;7855:13;7811:63;:::i;:::-;7804:70;;7897:60;7950:6;7897:60;:::i;:::-;7887:70;;7743:224;7730:1;7727;7723:9;7718:14;;7683:284;;;7687:14;7983:3;7976:10;;7384:608;;;7260:732;;;;:::o;7998:1215::-;8347:4;8385:3;8374:9;8370:19;8362:27;;8399:69;8465:1;8454:9;8450:17;8441:6;8399:69;:::i;:::-;8515:9;8509:4;8505:20;8500:2;8489:9;8485:18;8478:48;8543:78;8616:4;8607:6;8543:78;:::i;:::-;8535:86;;8668:9;8662:4;8658:20;8653:2;8642:9;8638:18;8631:48;8696:78;8769:4;8760:6;8696:78;:::i;:::-;8688:86;;8784:72;8852:2;8841:9;8837:18;8828:6;8784:72;:::i;:::-;8866:73;8934:3;8923:9;8919:19;8910:6;8866:73;:::i;:::-;8949;9017:3;9006:9;9002:19;8993:6;8949:73;:::i;:::-;9070:9;9064:4;9060:20;9054:3;9043:9;9039:19;9032:49;9098:108;9201:4;9192:6;9098:108;:::i;:::-;9090:116;;7998:1215;;;;;;;;;;:::o;9219:117::-;9328:1;9325;9318:12;9342:117;9451:1;9448;9441:12;9465:117;9574:1;9571;9564:12;9601:552;9658:8;9668:6;9718:3;9711:4;9703:6;9699:17;9695:27;9685:122;;9726:79;;:::i;:::-;9685:122;9839:6;9826:20;9816:30;;9869:18;9861:6;9858:30;9855:117;;;9891:79;;:::i;:::-;9855:117;10005:4;9997:6;9993:17;9981:29;;10059:3;10051:4;10043:6;10039:17;10029:8;10025:32;10022:41;10019:128;;;10066:79;;:::i;:::-;10019:128;9601:552;;;;;:::o;10176:568::-;10249:8;10259:6;10309:3;10302:4;10294:6;10290:17;10286:27;10276:122;;10317:79;;:::i;:::-;10276:122;10430:6;10417:20;10407:30;;10460:18;10452:6;10449:30;10446:117;;;10482:79;;:::i;:::-;10446:117;10596:4;10588:6;10584:17;10572:29;;10650:3;10642:4;10634:6;10630:17;10620:8;10616:32;10613:41;10610:128;;;10657:79;;:::i;:::-;10610:128;10176:568;;;;;:::o;10764:553::-;10822:8;10832:6;10882:3;10875:4;10867:6;10863:17;10859:27;10849:122;;10890:79;;:::i;:::-;10849:122;11003:6;10990:20;10980:30;;11033:18;11025:6;11022:30;11019:117;;;11055:79;;:::i;:::-;11019:117;11169:4;11161:6;11157:17;11145:29;;11223:3;11215:4;11207:6;11203:17;11193:8;11189:32;11186:41;11183:128;;;11230:79;;:::i;:::-;11183:128;10764:553;;;;;:::o;11323:1247::-;11450:6;11458;11466;11474;11482;11490;11539:2;11527:9;11518:7;11514:23;11510:32;11507:119;;;11545:79;;:::i;:::-;11507:119;11693:1;11682:9;11678:17;11665:31;11723:18;11715:6;11712:30;11709:117;;;11745:79;;:::i;:::-;11709:117;11858:64;11914:7;11905:6;11894:9;11890:22;11858:64;:::i;:::-;11840:82;;;;11636:296;11999:2;11988:9;11984:18;11971:32;12030:18;12022:6;12019:30;12016:117;;;12052:79;;:::i;:::-;12016:117;12165:80;12237:7;12228:6;12217:9;12213:22;12165:80;:::i;:::-;12147:98;;;;11942:313;12322:2;12311:9;12307:18;12294:32;12353:18;12345:6;12342:30;12339:117;;;12375:79;;:::i;:::-;12339:117;12488:65;12545:7;12536:6;12525:9;12521:22;12488:65;:::i;:::-;12470:83;;;;12265:298;11323:1247;;;;;;;;:::o;12576:180::-;12624:77;12621:1;12614:88;12721:4;12718:1;12711:15;12745:4;12742:1;12735:15;12762:168;12845:11;12879:6;12874:3;12867:19;12919:4;12914:3;12910:14;12895:29;;12762:168;;;;:::o;12936:148::-;13034:6;13029:3;13024;13011:30;13075:1;13066:6;13061:3;13057:16;13050:27;12936:148;;;:::o;13112:314::-;13208:3;13229:70;13292:6;13287:3;13229:70;:::i;:::-;13222:77;;13309:56;13358:6;13353:3;13346:5;13309:56;:::i;:::-;13390:29;13412:6;13390:29;:::i;:::-;13385:3;13381:39;13374:46;;13112:314;;;;;:::o;13432:117::-;13541:1;13538;13531:12;13555:99;13640:6;13635:3;13630;13617:30;13555:99;;;:::o;13690:537::-;13818:3;13839:86;13918:6;13913:3;13839:86;:::i;:::-;13832:93;;13949:66;13941:6;13938:78;13935:165;;;14019:79;;:::i;:::-;13935:165;14131:4;14123:6;14119:17;14109:27;;14146:43;14182:6;14177:3;14170:5;14146:43;:::i;:::-;14214:6;14209:3;14205:16;14198:23;;13690:537;;;;;:::o;14233:610::-;14442:4;14480:2;14469:9;14465:18;14457:26;;14529:9;14523:4;14519:20;14515:1;14504:9;14500:17;14493:47;14557:86;14638:4;14629:6;14621;14557:86;:::i;:::-;14549:94;;14690:9;14684:4;14680:20;14675:2;14664:9;14660:18;14653:48;14718:118;14831:4;14822:6;14814;14718:118;:::i;:::-;14710:126;;14233:610;;;;;;;:::o;14849:116::-;14919:21;14934:5;14919:21;:::i;:::-;14912:5;14909:32;14899:60;;14955:1;14952;14945:12;14899:60;14849:116;:::o;14971:137::-;15025:5;15056:6;15050:13;15041:22;;15072:30;15096:5;15072:30;:::i;:::-;14971:137;;;;:::o;15114:345::-;15181:6;15230:2;15218:9;15209:7;15205:23;15201:32;15198:119;;;15236:79;;:::i;:::-;15198:119;15356:1;15381:61;15434:7;15425:6;15414:9;15410:22;15381:61;:::i;:::-;15371:71;;15327:125;15114:345;;;;:::o;15465:180::-;15605:32;15601:1;15593:6;15589:14;15582:56;15465:180;:::o;15651:366::-;15793:3;15814:67;15878:2;15873:3;15814:67;:::i;:::-;15807:74;;15890:93;15979:3;15890:93;:::i;:::-;16008:2;16003:3;15999:12;15992:19;;15651:366;;;:::o;16023:419::-;16189:4;16227:2;16216:9;16212:18;16204:26;;16276:9;16270:4;16266:20;16262:1;16251:9;16247:17;16240:47;16304:131;16430:4;16304:131;:::i;:::-;16296:139;;16023:419;;;:::o;16472:317::-;16570:3;16591:71;16655:6;16650:3;16591:71;:::i;:::-;16584:78;;16672:56;16721:6;16716:3;16709:5;16672:56;:::i;:::-;16753:29;16775:6;16753:29;:::i;:::-;16748:3;16744:39;16737:46;;16472:317;;;;;:::o;16795:333::-;16918:4;16956:2;16945:9;16941:18;16933:26;;17005:9;16999:4;16995:20;16991:1;16980:9;16976:17;16969:47;17033:88;17116:4;17107:6;17099;17033:88;:::i;:::-;17025:96;;16795:333;;;;;:::o;17134:332::-;17255:4;17293:2;17282:9;17278:18;17270:26;;17306:71;17374:1;17363:9;17359:17;17350:6;17306:71;:::i;:::-;17387:72;17455:2;17444:9;17440:18;17431:6;17387:72;:::i;:::-;17134:332;;;;;:::o;17472:180::-;17520:77;17517:1;17510:88;17617:4;17614:1;17607:15;17641:4;17638:1;17631:15;17658:320;17702:6;17739:1;17733:4;17729:12;17719:22;;17786:1;17780:4;17776:12;17807:18;17797:81;;17863:4;17855:6;17851:17;17841:27;;17797:81;17925:2;17917:6;17914:14;17894:18;17891:38;17888:84;;17944:18;;:::i;:::-;17888:84;17709:269;17658:320;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1128400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "370",
								"DEFAULT_ADMIN_ROLE()": "375",
								"VERIFIER_ROLE()": "391",
								"eip712Domain()": "infinite",
								"generateProof(bytes,uint256[],string)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"grantVerifierRole(address)": "infinite",
								"hasRole(bytes32,address)": "3145",
								"hasVerifierRole(address)": "3087",
								"proofVerifier()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"revokeVerifierRole(address)": "infinite",
								"setProofVerifier(address)": "infinite",
								"supportsInterface(bytes4)": "741"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "160"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "CODESIZE",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 1258,
									"end": 1474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "tag",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1350,
									"end": 1357,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 3432,
									"end": 3445,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3401,
									"end": 3405,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3401,
									"end": 3431,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3401,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 3401,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "PUSH",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3393,
									"end": 3446,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 3501,
									"end": 3517,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3467,
									"end": 3474,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3467,
									"end": 3500,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3467,
									"end": 3518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 3467,
									"end": 3518,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "PUSH",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3456,
									"end": 3518,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3558,
									"end": 3562,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3542,
									"end": 3564,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3528,
									"end": 3564,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3607,
									"end": 3614,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3591,
									"end": 3616,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3574,
									"end": 3616,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3644,
									"end": 3657,
									"name": "CHAINID",
									"source": 9
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3627,
									"end": 3657,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3713,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3692,
									"end": 3715,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 3692,
									"end": 3715,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3667,
									"end": 3715,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3747,
									"end": 3751,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3725,
									"end": 3752,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3328,
									"end": 3759,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1369,
									"end": 1411,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1398,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1380,
									"end": 1398,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1400,
									"end": 1410,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 16
								},
								{
									"begin": 1369,
									"end": 1379,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 1369,
									"end": 1379,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1369,
									"end": 1379,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1369,
									"end": 1411,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1369,
									"end": 1411,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 1369,
									"end": 1411,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1369,
									"end": 1411,
									"modifierDepth": 1,
									"name": "tag",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 1369,
									"end": 1411,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1369,
									"end": 1411,
									"modifierDepth": 1,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1452,
									"end": 1466,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1434,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 1421,
									"end": 1434,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 1421,
									"end": 1467,
									"modifierDepth": 1,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1258,
									"end": 1474,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3010,
									"end": 3021,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3059,
									"end": 3061,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3043,
									"end": 3048,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3037,
									"end": 3056,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3037,
									"end": 3061,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 3098,
									"end": 3103,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3097,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3084,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 3084,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 3077,
									"end": 3104,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 3033,
									"end": 3248,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3176,
									"end": 3181,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 3161,
									"end": 3166,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3160,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3167,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 3135,
									"end": 3167,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3135,
									"end": 3173,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3135,
									"end": 3181,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3181,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1390,
									"end": 1456,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3219,
									"end": 3236,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3195,
									"end": 3237,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2914,
									"end": 3254,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2914,
									"end": 3254,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4168,
									"end": 4175,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2079,
									"end": 2174,
									"name": "PUSH",
									"source": 9,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 4226,
									"end": 4237,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 4239,
									"end": 4253,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4255,
									"end": 4268,
									"name": "CHAINID",
									"source": 9
								},
								{
									"begin": 4278,
									"end": 4282,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 4204,
									"end": 4284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 4204,
									"end": 4284,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4194,
									"end": 4285,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4187,
									"end": 4285,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4292,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4292,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1773,
									"end": 1784,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1796,
									"end": 1813,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1822,
									"end": 1825,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1796,
									"end": 1826,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1856,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 1840,
									"end": 1844,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1840,
									"end": 1851,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1840,
									"end": 1856,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1893,
									"end": 1896,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 5,
									"value": "305A27A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1879,
									"end": 1897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1879,
									"end": 1897,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1836,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1974,
									"end": 1978,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1974,
									"end": 1985,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1965,
									"end": 1969,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1957,
									"end": 1970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1957,
									"end": 1970,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1949,
									"end": 1971,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1949,
									"end": 1985,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1941,
									"end": 1986,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1917,
									"end": 1987,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1708,
									"end": 1994,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1708,
									"end": 1994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3203,
									"end": 3223,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3311,
									"end": 3321,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3301,
									"end": 3321,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3337,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3135,
									"end": 3337,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 17,
									"value": "50"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "98"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 17,
									"value": "98"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "99"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "50"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 17,
									"value": "99"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 17,
									"value": "52"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "102"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 17,
									"value": "102"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "103"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 17,
									"value": "103"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "105"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "106"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "50"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 17,
									"value": "106"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 17,
									"value": "105"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "107"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 17,
									"value": "107"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 17,
									"value": "54"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 17
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "110"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "111"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 17,
									"value": "111"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "52"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 17,
									"value": "110"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "112"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "113"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 17,
									"value": "113"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 17,
									"value": "112"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "114"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "54"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 17,
									"value": "114"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 17,
									"value": "56"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "116"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "117"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 17,
									"value": "117"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 17,
									"value": "116"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "118"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 17,
									"value": "118"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "tag",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2689,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2645,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2636,
									"end": 2690,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2570,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "tag",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2739,
									"end": 2746,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "121"
								},
								{
									"begin": 2786,
									"end": 2791,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 2768,
									"end": 2792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "tag",
									"source": 17,
									"value": "121"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2702,
									"end": 2798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "tag",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "123"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 2877,
									"end": 2901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "tag",
									"source": 17,
									"value": "123"
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2870,
									"end": 2875,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2867,
									"end": 2902,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "124"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2916,
									"end": 2917,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2913,
									"end": 2914,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2906,
									"end": 2918,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "tag",
									"source": 17,
									"value": "124"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2804,
									"end": 2926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "tag",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2989,
									"end": 2994,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3014,
									"end": 3027,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "126"
								},
								{
									"begin": 3063,
									"end": 3068,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 3036,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "tag",
									"source": 17,
									"value": "126"
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2932,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3189,
									"end": 3195,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 3205,
									"end": 3211,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3254,
									"end": 3256,
									"name": "PUSH",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 3242,
									"end": 3251,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3233,
									"end": 3240,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3229,
									"end": 3252,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 3225,
									"end": 3257,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "128"
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "129"
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 3260,
									"end": 3339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "tag",
									"source": 17,
									"value": "129"
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "tag",
									"source": 17,
									"value": "128"
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3401,
									"end": 3402,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3390,
									"end": 3399,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3386,
									"end": 3403,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3380,
									"end": 3404,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3431,
									"end": 3449,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3423,
									"end": 3429,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3420,
									"end": 3450,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "130"
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "131"
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 3453,
									"end": 3532,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "tag",
									"source": 17,
									"value": "131"
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "tag",
									"source": 17,
									"value": "130"
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "132"
								},
								{
									"begin": 3624,
									"end": 3631,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3615,
									"end": 3621,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3604,
									"end": 3613,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 3600,
									"end": 3622,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "56"
								},
								{
									"begin": 3558,
									"end": 3632,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "tag",
									"source": 17,
									"value": "132"
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3548,
									"end": 3632,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 3548,
									"end": 3632,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3351,
									"end": 3642,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3702,
									"end": 3704,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 3691,
									"end": 3700,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3687,
									"end": 3705,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3681,
									"end": 3706,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3733,
									"end": 3751,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3731,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3722,
									"end": 3752,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "133"
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "134"
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 3755,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "tag",
									"source": 17,
									"value": "134"
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "tag",
									"source": 17,
									"value": "133"
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "135"
								},
								{
									"begin": 3926,
									"end": 3933,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3906,
									"end": 3915,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 3902,
									"end": 3924,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "56"
								},
								{
									"begin": 3860,
									"end": 3934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "tag",
									"source": 17,
									"value": "135"
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3850,
									"end": 3934,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 3850,
									"end": 3934,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3652,
									"end": 3944,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "136"
								},
								{
									"begin": 4065,
									"end": 4072,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 4056,
									"end": 4062,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4045,
									"end": 4054,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 4041,
									"end": 4063,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 4009,
									"end": 4073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "tag",
									"source": 17,
									"value": "136"
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3954,
									"end": 4083,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 3081,
									"end": 4090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "tag",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4148,
									"end": 4154,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4182,
									"end": 4187,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4176,
									"end": 4188,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 4166,
									"end": 4188,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4166,
									"end": 4188,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4096,
									"end": 4195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4201,
									"end": 4381,
									"name": "tag",
									"source": 17,
									"value": "62"
								},
								{
									"begin": 4201,
									"end": 4381,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4249,
									"end": 4326,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4246,
									"end": 4247,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4239,
									"end": 4327,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 4346,
									"end": 4350,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 4343,
									"end": 4344,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 4336,
									"end": 4351,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 4370,
									"end": 4374,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 4367,
									"end": 4368,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4360,
									"end": 4375,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "tag",
									"source": 17,
									"value": "63"
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4431,
									"end": 4437,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4468,
									"end": 4469,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 4462,
									"end": 4466,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4458,
									"end": 4470,
									"name": "DIV",
									"source": 17
								},
								{
									"begin": 4448,
									"end": 4470,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4448,
									"end": 4470,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4515,
									"end": 4516,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 4509,
									"end": 4513,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4505,
									"end": 4517,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 4536,
									"end": 4554,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "140"
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4592,
									"end": 4596,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 4584,
									"end": 4590,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4580,
									"end": 4597,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 4570,
									"end": 4597,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4570,
									"end": 4597,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "tag",
									"source": 17,
									"value": "140"
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4654,
									"end": 4656,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 4646,
									"end": 4652,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4643,
									"end": 4657,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 4623,
									"end": 4641,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4620,
									"end": 4658,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "141"
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "142"
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "62"
								},
								{
									"begin": 4673,
									"end": 4691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "tag",
									"source": 17,
									"value": "142"
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "tag",
									"source": 17,
									"value": "141"
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4438,
									"end": 4707,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4387,
									"end": 4707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "tag",
									"source": 17,
									"value": "64"
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4762,
									"end": 4766,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4785,
									"end": 4788,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4777,
									"end": 4788,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4777,
									"end": 4788,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4808,
									"end": 4811,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4805,
									"end": 4806,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4798,
									"end": 4812,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 4842,
									"end": 4846,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 4839,
									"end": 4840,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4829,
									"end": 4847,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": 4821,
									"end": 4847,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4821,
									"end": 4847,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4713,
									"end": 4854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "tag",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4897,
									"end": 4903,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4944,
									"end": 4946,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 4939,
									"end": 4941,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 4932,
									"end": 4937,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4928,
									"end": 4942,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4924,
									"end": 4947,
									"name": "DIV",
									"source": 17
								},
								{
									"begin": 4914,
									"end": 4947,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4914,
									"end": 4947,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4860,
									"end": 4953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "tag",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5003,
									"end": 5011,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5053,
									"end": 5058,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5047,
									"end": 5051,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5043,
									"end": 5059,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 5022,
									"end": 5059,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5022,
									"end": 5059,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4959,
									"end": 5066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "tag",
									"source": 17,
									"value": "67"
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5141,
									"end": 5147,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5191,
									"end": 5192,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 5179,
									"end": 5189,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 5175,
									"end": 5193,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "147"
								},
								{
									"begin": 5244,
									"end": 5310,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5233,
									"end": 5242,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 5214,
									"end": 5311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "tag",
									"source": 17,
									"value": "147"
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "148"
								},
								{
									"begin": 5362,
									"end": 5370,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 5351,
									"end": 5360,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 5332,
									"end": 5371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "tag",
									"source": 17,
									"value": "148"
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5320,
									"end": 5371,
									"name": "SWAP6",
									"source": 17
								},
								{
									"begin": 5320,
									"end": 5371,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5404,
									"end": 5408,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 5400,
									"end": 5409,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 5393,
									"end": 5398,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5389,
									"end": 5410,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 5380,
									"end": 5410,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 5380,
									"end": 5410,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5453,
									"end": 5457,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 5443,
									"end": 5451,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 5439,
									"end": 5458,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 5432,
									"end": 5437,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5429,
									"end": 5459,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 5419,
									"end": 5459,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 5419,
									"end": 5459,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5148,
									"end": 5465,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5148,
									"end": 5465,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5072,
									"end": 5465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "tag",
									"source": 17,
									"value": "68"
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5508,
									"end": 5515,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5537,
									"end": 5542,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5526,
									"end": 5542,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5526,
									"end": 5542,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5471,
									"end": 5548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "tag",
									"source": 17,
									"value": "69"
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5582,
									"end": 5585,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5603,
									"end": 5608,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5596,
									"end": 5608,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5596,
									"end": 5608,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5554,
									"end": 5614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "tag",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5670,
									"end": 5679,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "152"
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "153"
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "154"
								},
								{
									"begin": 5748,
									"end": 5753,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "68"
								},
								{
									"begin": 5730,
									"end": 5754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "tag",
									"source": 17,
									"value": "154"
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "69"
								},
								{
									"begin": 5721,
									"end": 5755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "tag",
									"source": 17,
									"value": "153"
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "68"
								},
								{
									"begin": 5703,
									"end": 5756,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "tag",
									"source": 17,
									"value": "152"
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5690,
									"end": 5756,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5690,
									"end": 5756,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5620,
									"end": 5762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "tag",
									"source": 17,
									"value": "71"
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5811,
									"end": 5814,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5832,
									"end": 5837,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5825,
									"end": 5837,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5825,
									"end": 5837,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5768,
									"end": 5843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "tag",
									"source": 17,
									"value": "72"
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "157"
								},
								{
									"begin": 5990,
									"end": 5997,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 5959,
									"end": 5998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "tag",
									"source": 17,
									"value": "157"
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "158"
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "159"
								},
								{
									"begin": 6093,
									"end": 6109,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "71"
								},
								{
									"begin": 6069,
									"end": 6110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "tag",
									"source": 17,
									"value": "159"
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6061,
									"end": 6067,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6054,
									"end": 6058,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6048,
									"end": 6059,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "67"
								},
								{
									"begin": 6020,
									"end": 6111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "tag",
									"source": 17,
									"value": "158"
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6014,
									"end": 6018,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6007,
									"end": 6112,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 5925,
									"end": 6118,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5849,
									"end": 6118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "tag",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6169,
									"end": 6172,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 6124,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "tag",
									"source": 17,
									"value": "74"
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "162"
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 6280,
									"end": 6312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "tag",
									"source": 17,
									"value": "162"
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "163"
								},
								{
									"begin": 6379,
									"end": 6385,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6371,
									"end": 6377,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6365,
									"end": 6369,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "72"
								},
								{
									"begin": 6321,
									"end": 6386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "tag",
									"source": 17,
									"value": "163"
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6256,
									"end": 6392,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6203,
									"end": 6392,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "tag",
									"source": 17,
									"value": "75"
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "tag",
									"source": 17,
									"value": "165"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6475,
									"end": 6478,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6468,
									"end": 6473,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6465,
									"end": 6479,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "167"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "168"
								},
								{
									"begin": 6566,
									"end": 6567,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 6559,
									"end": 6564,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "74"
								},
								{
									"begin": 6529,
									"end": 6568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "tag",
									"source": 17,
									"value": "168"
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6502,
									"end": 6503,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 6495,
									"end": 6500,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6491,
									"end": 6504,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6482,
									"end": 6504,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 6482,
									"end": 6504,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "165"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "tag",
									"source": 17,
									"value": "167"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6398,
									"end": 6584,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "tag",
									"source": 17,
									"value": "76"
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6691,
									"end": 6693,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 6686,
									"end": 6689,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 6683,
									"end": 6694,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "170"
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "171"
								},
								{
									"begin": 6757,
									"end": 6762,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "64"
								},
								{
									"begin": 6725,
									"end": 6763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "tag",
									"source": 17,
									"value": "171"
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "172"
								},
								{
									"begin": 6827,
									"end": 6837,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 6809,
									"end": 6838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "tag",
									"source": 17,
									"value": "172"
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6799,
									"end": 6807,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6795,
									"end": 6839,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 6992,
									"end": 6994,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 6980,
									"end": 6990,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 6977,
									"end": 6995,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "173"
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 7013,
									"end": 7021,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 6998,
									"end": 7021,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 6998,
									"end": 7021,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "tag",
									"source": 17,
									"value": "173"
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "174"
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "175"
								},
								{
									"begin": 7110,
									"end": 7113,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 7092,
									"end": 7114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "tag",
									"source": 17,
									"value": "175"
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7082,
									"end": 7090,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 7078,
									"end": 7115,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 7065,
									"end": 7076,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "75"
								},
								{
									"begin": 7036,
									"end": 7116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "tag",
									"source": 17,
									"value": "174"
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6695,
									"end": 7126,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6695,
									"end": 7126,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "tag",
									"source": 17,
									"value": "170"
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 6590,
									"end": 7133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "tag",
									"source": 17,
									"value": "77"
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7193,
									"end": 7201,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 7243,
									"end": 7248,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 7237,
									"end": 7241,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 7233,
									"end": 7249,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 7212,
									"end": 7249,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 7212,
									"end": 7249,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7139,
									"end": 7256,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "tag",
									"source": 17,
									"value": "78"
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7306,
									"end": 7312,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "178"
								},
								{
									"begin": 7387,
									"end": 7388,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 7383,
									"end": 7389,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 7375,
									"end": 7380,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 7372,
									"end": 7373,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 7368,
									"end": 7381,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "77"
								},
								{
									"begin": 7339,
									"end": 7390,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "tag",
									"source": 17,
									"value": "178"
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7335,
									"end": 7391,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 7420,
									"end": 7424,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 7414,
									"end": 7418,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 7410,
									"end": 7425,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 7400,
									"end": 7425,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 7400,
									"end": 7425,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7313,
									"end": 7431,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7262,
									"end": 7431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "tag",
									"source": 17,
									"value": "79"
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7512,
									"end": 7516,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "180"
								},
								{
									"begin": 7683,
									"end": 7686,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 7677,
									"end": 7681,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "78"
								},
								{
									"begin": 7658,
									"end": 7687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "tag",
									"source": 17,
									"value": "180"
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7650,
									"end": 7687,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 7650,
									"end": 7687,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7720,
									"end": 7723,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 7717,
									"end": 7718,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 7713,
									"end": 7724,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 7707,
									"end": 7711,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 7704,
									"end": 7725,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 7696,
									"end": 7725,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 7696,
									"end": 7725,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7436,
									"end": 7731,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "tag",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "182"
								},
								{
									"begin": 7886,
									"end": 7889,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 7853,
									"end": 7890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "tag",
									"source": 17,
									"value": "182"
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7955,
									"end": 7973,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7947,
									"end": 7953,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 7944,
									"end": 7974,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "183"
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "184"
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "50"
								},
								{
									"begin": 7977,
									"end": 7995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "tag",
									"source": 17,
									"value": "184"
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "tag",
									"source": 17,
									"value": "183"
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "185"
								},
								{
									"begin": 8053,
									"end": 8057,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8047,
									"end": 8058,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "63"
								},
								{
									"begin": 8021,
									"end": 8059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "tag",
									"source": 17,
									"value": "185"
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "186"
								},
								{
									"begin": 8166,
									"end": 8172,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8158,
									"end": 8164,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "76"
								},
								{
									"begin": 8106,
									"end": 8173,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "tag",
									"source": 17,
									"value": "186"
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8200,
									"end": 8201,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 8224,
									"end": 8228,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 8211,
									"end": 8228,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 8211,
									"end": 8228,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8256,
									"end": 8258,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 8248,
									"end": 8254,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 8245,
									"end": 8259,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 8273,
									"end": 8274,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "188"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 8930,
									"end": 8931,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 8947,
									"end": 8953,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "189"
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 8996,
									"end": 9005,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8991,
									"end": 8994,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 8987,
									"end": 9006,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8981,
									"end": 9007,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 8972,
									"end": 9007,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 8972,
									"end": 9007,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "tag",
									"source": 17,
									"value": "189"
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "190"
								},
								{
									"begin": 9107,
									"end": 9113,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 9100,
									"end": 9105,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "79"
								},
								{
									"begin": 9047,
									"end": 9114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "tag",
									"source": 17,
									"value": "190"
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9041,
									"end": 9045,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 9034,
									"end": 9115,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 8903,
									"end": 9125,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "187"
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "tag",
									"source": 17,
									"value": "188"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8320,
									"end": 8324,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 8316,
									"end": 8325,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 8308,
									"end": 8314,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 8304,
									"end": 8326,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "191"
								},
								{
									"begin": 8386,
									"end": 8390,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "64"
								},
								{
									"begin": 8354,
									"end": 8391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "tag",
									"source": 17,
									"value": "191"
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8413,
									"end": 8414,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "tag",
									"source": 17,
									"value": "192"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8441,
									"end": 8448,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8438,
									"end": 8439,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 8435,
									"end": 8449,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "194"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 8520,
									"end": 8529,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 8515,
									"end": 8518,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 8511,
									"end": 8530,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8505,
									"end": 8531,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 8497,
									"end": 8503,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8490,
									"end": 8532,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 8571,
									"end": 8572,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 8563,
									"end": 8569,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8559,
									"end": 8573,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8549,
									"end": 8573,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 8549,
									"end": 8573,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8618,
									"end": 8620,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 8607,
									"end": 8616,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 8603,
									"end": 8621,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8590,
									"end": 8621,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 8590,
									"end": 8621,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8464,
									"end": 8468,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 8461,
									"end": 8462,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 8457,
									"end": 8469,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8452,
									"end": 8469,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 8452,
									"end": 8469,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "192"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "tag",
									"source": 17,
									"value": "194"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8663,
									"end": 8669,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 8654,
									"end": 8661,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 8651,
									"end": 8670,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "195"
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 8721,
									"end": 8730,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 8716,
									"end": 8719,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 8712,
									"end": 8731,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8706,
									"end": 8732,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "196"
								},
								{
									"begin": 8806,
									"end": 8810,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 8798,
									"end": 8804,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 8794,
									"end": 8811,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 8783,
									"end": 8792,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "78"
								},
								{
									"begin": 8764,
									"end": 8812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "tag",
									"source": 17,
									"value": "196"
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8756,
									"end": 8762,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 8749,
									"end": 8813,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 8671,
									"end": 8827,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "tag",
									"source": 17,
									"value": "195"
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8873,
									"end": 8874,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 8869,
									"end": 8870,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 8861,
									"end": 8867,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 8857,
									"end": 8871,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 8853,
									"end": 8875,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8847,
									"end": 8851,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 8840,
									"end": 8876,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "tag",
									"source": 17,
									"value": "187"
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7736,
									"end": 9131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "tag",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9174,
									"end": 9181,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 9203,
									"end": 9208,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 9192,
									"end": 9208,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 9192,
									"end": 9208,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 9137,
									"end": 9214,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9137,
									"end": 9214,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9220,
									"end": 9338,
									"name": "tag",
									"source": 17,
									"value": "81"
								},
								{
									"begin": 9220,
									"end": 9338,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9307,
									"end": 9331,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "199"
								},
								{
									"begin": 9325,
									"end": 9330,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 9307,
									"end": 9331,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 9307,
									"end": 9331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9307,
									"end": 9331,
									"name": "tag",
									"source": 17,
									"value": "199"
								},
								{
									"begin": 9307,
									"end": 9331,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9302,
									"end": 9305,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 9295,
									"end": 9332,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 9220,
									"end": 9338,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9220,
									"end": 9338,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9220,
									"end": 9338,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9344,
									"end": 9462,
									"name": "tag",
									"source": 17,
									"value": "82"
								},
								{
									"begin": 9344,
									"end": 9462,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9431,
									"end": 9455,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "201"
								},
								{
									"begin": 9449,
									"end": 9454,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 9431,
									"end": 9455,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "68"
								},
								{
									"begin": 9431,
									"end": 9455,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9431,
									"end": 9455,
									"name": "tag",
									"source": 17,
									"value": "201"
								},
								{
									"begin": 9431,
									"end": 9455,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9426,
									"end": 9429,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 9419,
									"end": 9456,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 9344,
									"end": 9462,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9344,
									"end": 9462,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9344,
									"end": 9462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9468,
									"end": 9586,
									"name": "tag",
									"source": 17,
									"value": "83"
								},
								{
									"begin": 9468,
									"end": 9586,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9555,
									"end": 9579,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "203"
								},
								{
									"begin": 9573,
									"end": 9578,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 9555,
									"end": 9579,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 9555,
									"end": 9579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9555,
									"end": 9579,
									"name": "tag",
									"source": 17,
									"value": "203"
								},
								{
									"begin": 9555,
									"end": 9579,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9550,
									"end": 9553,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 9543,
									"end": 9580,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 9468,
									"end": 9586,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9468,
									"end": 9586,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9468,
									"end": 9586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9592,
									"end": 10256,
									"name": "tag",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 9592,
									"end": 10256,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9797,
									"end": 9801,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 9835,
									"end": 9838,
									"name": "PUSH",
									"source": 17,
									"value": "A0"
								},
								{
									"begin": 9824,
									"end": 9833,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 9820,
									"end": 9839,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 9812,
									"end": 9839,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 9812,
									"end": 9839,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9849,
									"end": 9920,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "205"
								},
								{
									"begin": 9917,
									"end": 9918,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 9906,
									"end": 9915,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 9902,
									"end": 9919,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 9893,
									"end": 9899,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 9849,
									"end": 9920,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "81"
								},
								{
									"begin": 9849,
									"end": 9920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9849,
									"end": 9920,
									"name": "tag",
									"source": 17,
									"value": "205"
								},
								{
									"begin": 9849,
									"end": 9920,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9930,
									"end": 10002,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "206"
								},
								{
									"begin": 9998,
									"end": 10000,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 9987,
									"end": 9996,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 9983,
									"end": 10001,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 9974,
									"end": 9980,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 9930,
									"end": 10002,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "81"
								},
								{
									"begin": 9930,
									"end": 10002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 9930,
									"end": 10002,
									"name": "tag",
									"source": 17,
									"value": "206"
								},
								{
									"begin": 9930,
									"end": 10002,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 10012,
									"end": 10084,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "207"
								},
								{
									"begin": 10080,
									"end": 10082,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 10069,
									"end": 10078,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 10065,
									"end": 10083,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 10056,
									"end": 10062,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 10012,
									"end": 10084,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "81"
								},
								{
									"begin": 10012,
									"end": 10084,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 10012,
									"end": 10084,
									"name": "tag",
									"source": 17,
									"value": "207"
								},
								{
									"begin": 10012,
									"end": 10084,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 10094,
									"end": 10166,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "208"
								},
								{
									"begin": 10162,
									"end": 10164,
									"name": "PUSH",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 10151,
									"end": 10160,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 10147,
									"end": 10165,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 10138,
									"end": 10144,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 10094,
									"end": 10166,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "82"
								},
								{
									"begin": 10094,
									"end": 10166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 10094,
									"end": 10166,
									"name": "tag",
									"source": 17,
									"value": "208"
								},
								{
									"begin": 10094,
									"end": 10166,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 10176,
									"end": 10249,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "209"
								},
								{
									"begin": 10244,
									"end": 10247,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 10233,
									"end": 10242,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 10229,
									"end": 10248,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 10220,
									"end": 10226,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 10176,
									"end": 10249,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "83"
								},
								{
									"begin": 10176,
									"end": 10249,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 10176,
									"end": 10249,
									"name": "tag",
									"source": 17,
									"value": "209"
								},
								{
									"begin": 10176,
									"end": 10249,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 9592,
									"end": 10256,
									"name": "SWAP7",
									"source": 17
								},
								{
									"begin": 9592,
									"end": 10256,
									"name": "SWAP6",
									"source": 17
								},
								{
									"begin": 9592,
									"end": 10256,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9592,
									"end": 10256,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9592,
									"end": 10256,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9592,
									"end": 10256,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9592,
									"end": 10256,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9592,
									"end": 10256,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 9592,
									"end": 10256,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 10262,
									"end": 10431,
									"name": "tag",
									"source": 17,
									"value": "84"
								},
								{
									"begin": 10262,
									"end": 10431,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 10346,
									"end": 10357,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 10380,
									"end": 10386,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 10375,
									"end": 10378,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 10368,
									"end": 10387,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 10420,
									"end": 10424,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 10415,
									"end": 10418,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 10411,
									"end": 10425,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 10396,
									"end": 10425,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 10396,
									"end": 10425,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 10262,
									"end": 10431,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 10262,
									"end": 10431,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 10262,
									"end": 10431,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 10262,
									"end": 10431,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 10262,
									"end": 10431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 10437,
									"end": 10814,
									"name": "tag",
									"source": 17,
									"value": "85"
								},
								{
									"begin": 10437,
									"end": 10814,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 10525,
									"end": 10528,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "212"
								},
								{
									"begin": 10586,
									"end": 10591,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 10553,
									"end": 10592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "tag",
									"source": 17,
									"value": "212"
								},
								{
									"begin": 10553,
									"end": 10592,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 10608,
									"end": 10679,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "213"
								},
								{
									"begin": 10672,
									"end": 10678,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 10667,
									"end": 10670,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 10608,
									"end": 10679,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "84"
								},
								{
									"begin": 10608,
									"end": 10679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 10608,
									"end": 10679,
									"name": "tag",
									"source": 17,
									"value": "213"
								},
								{
									"begin": 10608,
									"end": 10679,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 10601,
									"end": 10679,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 10601,
									"end": 10679,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 10688,
									"end": 10753,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "214"
								},
								{
									"begin": 10746,
									"end": 10752,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 10741,
									"end": 10744,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 10734,
									"end": 10738,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 10727,
									"end": 10732,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 10723,
									"end": 10739,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 10688,
									"end": 10753,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "54"
								},
								{
									"begin": 10688,
									"end": 10753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 10688,
									"end": 10753,
									"name": "tag",
									"source": 17,
									"value": "214"
								},
								{
									"begin": 10688,
									"end": 10753,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 10778,
									"end": 10807,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "215"
								},
								{
									"begin": 10800,
									"end": 10806,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 10778,
									"end": 10807,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 10778,
									"end": 10807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 10778,
									"end": 10807,
									"name": "tag",
									"source": 17,
									"value": "215"
								},
								{
									"begin": 10778,
									"end": 10807,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 10773,
									"end": 10776,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 10769,
									"end": 10808,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 10762,
									"end": 10808,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 10762,
									"end": 10808,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 10529,
									"end": 10814,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 10437,
									"end": 10814,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 10437,
									"end": 10814,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 10437,
									"end": 10814,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 10437,
									"end": 10814,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 10437,
									"end": 10814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 10820,
									"end": 11133,
									"name": "tag",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 10820,
									"end": 11133,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 10933,
									"end": 10937,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 10971,
									"end": 10973,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 10960,
									"end": 10969,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 10956,
									"end": 10974,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 10948,
									"end": 10974,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 10948,
									"end": 10974,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11020,
									"end": 11029,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 11014,
									"end": 11018,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 11010,
									"end": 11030,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 11006,
									"end": 11007,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 10995,
									"end": 11004,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 10991,
									"end": 11008,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 10984,
									"end": 11031,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 11048,
									"end": 11126,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "217"
								},
								{
									"begin": 11121,
									"end": 11125,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 11112,
									"end": 11118,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 11048,
									"end": 11126,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "85"
								},
								{
									"begin": 11048,
									"end": 11126,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 11048,
									"end": 11126,
									"name": "tag",
									"source": 17,
									"value": "217"
								},
								{
									"begin": 11048,
									"end": 11126,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 11040,
									"end": 11126,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 11040,
									"end": 11126,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 10820,
									"end": 11133,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 10820,
									"end": 11133,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 10820,
									"end": 11133,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 10820,
									"end": 11133,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 10820,
									"end": 11133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 11139,
									"end": 11237,
									"name": "tag",
									"source": 17,
									"value": "86"
								},
								{
									"begin": 11139,
									"end": 11237,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 11190,
									"end": 11196,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 11224,
									"end": 11229,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 11218,
									"end": 11230,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 11208,
									"end": 11230,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 11208,
									"end": 11230,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11139,
									"end": 11237,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 11139,
									"end": 11237,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 11139,
									"end": 11237,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11139,
									"end": 11237,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 11243,
									"end": 11359,
									"name": "tag",
									"source": 17,
									"value": "87"
								},
								{
									"begin": 11243,
									"end": 11359,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 11294,
									"end": 11298,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 11317,
									"end": 11320,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 11309,
									"end": 11320,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 11309,
									"end": 11320,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11347,
									"end": 11351,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 11342,
									"end": 11345,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 11338,
									"end": 11352,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 11330,
									"end": 11352,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 11330,
									"end": 11352,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11243,
									"end": 11359,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 11243,
									"end": 11359,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 11243,
									"end": 11359,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11243,
									"end": 11359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 11365,
									"end": 11519,
									"name": "tag",
									"source": 17,
									"value": "88"
								},
								{
									"begin": 11365,
									"end": 11519,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 11408,
									"end": 11419,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 11444,
									"end": 11473,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "221"
								},
								{
									"begin": 11468,
									"end": 11471,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 11462,
									"end": 11472,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 11444,
									"end": 11473,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 11444,
									"end": 11473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 11444,
									"end": 11473,
									"name": "tag",
									"source": 17,
									"value": "221"
								},
								{
									"begin": 11444,
									"end": 11473,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 11507,
									"end": 11512,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 11483,
									"end": 11512,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 11483,
									"end": 11512,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11420,
									"end": 11519,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11365,
									"end": 11519,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 11365,
									"end": 11519,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 11365,
									"end": 11519,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11365,
									"end": 11519,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 11525,
									"end": 12119,
									"name": "tag",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 11525,
									"end": 12119,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 11609,
									"end": 11614,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 11640,
									"end": 11678,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "223"
								},
								{
									"begin": 11672,
									"end": 11677,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 11640,
									"end": 11678,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "86"
								},
								{
									"begin": 11640,
									"end": 11678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 11640,
									"end": 11678,
									"name": "tag",
									"source": 17,
									"value": "223"
								},
								{
									"begin": 11640,
									"end": 11678,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 11703,
									"end": 11708,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 11730,
									"end": 11770,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "224"
								},
								{
									"begin": 11764,
									"end": 11769,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 11730,
									"end": 11770,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "87"
								},
								{
									"begin": 11730,
									"end": 11770,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 11730,
									"end": 11770,
									"name": "tag",
									"source": 17,
									"value": "224"
								},
								{
									"begin": 11730,
									"end": 11770,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 11718,
									"end": 11770,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 11718,
									"end": 11770,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11789,
									"end": 11824,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "225"
								},
								{
									"begin": 11815,
									"end": 11823,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 11789,
									"end": 11824,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "88"
								},
								{
									"begin": 11789,
									"end": 11824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 11789,
									"end": 11824,
									"name": "tag",
									"source": 17,
									"value": "225"
								},
								{
									"begin": 11789,
									"end": 11824,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 11780,
									"end": 11824,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 11780,
									"end": 11824,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11848,
									"end": 11850,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 11840,
									"end": 11846,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 11837,
									"end": 11851,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 11834,
									"end": 12112,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 11834,
									"end": 12112,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "226"
								},
								{
									"begin": 11834,
									"end": 12112,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 11919,
									"end": 12088,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "227"
								},
								{
									"begin": 12004,
									"end": 12070,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11974,
									"end": 11980,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 11970,
									"end": 11972,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 11966,
									"end": 11981,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 11963,
									"end": 11964,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 11959,
									"end": 11982,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 11919,
									"end": 12088,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 11919,
									"end": 12088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 11919,
									"end": 12088,
									"name": "tag",
									"source": 17,
									"value": "227"
								},
								{
									"begin": 11919,
									"end": 12088,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 11896,
									"end": 11901,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 11875,
									"end": 12102,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 11866,
									"end": 12102,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 11866,
									"end": 12102,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11834,
									"end": 12112,
									"name": "tag",
									"source": 17,
									"value": "226"
								},
								{
									"begin": 11834,
									"end": 12112,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 11615,
									"end": 12119,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11615,
									"end": 12119,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11525,
									"end": 12119,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 11525,
									"end": 12119,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 11525,
									"end": 12119,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 11525,
									"end": 12119,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "tag",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "A0"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "C0"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "E0"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "100"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "120"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "140"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "ASSIGNIMMUTABLE",
									"source": 16,
									"value": "1412"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "ASSIGNIMMUTABLE",
									"source": 16,
									"value": "1409"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "ASSIGNIMMUTABLE",
									"source": 16,
									"value": "1406"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "ASSIGNIMMUTABLE",
									"source": 16,
									"value": "1404"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "ASSIGNIMMUTABLE",
									"source": 16,
									"value": "1402"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "ASSIGNIMMUTABLE",
									"source": 16,
									"value": "1400"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "ASSIGNIMMUTABLE",
									"source": 16,
									"value": "1398"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 897,
									"end": 3156,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208677a69be758a4c0671134c42fbe916528414d14bf228cd860b6efd29196a25b64736f6c634300081a0033",
									".code": [
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "91D14854"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "D547741F"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "D547741F"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "DF6244DB"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "E7705DB6"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "F736C365"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "tag",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "91D14854"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "A217FDDF"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "A3669AEF"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "A865E5FE"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "36568ABE"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "36568ABE"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "75B238FC"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "7FA417B3"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "84B0196E"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "1FFC9A7"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "337C061"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "248A9CA3"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "2F2FF15D"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 897,
											"end": 3156,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "tag",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 2422,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "tag",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 2422,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "tag",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "tag",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 1012,
											"end": 1072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "tag",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 1012,
											"end": 1072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "tag",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 1151,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "tag",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "51"
										},
										{
											"begin": 1151,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "tag",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "tag",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 2698,
											"end": 2832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "tag",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 2698,
											"end": 2832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "tag",
											"source": 16,
											"value": "63"
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "tag",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 3028,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 3028,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "tag",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 3028,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "tag",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "tag",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 2141,
											"end": 2284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "tag",
											"source": 16,
											"value": "74"
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "75"
										},
										{
											"begin": 2141,
											"end": 2284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "tag",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "tag",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 1078,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "tag",
											"source": 16,
											"value": "76"
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 1078,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "tag",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "tag",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 1706,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "tag",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 1706,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "tag",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "tag",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2514,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "91"
										},
										{
											"begin": 1118,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "CE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09"
										},
										{
											"begin": 2539,
											"end": 2546,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2514,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 2514,
											"end": 2547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2514,
											"end": 2547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "91"
										},
										{
											"begin": 2514,
											"end": 2547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2422,
											"end": 2554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "tag",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1049,
											"end": 1072,
											"name": "PUSH",
											"source": 16,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 1012,
											"end": 1072,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1012,
											"end": 1072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "tag",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5255,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5301,
											"end": 5322,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5351,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5390,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5416,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5457,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 5533,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 5533,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 5533,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 5560,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 5560,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "CHAINID",
											"source": 9
										},
										{
											"begin": 5625,
											"end": 5629,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5644,
											"end": 5654,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 5668,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "PUSH",
											"source": 9,
											"value": "F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5482,
											"end": 5694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 5144,
											"end": 5701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "tag",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2761,
											"end": 2779,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "118"
										},
										{
											"begin": 1118,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "CE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09"
										},
										{
											"begin": 2817,
											"end": 2824,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2791,
											"end": 2801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "72"
										},
										{
											"begin": 2791,
											"end": 2825,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2791,
											"end": 2825,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "118"
										},
										{
											"begin": 2791,
											"end": 2825,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "tag",
											"source": 16,
											"value": "68"
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3093,
											"end": 3097,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "CE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09"
										},
										{
											"begin": 3139,
											"end": 3146,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3116,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 3116,
											"end": 3147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3116,
											"end": 3147,
											"name": "tag",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 3116,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3147,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3109,
											"end": 3147,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3028,
											"end": 3154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "tag",
											"source": 16,
											"value": "75"
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1049,
											"end": 1072,
											"name": "PUSH",
											"source": 16,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 2231,
											"end": 2244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 2231,
											"end": 2277,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2141,
											"end": 2284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "CE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09"
										},
										{
											"begin": 1078,
											"end": 1144,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1078,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "tag",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1118,
											"end": 1144,
											"name": "PUSH",
											"source": 16,
											"value": "CE23C3E399818CFEE81A7AB0880F714E53D7672B08DF0FA62F2843416E1EA09"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 1854,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1867,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 1854,
											"end": 1867,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1867,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1867,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1867,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1879,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1E8E1E13"
										},
										{
											"begin": 1880,
											"end": 1885,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 1880,
											"end": 1885,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 1887,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 1887,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 1854,
											"end": 1894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "135"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1894,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "135"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "137"
										},
										{
											"begin": 1854,
											"end": 1894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 1854,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "140"
										},
										{
											"begin": 1846,
											"end": 1929,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 1846,
											"end": 1929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 1970,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "9055E6953596A4BEC3EE94FE69263DBBB095EBEE41411BC4902A0C4CF0A51A21"
										},
										{
											"begin": 1972,
											"end": 1979,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1972,
											"end": 1979,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "141"
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 1945,
											"end": 1980,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "141"
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1945,
											"end": 1980,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1706,
											"end": 1987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6067,
											"end": 6080,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 6126,
											"end": 6139,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1409"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6099,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 6099,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6092,
											"end": 6140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6522,
											"end": 6535,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6584,
											"end": 6600,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6554,
											"end": 6562,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1412"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 6554,
											"end": 6583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6554,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6554,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6547,
											"end": 6601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6473,
											"end": 6608,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6473,
											"end": 6608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3492,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1390,
											"end": 1456,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3532,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 3554,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3586,
											"end": 3591,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3577,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3577,
											"end": 3592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3504,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3623,
											"end": 3635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3385,
											"end": 3652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2137,
											"end": 2150,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2162,
											"end": 2173,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2176,
											"end": 2192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2176,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2297,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2300,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2314,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2402,
											"end": 2405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2442,
											"end": 2446,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2430,
											"end": 2433,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2447,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2476,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2623,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2649,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2679,
											"end": 2683,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2685,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2692,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2717,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 5,
											"value": "B3512B0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2702,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2787,
											"end": 2793,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 17,
											"value": "190"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "256"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 17,
											"value": "256"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "195"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 2139,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "tag",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "tag",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 2284,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "tag",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2230,
											"end": 2347,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2025,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "tag",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2431,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2415,
											"end": 2431,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2360,
											"end": 2437,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2360,
											"end": 2437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "tag",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 2534,
											"end": 2539,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 2516,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "tag",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 2516,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2555,
											"end": 2556,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2545,
											"end": 2557,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "tag",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 2496,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2443,
											"end": 2565,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2443,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "tag",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2617,
											"end": 2622,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2642,
											"end": 2662,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2633,
											"end": 2662,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2633,
											"end": 2662,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 2698,
											"end": 2703,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 2671,
											"end": 2704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "tag",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 2671,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 2710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2571,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2775,
											"end": 2781,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2812,
											"end": 2821,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2803,
											"end": 2810,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2799,
											"end": 2822,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2795,
											"end": 2827,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 2830,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "tag",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "tag",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2950,
											"end": 2951,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 3020,
											"end": 3027,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2996,
											"end": 3018,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 2975,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "tag",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2921,
											"end": 3038,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3169,
											"name": "tag",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 3051,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3138,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 3156,
											"end": 3161,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3138,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 3138,
											"end": 3162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3138,
											"end": 3162,
											"name": "tag",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 3138,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3133,
											"end": 3136,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3126,
											"end": 3163,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3169,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3169,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3051,
											"end": 3169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3175,
											"end": 3397,
											"name": "tag",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 3175,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3268,
											"end": 3272,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3308,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3295,
											"end": 3304,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3291,
											"end": 3309,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3283,
											"end": 3309,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3283,
											"end": 3309,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3319,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 3387,
											"end": 3388,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3372,
											"end": 3389,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3363,
											"end": 3369,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3319,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 3319,
											"end": 3390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3319,
											"end": 3390,
											"name": "tag",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 3319,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3175,
											"end": 3397,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3175,
											"end": 3397,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3175,
											"end": 3397,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3175,
											"end": 3397,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3175,
											"end": 3397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3403,
											"end": 3877,
											"name": "tag",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3403,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3471,
											"end": 3477,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3528,
											"end": 3530,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3516,
											"end": 3525,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3507,
											"end": 3514,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3503,
											"end": 3526,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3499,
											"end": 3531,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3615,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 3496,
											"end": 3615,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3534,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 3534,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 3534,
											"end": 3613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3534,
											"end": 3613,
											"name": "tag",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 3534,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3615,
											"name": "tag",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 3496,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3654,
											"end": 3655,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "292"
										},
										{
											"begin": 3724,
											"end": 3731,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3715,
											"end": 3721,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3704,
											"end": 3713,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3700,
											"end": 3722,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3679,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 3679,
											"end": 3732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3679,
											"end": 3732,
											"name": "tag",
											"source": 17,
											"value": "292"
										},
										{
											"begin": 3679,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3669,
											"end": 3732,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3669,
											"end": 3732,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3625,
											"end": 3742,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3781,
											"end": 3783,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 3852,
											"end": 3859,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3828,
											"end": 3850,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 3807,
											"end": 3860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "tag",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3752,
											"end": 3870,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3403,
											"end": 3877,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3403,
											"end": 3877,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3403,
											"end": 3877,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3403,
											"end": 3877,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3403,
											"end": 3877,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3403,
											"end": 3877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3883,
											"end": 3943,
											"name": "tag",
											"source": 17,
											"value": "204"
										},
										{
											"begin": 3883,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3911,
											"end": 3914,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 3937,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3925,
											"end": 3937,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3925,
											"end": 3937,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3883,
											"end": 3943,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3883,
											"end": 3943,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3883,
											"end": 3943,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3883,
											"end": 3943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3949,
											"end": 4091,
											"name": "tag",
											"source": 17,
											"value": "205"
										},
										{
											"begin": 3949,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 4059,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 4077,
											"end": 4082,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4059,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 4059,
											"end": 4083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4059,
											"end": 4083,
											"name": "tag",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 4059,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "204"
										},
										{
											"begin": 4050,
											"end": 4084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "tag",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 4050,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4032,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "196"
										},
										{
											"begin": 4032,
											"end": 4085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4032,
											"end": 4085,
											"name": "tag",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 4032,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4019,
											"end": 4085,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4019,
											"end": 4085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3949,
											"end": 4091,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3949,
											"end": 4091,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3949,
											"end": 4091,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3949,
											"end": 4091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4097,
											"end": 4223,
											"name": "tag",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 4097,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4147,
											"end": 4156,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4180,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "205"
										},
										{
											"begin": 4180,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4180,
											"end": 4217,
											"name": "tag",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 4180,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4167,
											"end": 4217,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4167,
											"end": 4217,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4097,
											"end": 4223,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4097,
											"end": 4223,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4097,
											"end": 4223,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4097,
											"end": 4223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4229,
											"end": 4378,
											"name": "tag",
											"source": 17,
											"value": "207"
										},
										{
											"begin": 4229,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4302,
											"end": 4311,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4335,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "302"
										},
										{
											"begin": 4366,
											"end": 4371,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 4335,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4335,
											"end": 4372,
											"name": "tag",
											"source": 17,
											"value": "302"
										},
										{
											"begin": 4335,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4322,
											"end": 4372,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4322,
											"end": 4372,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4229,
											"end": 4378,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4229,
											"end": 4378,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4229,
											"end": 4378,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4229,
											"end": 4378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4384,
											"end": 4561,
											"name": "tag",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 4384,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4494,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 4548,
											"end": 4553,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4494,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "207"
										},
										{
											"begin": 4494,
											"end": 4554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4494,
											"end": 4554,
											"name": "tag",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 4494,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4489,
											"end": 4492,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4482,
											"end": 4555,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4384,
											"end": 4561,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4384,
											"end": 4561,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4384,
											"end": 4561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4567,
											"end": 4835,
											"name": "tag",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 4567,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4683,
											"end": 4687,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4723,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4710,
											"end": 4719,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4706,
											"end": 4724,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4698,
											"end": 4724,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4698,
											"end": 4724,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4734,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 4825,
											"end": 4826,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4814,
											"end": 4823,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4810,
											"end": 4827,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4801,
											"end": 4807,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4734,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 4734,
											"end": 4828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4734,
											"end": 4828,
											"name": "tag",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 4734,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4567,
											"end": 4835,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4567,
											"end": 4835,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4567,
											"end": 4835,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4567,
											"end": 4835,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4567,
											"end": 4835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4841,
											"end": 4990,
											"name": "tag",
											"source": 17,
											"value": "209"
										},
										{
											"begin": 4841,
											"end": 4990,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4877,
											"end": 4884,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4983,
											"name": "PUSH",
											"source": 17,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4910,
											"end": 4915,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4906,
											"end": 4984,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4895,
											"end": 4984,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4895,
											"end": 4984,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4841,
											"end": 4990,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4841,
											"end": 4990,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4841,
											"end": 4990,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4841,
											"end": 4990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4996,
											"end": 5111,
											"name": "tag",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 4996,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5081,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 5098,
											"end": 5103,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5081,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "209"
										},
										{
											"begin": 5081,
											"end": 5104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5081,
											"end": 5104,
											"name": "tag",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 5081,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5076,
											"end": 5079,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5069,
											"end": 5105,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4996,
											"end": 5111,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4996,
											"end": 5111,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4996,
											"end": 5111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5117,
											"end": 5216,
											"name": "tag",
											"source": 17,
											"value": "211"
										},
										{
											"begin": 5117,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5169,
											"end": 5175,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5203,
											"end": 5208,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5197,
											"end": 5209,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5187,
											"end": 5209,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5187,
											"end": 5209,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5117,
											"end": 5216,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5117,
											"end": 5216,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5117,
											"end": 5216,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5117,
											"end": 5216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5222,
											"end": 5391,
											"name": "tag",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 5222,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5306,
											"end": 5317,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5346,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5335,
											"end": 5338,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5328,
											"end": 5347,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5380,
											"end": 5384,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5375,
											"end": 5378,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5371,
											"end": 5385,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5356,
											"end": 5385,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5356,
											"end": 5385,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5222,
											"end": 5391,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5222,
											"end": 5391,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5222,
											"end": 5391,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5222,
											"end": 5391,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5222,
											"end": 5391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5397,
											"end": 5536,
											"name": "tag",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 5397,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5486,
											"end": 5492,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5481,
											"end": 5484,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5476,
											"end": 5479,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5470,
											"end": 5493,
											"name": "MCOPY",
											"source": 17
										},
										{
											"begin": 5527,
											"end": 5528,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5524,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5513,
											"end": 5516,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5509,
											"end": 5525,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5502,
											"end": 5529,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5397,
											"end": 5536,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5397,
											"end": 5536,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5397,
											"end": 5536,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5397,
											"end": 5536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5542,
											"end": 5644,
											"name": "tag",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 5542,
											"end": 5644,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5634,
											"end": 5636,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5630,
											"end": 5637,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 5625,
											"end": 5627,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5618,
											"end": 5623,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5614,
											"end": 5628,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5610,
											"end": 5638,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5600,
											"end": 5638,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5600,
											"end": 5638,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5542,
											"end": 5644,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5542,
											"end": 5644,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5542,
											"end": 5644,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5542,
											"end": 5644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5650,
											"end": 6027,
											"name": "tag",
											"source": 17,
											"value": "215"
										},
										{
											"begin": 5650,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5738,
											"end": 5741,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 5799,
											"end": 5804,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5766,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "211"
										},
										{
											"begin": 5766,
											"end": 5805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5766,
											"end": 5805,
											"name": "tag",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 5766,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5821,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 5885,
											"end": 5891,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5880,
											"end": 5883,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5821,
											"end": 5892,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 5821,
											"end": 5892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5821,
											"end": 5892,
											"name": "tag",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 5821,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5814,
											"end": 5892,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5814,
											"end": 5892,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5901,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 5959,
											"end": 5965,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5954,
											"end": 5957,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5947,
											"end": 5951,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5940,
											"end": 5945,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5936,
											"end": 5952,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5901,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 5901,
											"end": 5966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5901,
											"end": 5966,
											"name": "tag",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 5901,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5991,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 6013,
											"end": 6019,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5991,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 5991,
											"end": 6020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5991,
											"end": 6020,
											"name": "tag",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 5991,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5986,
											"end": 5989,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5982,
											"end": 6021,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5975,
											"end": 6021,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5975,
											"end": 6021,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5742,
											"end": 6027,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5650,
											"end": 6027,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5650,
											"end": 6027,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5650,
											"end": 6027,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5650,
											"end": 6027,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5650,
											"end": 6027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6033,
											"end": 6110,
											"name": "tag",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 6033,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6070,
											"end": 6077,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6099,
											"end": 6104,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6088,
											"end": 6104,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6088,
											"end": 6104,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6033,
											"end": 6110,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6033,
											"end": 6110,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6033,
											"end": 6110,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6033,
											"end": 6110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6116,
											"end": 6234,
											"name": "tag",
											"source": 17,
											"value": "217"
										},
										{
											"begin": 6116,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6203,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 6221,
											"end": 6226,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6203,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 6203,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6203,
											"end": 6227,
											"name": "tag",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 6203,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6198,
											"end": 6201,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6191,
											"end": 6228,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6116,
											"end": 6234,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6116,
											"end": 6234,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6116,
											"end": 6234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6240,
											"end": 6358,
											"name": "tag",
											"source": 17,
											"value": "218"
										},
										{
											"begin": 6240,
											"end": 6358,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6327,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "323"
										},
										{
											"begin": 6345,
											"end": 6350,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6327,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 6327,
											"end": 6351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6327,
											"end": 6351,
											"name": "tag",
											"source": 17,
											"value": "323"
										},
										{
											"begin": 6327,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6322,
											"end": 6325,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6315,
											"end": 6352,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6240,
											"end": 6358,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6240,
											"end": 6358,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6240,
											"end": 6358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6364,
											"end": 6478,
											"name": "tag",
											"source": 17,
											"value": "219"
										},
										{
											"begin": 6364,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6431,
											"end": 6437,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6465,
											"end": 6470,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6459,
											"end": 6471,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6449,
											"end": 6471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6449,
											"end": 6471,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6364,
											"end": 6478,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6364,
											"end": 6478,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6364,
											"end": 6478,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6364,
											"end": 6478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6484,
											"end": 6668,
											"name": "tag",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 6484,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6583,
											"end": 6594,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6617,
											"end": 6623,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6612,
											"end": 6615,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6605,
											"end": 6624,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6657,
											"end": 6661,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6655,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6648,
											"end": 6662,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6633,
											"end": 6662,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6633,
											"end": 6662,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6484,
											"end": 6668,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6484,
											"end": 6668,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6484,
											"end": 6668,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6484,
											"end": 6668,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6484,
											"end": 6668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6674,
											"end": 6806,
											"name": "tag",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 6674,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6741,
											"end": 6745,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6764,
											"end": 6767,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6756,
											"end": 6767,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6756,
											"end": 6767,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6794,
											"end": 6798,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6789,
											"end": 6792,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6785,
											"end": 6799,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6777,
											"end": 6799,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6777,
											"end": 6799,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6674,
											"end": 6806,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6674,
											"end": 6806,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6674,
											"end": 6806,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6674,
											"end": 6806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6812,
											"end": 6920,
											"name": "tag",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 6812,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6889,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 6907,
											"end": 6912,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6889,
											"end": 6913,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "216"
										},
										{
											"begin": 6889,
											"end": 6913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6889,
											"end": 6913,
											"name": "tag",
											"source": 17,
											"value": "328"
										},
										{
											"begin": 6889,
											"end": 6913,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6884,
											"end": 6887,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6877,
											"end": 6914,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6812,
											"end": 6920,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6812,
											"end": 6920,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6812,
											"end": 6920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6926,
											"end": 7105,
											"name": "tag",
											"source": 17,
											"value": "223"
										},
										{
											"begin": 6926,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6995,
											"end": 7005,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 7058,
											"end": 7061,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7050,
											"end": 7056,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 7016,
											"end": 7062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "tag",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 7016,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7094,
											"end": 7098,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7089,
											"end": 7092,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7085,
											"end": 7099,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7071,
											"end": 7099,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7071,
											"end": 7099,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6926,
											"end": 7105,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6926,
											"end": 7105,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6926,
											"end": 7105,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6926,
											"end": 7105,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6926,
											"end": 7105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7111,
											"end": 7224,
											"name": "tag",
											"source": 17,
											"value": "224"
										},
										{
											"begin": 7111,
											"end": 7224,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7181,
											"end": 7185,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7211,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7204,
											"end": 7218,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7196,
											"end": 7218,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7196,
											"end": 7218,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7111,
											"end": 7224,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7111,
											"end": 7224,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7111,
											"end": 7224,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7111,
											"end": 7224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7260,
											"end": 7992,
											"name": "tag",
											"source": 17,
											"value": "225"
										},
										{
											"begin": 7260,
											"end": 7992,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7379,
											"end": 7382,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7408,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 7456,
											"end": 7461,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7408,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "219"
										},
										{
											"begin": 7408,
											"end": 7462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7408,
											"end": 7462,
											"name": "tag",
											"source": 17,
											"value": "333"
										},
										{
											"begin": 7408,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7478,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 7557,
											"end": 7563,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7552,
											"end": 7555,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7478,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 7478,
											"end": 7564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7478,
											"end": 7564,
											"name": "tag",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 7478,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7471,
											"end": 7564,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7471,
											"end": 7564,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7588,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 7638,
											"end": 7643,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7588,
											"end": 7644,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "221"
										},
										{
											"begin": 7588,
											"end": 7644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7588,
											"end": 7644,
											"name": "tag",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 7588,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7667,
											"end": 7674,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7698,
											"end": 7699,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7683,
											"end": 7967,
											"name": "tag",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 7683,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7705,
											"end": 7706,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7702,
											"end": 7715,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 7683,
											"end": 7967,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7683,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 7683,
											"end": 7967,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7784,
											"end": 7790,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7778,
											"end": 7791,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7811,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 7870,
											"end": 7873,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 7855,
											"end": 7868,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7811,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "223"
										},
										{
											"begin": 7811,
											"end": 7874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7811,
											"end": 7874,
											"name": "tag",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 7811,
											"end": 7874,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7804,
											"end": 7874,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 7804,
											"end": 7874,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7897,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 7950,
											"end": 7956,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7897,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "224"
										},
										{
											"begin": 7897,
											"end": 7957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7897,
											"end": 7957,
											"name": "tag",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 7897,
											"end": 7957,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7887,
											"end": 7957,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7887,
											"end": 7957,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7743,
											"end": 7967,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7730,
											"end": 7731,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 7727,
											"end": 7728,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7723,
											"end": 7732,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7718,
											"end": 7732,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7718,
											"end": 7732,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7683,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 7683,
											"end": 7967,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7683,
											"end": 7967,
											"name": "tag",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 7683,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7687,
											"end": 7701,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7983,
											"end": 7986,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7976,
											"end": 7986,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7976,
											"end": 7986,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7384,
											"end": 7992,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7384,
											"end": 7992,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7384,
											"end": 7992,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7260,
											"end": 7992,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7260,
											"end": 7992,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7260,
											"end": 7992,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7260,
											"end": 7992,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7260,
											"end": 7992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 9213,
											"name": "tag",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 7998,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8347,
											"end": 8351,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8385,
											"end": 8388,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 8374,
											"end": 8383,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8370,
											"end": 8389,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8362,
											"end": 8389,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8362,
											"end": 8389,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8399,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "342"
										},
										{
											"begin": 8465,
											"end": 8466,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8454,
											"end": 8463,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8450,
											"end": 8467,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8441,
											"end": 8447,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 8399,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 8399,
											"end": 8468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8399,
											"end": 8468,
											"name": "tag",
											"source": 17,
											"value": "342"
										},
										{
											"begin": 8399,
											"end": 8468,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8515,
											"end": 8524,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8509,
											"end": 8513,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8505,
											"end": 8525,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8500,
											"end": 8502,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8489,
											"end": 8498,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8485,
											"end": 8503,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8478,
											"end": 8526,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8543,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8607,
											"end": 8613,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 8543,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "215"
										},
										{
											"begin": 8543,
											"end": 8621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8543,
											"end": 8621,
											"name": "tag",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 8543,
											"end": 8621,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8535,
											"end": 8621,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8535,
											"end": 8621,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8668,
											"end": 8677,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8662,
											"end": 8666,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8658,
											"end": 8678,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8653,
											"end": 8655,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8642,
											"end": 8651,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8638,
											"end": 8656,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8631,
											"end": 8679,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8696,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 8769,
											"end": 8773,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8760,
											"end": 8766,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 8696,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "215"
										},
										{
											"begin": 8696,
											"end": 8774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8696,
											"end": 8774,
											"name": "tag",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 8696,
											"end": 8774,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8688,
											"end": 8774,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8688,
											"end": 8774,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8784,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 8852,
											"end": 8854,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 8841,
											"end": 8850,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8837,
											"end": 8855,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8828,
											"end": 8834,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 8784,
											"end": 8856,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "217"
										},
										{
											"begin": 8784,
											"end": 8856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8784,
											"end": 8856,
											"name": "tag",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 8784,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8866,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 8934,
											"end": 8937,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 8923,
											"end": 8932,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8919,
											"end": 8938,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8910,
											"end": 8916,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8866,
											"end": 8939,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "218"
										},
										{
											"begin": 8866,
											"end": 8939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8866,
											"end": 8939,
											"name": "tag",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 8866,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8949,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 9017,
											"end": 9020,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 9006,
											"end": 9015,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9002,
											"end": 9021,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8993,
											"end": 8999,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8949,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 8949,
											"end": 9022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8949,
											"end": 9022,
											"name": "tag",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 8949,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9070,
											"end": 9079,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9064,
											"end": 9068,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9060,
											"end": 9080,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9054,
											"end": 9057,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 9043,
											"end": 9052,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9039,
											"end": 9058,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9032,
											"end": 9081,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9098,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 9201,
											"end": 9205,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9192,
											"end": 9198,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9098,
											"end": 9206,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "225"
										},
										{
											"begin": 9098,
											"end": 9206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9098,
											"end": 9206,
											"name": "tag",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 9098,
											"end": 9206,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9206,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9090,
											"end": 9206,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 9213,
											"name": "SWAP9",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 9213,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 9213,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 9213,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 9213,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 9213,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 9213,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 9213,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 9213,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 9213,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7998,
											"end": 9213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9219,
											"end": 9336,
											"name": "tag",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 9219,
											"end": 9336,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9328,
											"end": 9329,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9325,
											"end": 9326,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9318,
											"end": 9330,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9342,
											"end": 9459,
											"name": "tag",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 9342,
											"end": 9459,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9451,
											"end": 9452,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9448,
											"end": 9449,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9441,
											"end": 9453,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9465,
											"end": 9582,
											"name": "tag",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 9465,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9574,
											"end": 9575,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9572,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9564,
											"end": 9576,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9601,
											"end": 10153,
											"name": "tag",
											"source": 17,
											"value": "229"
										},
										{
											"begin": 9601,
											"end": 10153,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9658,
											"end": 9666,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9668,
											"end": 9674,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9718,
											"end": 9721,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9711,
											"end": 9715,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 9703,
											"end": 9709,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9699,
											"end": 9716,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9695,
											"end": 9722,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9685,
											"end": 9807,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 9685,
											"end": 9807,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9726,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 9726,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 9726,
											"end": 9805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9726,
											"end": 9805,
											"name": "tag",
											"source": 17,
											"value": "354"
										},
										{
											"begin": 9726,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9685,
											"end": 9807,
											"name": "tag",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 9685,
											"end": 9807,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9839,
											"end": 9845,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9826,
											"end": 9846,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 9816,
											"end": 9846,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9816,
											"end": 9846,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9869,
											"end": 9887,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9861,
											"end": 9867,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9858,
											"end": 9888,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9855,
											"end": 9972,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9855,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "355"
										},
										{
											"begin": 9855,
											"end": 9972,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9891,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 9891,
											"end": 9970,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 9891,
											"end": 9970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9891,
											"end": 9970,
											"name": "tag",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 9891,
											"end": 9970,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9855,
											"end": 9972,
											"name": "tag",
											"source": 17,
											"value": "355"
										},
										{
											"begin": 9855,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10005,
											"end": 10009,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9997,
											"end": 10003,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9993,
											"end": 10010,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9981,
											"end": 10010,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9981,
											"end": 10010,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10059,
											"end": 10062,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10051,
											"end": 10055,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10043,
											"end": 10049,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10039,
											"end": 10056,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 10029,
											"end": 10037,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10025,
											"end": 10057,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10022,
											"end": 10063,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10019,
											"end": 10147,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10019,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "357"
										},
										{
											"begin": 10019,
											"end": 10147,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10066,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "358"
										},
										{
											"begin": 10066,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 10066,
											"end": 10145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10066,
											"end": 10145,
											"name": "tag",
											"source": 17,
											"value": "358"
										},
										{
											"begin": 10066,
											"end": 10145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10019,
											"end": 10147,
											"name": "tag",
											"source": 17,
											"value": "357"
										},
										{
											"begin": 10019,
											"end": 10147,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9601,
											"end": 10153,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9601,
											"end": 10153,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9601,
											"end": 10153,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9601,
											"end": 10153,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9601,
											"end": 10153,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9601,
											"end": 10153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10176,
											"end": 10744,
											"name": "tag",
											"source": 17,
											"value": "230"
										},
										{
											"begin": 10176,
											"end": 10744,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10249,
											"end": 10257,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10259,
											"end": 10265,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10309,
											"end": 10312,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10302,
											"end": 10306,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 10294,
											"end": 10300,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10290,
											"end": 10307,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10286,
											"end": 10313,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 10276,
											"end": 10398,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "360"
										},
										{
											"begin": 10276,
											"end": 10398,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10317,
											"end": 10396,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 10317,
											"end": 10396,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 10317,
											"end": 10396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10317,
											"end": 10396,
											"name": "tag",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 10317,
											"end": 10396,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10276,
											"end": 10398,
											"name": "tag",
											"source": 17,
											"value": "360"
										},
										{
											"begin": 10276,
											"end": 10398,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10430,
											"end": 10436,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10417,
											"end": 10437,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 10407,
											"end": 10437,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10407,
											"end": 10437,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10460,
											"end": 10478,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10452,
											"end": 10458,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10449,
											"end": 10479,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10446,
											"end": 10563,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10446,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "362"
										},
										{
											"begin": 10446,
											"end": 10563,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 10482,
											"end": 10561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "tag",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 10482,
											"end": 10561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10446,
											"end": 10563,
											"name": "tag",
											"source": 17,
											"value": "362"
										},
										{
											"begin": 10446,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10596,
											"end": 10600,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10588,
											"end": 10594,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10584,
											"end": 10601,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10572,
											"end": 10601,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10572,
											"end": 10601,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10650,
											"end": 10653,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10642,
											"end": 10646,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10634,
											"end": 10640,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10630,
											"end": 10647,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 10620,
											"end": 10628,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10616,
											"end": 10648,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10613,
											"end": 10654,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10610,
											"end": 10738,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10610,
											"end": 10738,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "364"
										},
										{
											"begin": 10610,
											"end": 10738,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10657,
											"end": 10736,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "365"
										},
										{
											"begin": 10657,
											"end": 10736,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 10657,
											"end": 10736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10657,
											"end": 10736,
											"name": "tag",
											"source": 17,
											"value": "365"
										},
										{
											"begin": 10657,
											"end": 10736,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10610,
											"end": 10738,
											"name": "tag",
											"source": 17,
											"value": "364"
										},
										{
											"begin": 10610,
											"end": 10738,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10176,
											"end": 10744,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10176,
											"end": 10744,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10176,
											"end": 10744,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10176,
											"end": 10744,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10176,
											"end": 10744,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10176,
											"end": 10744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10764,
											"end": 11317,
											"name": "tag",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 10764,
											"end": 11317,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10822,
											"end": 10830,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10832,
											"end": 10838,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10882,
											"end": 10885,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10875,
											"end": 10879,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 10867,
											"end": 10873,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10863,
											"end": 10880,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10859,
											"end": 10886,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 10849,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 10849,
											"end": 10971,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10890,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "368"
										},
										{
											"begin": 10890,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "226"
										},
										{
											"begin": 10890,
											"end": 10969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10890,
											"end": 10969,
											"name": "tag",
											"source": 17,
											"value": "368"
										},
										{
											"begin": 10890,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10849,
											"end": 10971,
											"name": "tag",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 10849,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11003,
											"end": 11009,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10990,
											"end": 11010,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 10980,
											"end": 11010,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10980,
											"end": 11010,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11033,
											"end": 11051,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11025,
											"end": 11031,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11022,
											"end": 11052,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11019,
											"end": 11136,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11019,
											"end": 11136,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 11019,
											"end": 11136,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11055,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "370"
										},
										{
											"begin": 11055,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "227"
										},
										{
											"begin": 11055,
											"end": 11134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11055,
											"end": 11134,
											"name": "tag",
											"source": 17,
											"value": "370"
										},
										{
											"begin": 11055,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11019,
											"end": 11136,
											"name": "tag",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 11019,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11169,
											"end": 11173,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11161,
											"end": 11167,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11157,
											"end": 11174,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11145,
											"end": 11174,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11145,
											"end": 11174,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11223,
											"end": 11226,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11215,
											"end": 11219,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 11207,
											"end": 11213,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11203,
											"end": 11220,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 11193,
											"end": 11201,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11189,
											"end": 11221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11186,
											"end": 11227,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11183,
											"end": 11311,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11183,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "371"
										},
										{
											"begin": 11183,
											"end": 11311,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11230,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "372"
										},
										{
											"begin": 11230,
											"end": 11309,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "228"
										},
										{
											"begin": 11230,
											"end": 11309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11230,
											"end": 11309,
											"name": "tag",
											"source": 17,
											"value": "372"
										},
										{
											"begin": 11230,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11183,
											"end": 11311,
											"name": "tag",
											"source": 17,
											"value": "371"
										},
										{
											"begin": 11183,
											"end": 11311,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10764,
											"end": 11317,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10764,
											"end": 11317,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10764,
											"end": 11317,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10764,
											"end": 11317,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10764,
											"end": 11317,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10764,
											"end": 11317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11323,
											"end": 12570,
											"name": "tag",
											"source": 17,
											"value": "81"
										},
										{
											"begin": 11323,
											"end": 12570,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11450,
											"end": 11456,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11458,
											"end": 11464,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11466,
											"end": 11472,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11480,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11482,
											"end": 11488,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11490,
											"end": 11496,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11539,
											"end": 11541,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 11527,
											"end": 11536,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11518,
											"end": 11525,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 11514,
											"end": 11537,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11510,
											"end": 11542,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11507,
											"end": 11626,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11507,
											"end": 11626,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "374"
										},
										{
											"begin": 11507,
											"end": 11626,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11545,
											"end": 11624,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "375"
										},
										{
											"begin": 11545,
											"end": 11624,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 11545,
											"end": 11624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11545,
											"end": 11624,
											"name": "tag",
											"source": 17,
											"value": "375"
										},
										{
											"begin": 11545,
											"end": 11624,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11507,
											"end": 11626,
											"name": "tag",
											"source": 17,
											"value": "374"
										},
										{
											"begin": 11507,
											"end": 11626,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11693,
											"end": 11694,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11682,
											"end": 11691,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11678,
											"end": 11695,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11665,
											"end": 11696,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 11723,
											"end": 11741,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11715,
											"end": 11721,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11712,
											"end": 11742,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11709,
											"end": 11826,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11709,
											"end": 11826,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 11709,
											"end": 11826,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11745,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 11745,
											"end": 11824,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "190"
										},
										{
											"begin": 11745,
											"end": 11824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11745,
											"end": 11824,
											"name": "tag",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 11745,
											"end": 11824,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11709,
											"end": 11826,
											"name": "tag",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 11709,
											"end": 11826,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11858,
											"end": 11922,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 11914,
											"end": 11921,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 11905,
											"end": 11911,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11894,
											"end": 11903,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 11890,
											"end": 11912,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11858,
											"end": 11922,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "229"
										},
										{
											"begin": 11858,
											"end": 11922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11858,
											"end": 11922,
											"name": "tag",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 11858,
											"end": 11922,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11840,
											"end": 11922,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 11840,
											"end": 11922,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11840,
											"end": 11922,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 11840,
											"end": 11922,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11636,
											"end": 11932,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11999,
											"end": 12001,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11988,
											"end": 11997,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11984,
											"end": 12002,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11971,
											"end": 12003,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 12030,
											"end": 12048,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12022,
											"end": 12028,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12019,
											"end": 12049,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 12016,
											"end": 12133,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12016,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 12016,
											"end": 12133,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12052,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "380"
										},
										{
											"begin": 12052,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "190"
										},
										{
											"begin": 12052,
											"end": 12131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12052,
											"end": 12131,
											"name": "tag",
											"source": 17,
											"value": "380"
										},
										{
											"begin": 12052,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12016,
											"end": 12133,
											"name": "tag",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 12016,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12165,
											"end": 12245,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 12237,
											"end": 12244,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 12228,
											"end": 12234,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12217,
											"end": 12226,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 12213,
											"end": 12235,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12165,
											"end": 12245,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "230"
										},
										{
											"begin": 12165,
											"end": 12245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12165,
											"end": 12245,
											"name": "tag",
											"source": 17,
											"value": "381"
										},
										{
											"begin": 12165,
											"end": 12245,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12147,
											"end": 12245,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 12147,
											"end": 12245,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12147,
											"end": 12245,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 12147,
											"end": 12245,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11942,
											"end": 12255,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12322,
											"end": 12324,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12311,
											"end": 12320,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12307,
											"end": 12325,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12294,
											"end": 12326,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 12353,
											"end": 12371,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12345,
											"end": 12351,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12342,
											"end": 12372,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 12339,
											"end": 12456,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12339,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "382"
										},
										{
											"begin": 12339,
											"end": 12456,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12375,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "383"
										},
										{
											"begin": 12375,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "190"
										},
										{
											"begin": 12375,
											"end": 12454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12375,
											"end": 12454,
											"name": "tag",
											"source": 17,
											"value": "383"
										},
										{
											"begin": 12375,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12339,
											"end": 12456,
											"name": "tag",
											"source": 17,
											"value": "382"
										},
										{
											"begin": 12339,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12488,
											"end": 12553,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "384"
										},
										{
											"begin": 12545,
											"end": 12552,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 12536,
											"end": 12542,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12525,
											"end": 12534,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 12521,
											"end": 12543,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12488,
											"end": 12553,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 12488,
											"end": 12553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12488,
											"end": 12553,
											"name": "tag",
											"source": 17,
											"value": "384"
										},
										{
											"begin": 12488,
											"end": 12553,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12470,
											"end": 12553,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12470,
											"end": 12553,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12470,
											"end": 12553,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12470,
											"end": 12553,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12265,
											"end": 12563,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11323,
											"end": 12570,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11323,
											"end": 12570,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 11323,
											"end": 12570,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11323,
											"end": 12570,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11323,
											"end": 12570,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 11323,
											"end": 12570,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11323,
											"end": 12570,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11323,
											"end": 12570,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 11323,
											"end": 12570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12576,
											"end": 12756,
											"name": "tag",
											"source": 17,
											"value": "112"
										},
										{
											"begin": 12576,
											"end": 12756,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12624,
											"end": 12701,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12621,
											"end": 12622,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12614,
											"end": 12702,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12721,
											"end": 12725,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 12718,
											"end": 12719,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 12711,
											"end": 12726,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12745,
											"end": 12749,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 12742,
											"end": 12743,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12735,
											"end": 12750,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 12762,
											"end": 12930,
											"name": "tag",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 12762,
											"end": 12930,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12845,
											"end": 12856,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12879,
											"end": 12885,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12874,
											"end": 12877,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12867,
											"end": 12886,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12919,
											"end": 12923,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12914,
											"end": 12917,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12910,
											"end": 12924,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12895,
											"end": 12924,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12895,
											"end": 12924,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12762,
											"end": 12930,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12762,
											"end": 12930,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12762,
											"end": 12930,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12762,
											"end": 12930,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12762,
											"end": 12930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12936,
											"end": 13084,
											"name": "tag",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 12936,
											"end": 13084,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13034,
											"end": 13040,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13029,
											"end": 13032,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13024,
											"end": 13027,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13011,
											"end": 13041,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13072,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13061,
											"end": 13064,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13057,
											"end": 13073,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13050,
											"end": 13077,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12936,
											"end": 13084,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12936,
											"end": 13084,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12936,
											"end": 13084,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12936,
											"end": 13084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13112,
											"end": 13426,
											"name": "tag",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 13112,
											"end": 13426,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13208,
											"end": 13211,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13229,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 13292,
											"end": 13298,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13287,
											"end": 13290,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13229,
											"end": 13299,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 13229,
											"end": 13299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13229,
											"end": 13299,
											"name": "tag",
											"source": 17,
											"value": "389"
										},
										{
											"begin": 13229,
											"end": 13299,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13222,
											"end": 13299,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 13222,
											"end": 13299,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13309,
											"end": 13365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 13358,
											"end": 13364,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13353,
											"end": 13356,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13346,
											"end": 13351,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13309,
											"end": 13365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 13309,
											"end": 13365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13309,
											"end": 13365,
											"name": "tag",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 13309,
											"end": 13365,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13390,
											"end": 13419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "391"
										},
										{
											"begin": 13412,
											"end": 13418,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13390,
											"end": 13419,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 13390,
											"end": 13419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13390,
											"end": 13419,
											"name": "tag",
											"source": 17,
											"value": "391"
										},
										{
											"begin": 13390,
											"end": 13419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13385,
											"end": 13388,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13381,
											"end": 13420,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13374,
											"end": 13420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13374,
											"end": 13420,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13112,
											"end": 13426,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 13112,
											"end": 13426,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13112,
											"end": 13426,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13112,
											"end": 13426,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13112,
											"end": 13426,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13112,
											"end": 13426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13432,
											"end": 13549,
											"name": "tag",
											"source": 17,
											"value": "235"
										},
										{
											"begin": 13432,
											"end": 13549,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13541,
											"end": 13542,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13538,
											"end": 13539,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13531,
											"end": 13543,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 13555,
											"end": 13654,
											"name": "tag",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 13555,
											"end": 13654,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13640,
											"end": 13646,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13635,
											"end": 13638,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13630,
											"end": 13633,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13617,
											"end": 13647,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 13555,
											"end": 13654,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13555,
											"end": 13654,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13555,
											"end": 13654,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13555,
											"end": 13654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13690,
											"end": 14227,
											"name": "tag",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 13690,
											"end": 14227,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13818,
											"end": 13821,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13839,
											"end": 13925,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "395"
										},
										{
											"begin": 13918,
											"end": 13924,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13913,
											"end": 13916,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13839,
											"end": 13925,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "220"
										},
										{
											"begin": 13839,
											"end": 13925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13839,
											"end": 13925,
											"name": "tag",
											"source": 17,
											"value": "395"
										},
										{
											"begin": 13839,
											"end": 13925,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13832,
											"end": 13925,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 13832,
											"end": 13925,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13949,
											"end": 14015,
											"name": "PUSH",
											"source": 17,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13941,
											"end": 13947,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13938,
											"end": 14016,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 13935,
											"end": 14100,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13935,
											"end": 14100,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "396"
										},
										{
											"begin": 13935,
											"end": 14100,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14019,
											"end": 14098,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "397"
										},
										{
											"begin": 14019,
											"end": 14098,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "235"
										},
										{
											"begin": 14019,
											"end": 14098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14019,
											"end": 14098,
											"name": "tag",
											"source": 17,
											"value": "397"
										},
										{
											"begin": 14019,
											"end": 14098,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13935,
											"end": 14100,
											"name": "tag",
											"source": 17,
											"value": "396"
										},
										{
											"begin": 13935,
											"end": 14100,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14131,
											"end": 14135,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14123,
											"end": 14129,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14119,
											"end": 14136,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 14109,
											"end": 14136,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14109,
											"end": 14136,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "398"
										},
										{
											"begin": 14182,
											"end": 14188,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14177,
											"end": 14180,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 14170,
											"end": 14175,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 14146,
											"end": 14189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "tag",
											"source": 17,
											"value": "398"
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14214,
											"end": 14220,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14209,
											"end": 14212,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14205,
											"end": 14221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14198,
											"end": 14221,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14198,
											"end": 14221,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13690,
											"end": 14227,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 13690,
											"end": 14227,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13690,
											"end": 14227,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13690,
											"end": 14227,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13690,
											"end": 14227,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13690,
											"end": 14227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14233,
											"end": 14843,
											"name": "tag",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 14233,
											"end": 14843,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14442,
											"end": 14446,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14480,
											"end": 14482,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 14469,
											"end": 14478,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14465,
											"end": 14483,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14457,
											"end": 14483,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14457,
											"end": 14483,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14529,
											"end": 14538,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14523,
											"end": 14527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14519,
											"end": 14539,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14515,
											"end": 14516,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14504,
											"end": 14513,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14500,
											"end": 14517,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14493,
											"end": 14540,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14557,
											"end": 14643,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "400"
										},
										{
											"begin": 14638,
											"end": 14642,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14629,
											"end": 14635,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 14621,
											"end": 14627,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 14557,
											"end": 14643,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 14557,
											"end": 14643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14557,
											"end": 14643,
											"name": "tag",
											"source": 17,
											"value": "400"
										},
										{
											"begin": 14557,
											"end": 14643,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14549,
											"end": 14643,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14549,
											"end": 14643,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14690,
											"end": 14699,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14684,
											"end": 14688,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14680,
											"end": 14700,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14675,
											"end": 14677,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14664,
											"end": 14673,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14660,
											"end": 14678,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14653,
											"end": 14701,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14718,
											"end": 14836,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "401"
										},
										{
											"begin": 14831,
											"end": 14835,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14822,
											"end": 14828,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14814,
											"end": 14820,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 14718,
											"end": 14836,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "237"
										},
										{
											"begin": 14718,
											"end": 14836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14718,
											"end": 14836,
											"name": "tag",
											"source": 17,
											"value": "401"
										},
										{
											"begin": 14718,
											"end": 14836,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14710,
											"end": 14836,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14710,
											"end": 14836,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14233,
											"end": 14843,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 14233,
											"end": 14843,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 14233,
											"end": 14843,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14233,
											"end": 14843,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14233,
											"end": 14843,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14233,
											"end": 14843,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14233,
											"end": 14843,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14233,
											"end": 14843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14849,
											"end": 14965,
											"name": "tag",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 14849,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14919,
											"end": 14940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "403"
										},
										{
											"begin": 14934,
											"end": 14939,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14919,
											"end": 14940,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 14919,
											"end": 14940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14919,
											"end": 14940,
											"name": "tag",
											"source": 17,
											"value": "403"
										},
										{
											"begin": 14919,
											"end": 14940,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14912,
											"end": 14917,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14909,
											"end": 14941,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 14899,
											"end": 14959,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "404"
										},
										{
											"begin": 14899,
											"end": 14959,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14955,
											"end": 14956,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14952,
											"end": 14953,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14945,
											"end": 14957,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14899,
											"end": 14959,
											"name": "tag",
											"source": 17,
											"value": "404"
										},
										{
											"begin": 14899,
											"end": 14959,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14849,
											"end": 14965,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14849,
											"end": 14965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14971,
											"end": 15108,
											"name": "tag",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 14971,
											"end": 15108,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15025,
											"end": 15030,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15056,
											"end": 15062,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15050,
											"end": 15063,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 15041,
											"end": 15063,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15041,
											"end": 15063,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15072,
											"end": 15102,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 15096,
											"end": 15101,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15072,
											"end": 15102,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "238"
										},
										{
											"begin": 15072,
											"end": 15102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15072,
											"end": 15102,
											"name": "tag",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 15072,
											"end": 15102,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14971,
											"end": 15108,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14971,
											"end": 15108,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14971,
											"end": 15108,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14971,
											"end": 15108,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14971,
											"end": 15108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15114,
											"end": 15459,
											"name": "tag",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 15114,
											"end": 15459,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15181,
											"end": 15187,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15230,
											"end": 15232,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15218,
											"end": 15227,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15209,
											"end": 15216,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15205,
											"end": 15228,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 15201,
											"end": 15233,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 15198,
											"end": 15317,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15198,
											"end": 15317,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 15198,
											"end": 15317,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15236,
											"end": 15315,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 15236,
											"end": 15315,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 15236,
											"end": 15315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15236,
											"end": 15315,
											"name": "tag",
											"source": 17,
											"value": "409"
										},
										{
											"begin": 15236,
											"end": 15315,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15198,
											"end": 15317,
											"name": "tag",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 15198,
											"end": 15317,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15356,
											"end": 15357,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15381,
											"end": 15442,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 15434,
											"end": 15441,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15425,
											"end": 15431,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15414,
											"end": 15423,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15410,
											"end": 15432,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15381,
											"end": 15442,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "239"
										},
										{
											"begin": 15381,
											"end": 15442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15381,
											"end": 15442,
											"name": "tag",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 15381,
											"end": 15442,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15371,
											"end": 15442,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15371,
											"end": 15442,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15327,
											"end": 15452,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15114,
											"end": 15459,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15114,
											"end": 15459,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15114,
											"end": 15459,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15114,
											"end": 15459,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15114,
											"end": 15459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15465,
											"end": 15645,
											"name": "tag",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 15465,
											"end": 15645,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15605,
											"end": 15637,
											"name": "PUSH",
											"source": 17,
											"value": "50726F6F6647656E65726174696F6E3A20496E76616C69642070726F6F660000"
										},
										{
											"begin": 15601,
											"end": 15602,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15593,
											"end": 15599,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15589,
											"end": 15603,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15582,
											"end": 15638,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15465,
											"end": 15645,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15465,
											"end": 15645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15651,
											"end": 16017,
											"name": "tag",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 15651,
											"end": 16017,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15793,
											"end": 15796,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15814,
											"end": 15881,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 15878,
											"end": 15880,
											"name": "PUSH",
											"source": 17,
											"value": "1E"
										},
										{
											"begin": 15873,
											"end": 15876,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15814,
											"end": 15881,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 15814,
											"end": 15881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15814,
											"end": 15881,
											"name": "tag",
											"source": 17,
											"value": "413"
										},
										{
											"begin": 15814,
											"end": 15881,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15807,
											"end": 15881,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15807,
											"end": 15881,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15890,
											"end": 15983,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 15979,
											"end": 15982,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15890,
											"end": 15983,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 15890,
											"end": 15983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15890,
											"end": 15983,
											"name": "tag",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 15890,
											"end": 15983,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16008,
											"end": 16010,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16003,
											"end": 16006,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15999,
											"end": 16011,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15992,
											"end": 16011,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15992,
											"end": 16011,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15651,
											"end": 16017,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15651,
											"end": 16017,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15651,
											"end": 16017,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15651,
											"end": 16017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16023,
											"end": 16442,
											"name": "tag",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 16023,
											"end": 16442,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16189,
											"end": 16193,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16227,
											"end": 16229,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16216,
											"end": 16225,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16212,
											"end": 16230,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16204,
											"end": 16230,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16204,
											"end": 16230,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16276,
											"end": 16285,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16270,
											"end": 16274,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16266,
											"end": 16286,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 16262,
											"end": 16263,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16251,
											"end": 16260,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16247,
											"end": 16264,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16240,
											"end": 16287,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16304,
											"end": 16435,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 16430,
											"end": 16434,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16304,
											"end": 16435,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 16304,
											"end": 16435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16304,
											"end": 16435,
											"name": "tag",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 16304,
											"end": 16435,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16296,
											"end": 16435,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16296,
											"end": 16435,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16023,
											"end": 16442,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16023,
											"end": 16442,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16023,
											"end": 16442,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16023,
											"end": 16442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16472,
											"end": 16789,
											"name": "tag",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 16472,
											"end": 16789,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16570,
											"end": 16573,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16591,
											"end": 16662,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 16655,
											"end": 16661,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16650,
											"end": 16653,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 16591,
											"end": 16662,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 16591,
											"end": 16662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16591,
											"end": 16662,
											"name": "tag",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 16591,
											"end": 16662,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16584,
											"end": 16662,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 16584,
											"end": 16662,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16672,
											"end": 16728,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 16721,
											"end": 16727,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16716,
											"end": 16719,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 16709,
											"end": 16714,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16672,
											"end": 16728,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 16672,
											"end": 16728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16672,
											"end": 16728,
											"name": "tag",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 16672,
											"end": 16728,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16753,
											"end": 16782,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 16775,
											"end": 16781,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16753,
											"end": 16782,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 16753,
											"end": 16782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16753,
											"end": 16782,
											"name": "tag",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 16753,
											"end": 16782,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16748,
											"end": 16751,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16744,
											"end": 16783,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16737,
											"end": 16783,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16737,
											"end": 16783,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16472,
											"end": 16789,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 16472,
											"end": 16789,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16472,
											"end": 16789,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16472,
											"end": 16789,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16472,
											"end": 16789,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16472,
											"end": 16789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16795,
											"end": 17128,
											"name": "tag",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 16795,
											"end": 17128,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16918,
											"end": 16922,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16956,
											"end": 16958,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16945,
											"end": 16954,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16941,
											"end": 16959,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16933,
											"end": 16959,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16933,
											"end": 16959,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17005,
											"end": 17014,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16999,
											"end": 17003,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16995,
											"end": 17015,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 16991,
											"end": 16992,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16980,
											"end": 16989,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16976,
											"end": 16993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16969,
											"end": 17016,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17033,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 17116,
											"end": 17120,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17107,
											"end": 17113,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17099,
											"end": 17105,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 17033,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 17033,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17033,
											"end": 17121,
											"name": "tag",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 17033,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17025,
											"end": 17121,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17025,
											"end": 17121,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16795,
											"end": 17128,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 16795,
											"end": 17128,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16795,
											"end": 17128,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16795,
											"end": 17128,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16795,
											"end": 17128,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16795,
											"end": 17128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17134,
											"end": 17466,
											"name": "tag",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 17134,
											"end": 17466,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17255,
											"end": 17259,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17293,
											"end": 17295,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 17282,
											"end": 17291,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17278,
											"end": 17296,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17270,
											"end": 17296,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17270,
											"end": 17296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17306,
											"end": 17377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 17374,
											"end": 17375,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17363,
											"end": 17372,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17359,
											"end": 17376,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17350,
											"end": 17356,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 17306,
											"end": 17377,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "218"
										},
										{
											"begin": 17306,
											"end": 17377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17306,
											"end": 17377,
											"name": "tag",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 17306,
											"end": 17377,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17387,
											"end": 17459,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 17455,
											"end": 17457,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17444,
											"end": 17453,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17440,
											"end": 17458,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17431,
											"end": 17437,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17387,
											"end": 17459,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 17387,
											"end": 17459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17387,
											"end": 17459,
											"name": "tag",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 17387,
											"end": 17459,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17134,
											"end": 17466,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 17134,
											"end": 17466,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17134,
											"end": 17466,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17134,
											"end": 17466,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17134,
											"end": 17466,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17134,
											"end": 17466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17472,
											"end": 17652,
											"name": "tag",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 17472,
											"end": 17652,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17520,
											"end": 17597,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17517,
											"end": 17518,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17510,
											"end": 17598,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17617,
											"end": 17621,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 17614,
											"end": 17615,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 17607,
											"end": 17622,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17641,
											"end": 17645,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 17638,
											"end": 17639,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17631,
											"end": 17646,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 17658,
											"end": 17978,
											"name": "tag",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 17658,
											"end": 17978,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17702,
											"end": 17708,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17739,
											"end": 17740,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 17733,
											"end": 17737,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17729,
											"end": 17741,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 17719,
											"end": 17741,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17719,
											"end": 17741,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17786,
											"end": 17787,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 17780,
											"end": 17784,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17776,
											"end": 17788,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 17807,
											"end": 17825,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 17797,
											"end": 17878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 17797,
											"end": 17878,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17863,
											"end": 17867,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 17855,
											"end": 17861,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17851,
											"end": 17868,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 17841,
											"end": 17868,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17841,
											"end": 17868,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17797,
											"end": 17878,
											"name": "tag",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 17797,
											"end": 17878,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17925,
											"end": 17927,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17917,
											"end": 17923,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17914,
											"end": 17928,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 17894,
											"end": 17912,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17891,
											"end": 17929,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 17888,
											"end": 17972,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "429"
										},
										{
											"begin": 17888,
											"end": 17972,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 17944,
											"end": 17962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "tag",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 17944,
											"end": 17962,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17888,
											"end": 17972,
											"name": "tag",
											"source": 17,
											"value": "429"
										},
										{
											"begin": 17888,
											"end": 17972,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17709,
											"end": 17978,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17658,
											"end": 17978,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17658,
											"end": 17978,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17658,
											"end": 17978,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17658,
											"end": 17978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1271.sol",
								"@openzeppelin/contracts/interfaces/IERC5267.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ShortStrings.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/cryptography/EIP712.sol",
								"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
								"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/security/zkSnarks/ProofGeneration.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"VERIFIER_ROLE()": "e7705db6",
							"eip712Domain()": "84b0196e",
							"generateProof(bytes,uint256[],string)": "f736c365",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"grantVerifierRole(address)": "0337c061",
							"hasRole(bytes32,address)": "91d14854",
							"hasVerifierRole(address)": "a865e5fe",
							"proofVerifier()": "7fa417b3",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"revokeVerifierRole(address)": "a3669aef",
							"setProofVerifier(address)": "df6244db",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_proofVerifier\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"proofId\",\"type\":\"string\"}],\"name\":\"ProofGenerated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERIFIER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"inputs\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"proofId\",\"type\":\"string\"}],\"name\":\"generateProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantVerifierRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasVerifierRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proofVerifier\",\"outputs\":[{\"internalType\":\"contract IProofVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeVerifierRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proofVerifier\",\"type\":\"address\"}],\"name\":\"setProofVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is responsible for generating zk-SNARKs proofs for transactions and data validation.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"generateProof(bytes,uint256[],string)\":{\"details\":\"Generate zk-SNARK proof for a transaction or data.\",\"params\":{\"inputs\":\"The inputs used for the proof.\",\"proof\":\"The zk-SNARK proof.\",\"proofId\":\"Unique identifier for the proof.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"grantVerifierRole(address)\":{\"details\":\"Grant the verifier role to an account.\",\"params\":{\"account\":\"The account to grant the verifier role to.\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"hasVerifierRole(address)\":{\"details\":\"Check if an account has the verifier role.\",\"params\":{\"account\":\"The account to check.\"},\"returns\":{\"_0\":\"True if the account has the verifier role, false otherwise.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"revokeVerifierRole(address)\":{\"details\":\"Revoke the verifier role from an account.\",\"params\":{\"account\":\"The account to revoke the verifier role from.\"}},\"setProofVerifier(address)\":{\"details\":\"Set a new proof verifier contract address.\",\"params\":{\"_proofVerifier\":\"The address of the new proof verifier contract.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"ProofGeneration\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/security/zkSnarks/ProofGeneration.sol\":\"ProofGeneration\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x85a45f3f10014a0f8be41157a32b6a5f905753ea64a4b64e29fc12b7deeecf39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3c74009ce36136b36c77c23935b8e4a7b4f253be2da2be4fb4a916b1ce43743\",\"dweb:/ipfs/QmcH36v3iN7SJJuF73AunLR2LtNxhVJ1wm63ph4dPZ4pcL\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x6b11eb41a228cca35d4b662b4df69fcd75192851365102690f57b2ac01e83fe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab006a2983ed350d2af21ddcdd835dcae3b8340086cc4d088460da5abd041f69\",\"dweb:/ipfs/QmbEacDhkJZiGrgzLjB4pNtE8Z1uudjDw1DvcDUTVQFsLG\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/security/zkSnarks/ProofGeneration.sol\":{\"keccak256\":\"0x6f7db362cd0beeb1311acd8060f4122dba729de4dca675436514aefa8515052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7702ffc57d68f7e81d663cf8b46299ed5cd5fbd1d40d262ddffdad51e2975a38\",\"dweb:/ipfs/QmPHSSXz25u1FYgNEnTCKCRMbjCzjoAXQ1CeKQTXo95JWJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/security/zkSnarks/ProofGeneration.sol:ProofGeneration",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1414,
								"contract": "contracts/security/zkSnarks/ProofGeneration.sol:ProofGeneration",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1416,
								"contract": "contracts/security/zkSnarks/ProofGeneration.sol:ProofGeneration",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 3020,
								"contract": "contracts/security/zkSnarks/ProofGeneration.sol:ProofGeneration",
								"label": "proofVerifier",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IProofVerifier)2996"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IProofVerifier)2996": {
								"encoding": "inplace",
								"label": "contract IProofVerifier",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/security/zkSnarks/ProofGeneration.sol:ProofGeneration",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/security/zkSnarks/ProofGeneration.sol:ProofGeneration",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							447
						],
						"ERC165": [
							1803
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 448,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 447,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1804,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1803,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 447,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1803,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1803,
								1815,
								378,
								447
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1802
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1802,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1271.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1271.sol",
					"exportedSymbols": {
						"IERC1271": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1271",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "133:159:2",
								"text": " @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]."
							},
							"fullyImplemented": false,
							"id": 392,
							"linearizedBaseContracts": [
								392
							],
							"name": "IERC1271",
							"nameLocation": "303:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "318:220:2",
										"text": " @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"
									},
									"functionSelector": "1626ba7e",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignature",
									"nameLocation": "552:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "577:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "569:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 383,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "596:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "583:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "583:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:38:2"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "magicValue",
												"nameLocation": "637:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "630:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 388,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "630:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "629:19:2"
									},
									"scope": 392,
									"src": "543:106:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 393,
							"src": "293:358:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:545:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC5267.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
					"exportedSymbols": {
						"IERC5267": [
							417
						]
					},
					"id": 418,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 417,
							"linearizedBaseContracts": [
								417
							],
							"name": "IERC5267",
							"nameLocation": "143:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "158:84:3",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 397,
									"name": "EIP712DomainChanged",
									"nameLocation": "253:19:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:2:3"
									},
									"src": "247:28:3"
								},
								{
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "281:140:3",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "435:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "517:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "510:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 400,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "510:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "551:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "537:18:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 402,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "537:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "583:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "569:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "612:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "604:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "641:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "633:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "680:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "672:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "715:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "698:27:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 412,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "698:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 413,
													"nodeType": "ArrayTypeName",
													"src": "698:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:239:3"
									},
									"scope": 417,
									"src": "426:310:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 418,
							"src": "133:605:3",
							"usedErrors": [],
							"usedEvents": [
								397
							]
						}
					],
					"src": "107:632:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							447
						]
					},
					"id": 448,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 419,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 420,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 447,
							"linearizedBaseContracts": [
								447
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 425,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 424,
												"id": 427,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 447,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 434,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 433,
												"id": 436,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 447,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 442,
												"id": 444,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 447,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 448,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/ShortStrings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
					"exportedSymbols": {
						"ShortString": [
							453
						],
						"ShortStrings": [
							664
						],
						"StorageSlot": [
							774
						]
					},
					"id": 665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 449,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 665,
							"sourceUnit": 775,
							"src": "132:46:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 450,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 774,
										"src": "140:11:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"canonicalName": "ShortString",
							"id": 453,
							"name": "ShortString",
							"nameLocation": "353:11:5",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "348:28:5",
							"underlyingType": {
								"id": 452,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "368:7:5",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 454,
								"nodeType": "StructuredDocumentation",
								"src": "378:876:5",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 664,
							"linearizedBaseContracts": [
								664
							],
							"name": "ShortStrings",
							"nameLocation": "1263:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 457,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "1370:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 664,
									"src": "1345:111:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 455,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1345:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 456,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1390:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 461,
									"name": "StringTooLong",
									"nameLocation": "1469:13:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1490:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "1483:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:12:5"
									},
									"src": "1463:32:5"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 463,
									"name": "InvalidShortString",
									"nameLocation": "1506:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:5"
									},
									"src": "1500:27:5"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "1786:208:5",
										"statements": [
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "1809:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 506,
														"src": "1796:17:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 472,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1796:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 478,
												"initialValue": {
													"arguments": [
														{
															"id": 476,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "1822:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1816:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 474,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1816:5:5",
															"typeDescriptions": {}
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1816:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1796:30:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 479,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "1840:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1845:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1840:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1854:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "1840:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 488,
												"nodeType": "IfStatement",
												"src": "1836:72:5",
												"trueBody": {
													"id": 487,
													"nodeType": "Block",
													"src": "1858:50:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 484,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "1893:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 483,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "1879:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$",
																		"typeString": "function (string memory) pure returns (error)"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1879:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 486,
															"nodeType": "RevertStatement",
															"src": "1872:25:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 497,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 473,
																						"src": "1965:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 496,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1957:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 495,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "1957:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1957:13:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1949:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 493,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "1949:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1949:22:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 500,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 473,
																			"src": "1974:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1979:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "1974:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1949:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1941:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 491,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1941:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1941:45:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 489,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "1924:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$453_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1936:4:5",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "1924:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$453_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 471,
												"id": 505,
												"nodeType": "Return",
												"src": "1917:70:5"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "1533:170:5",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "1717:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1745:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1731:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1730:19:5"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1773:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 469,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 468,
														"name": "ShortString",
														"nameLocations": [
															"1773:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 453,
														"src": "1773:11:5"
													},
													"referencedDeclaration": 453,
													"src": "1773:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:13:5"
									},
									"scope": 664,
									"src": "1708:286:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "2152:331:5",
										"statements": [
											{
												"assignments": [
													517
												],
												"declarations": [
													{
														"constant": false,
														"id": 517,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "2170:3:5",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "2162:11:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2162:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 521,
												"initialValue": {
													"arguments": [
														{
															"id": 519,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "2187:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																"typeString": "ShortString"
															}
														],
														"id": 518,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "2176:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$453_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2162:30:5"
											},
											{
												"assignments": [
													523
												],
												"declarations": [
													{
														"constant": false,
														"id": 523,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "2294:3:5",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "2280:17:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 522,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2280:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2311:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2300:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 524,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2304:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2280:34:5"
											},
											{
												"AST": {
													"nativeSrc": "2376:81:5",
													"nodeType": "YulBlock",
													"src": "2376:81:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "2397:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2397:3:5"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "2402:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2402:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2390:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:5"
																},
																"nativeSrc": "2390:16:5",
																"nodeType": "YulFunctionCall",
																"src": "2390:16:5"
															},
															"nativeSrc": "2390:16:5",
															"nodeType": "YulExpressionStatement",
															"src": "2390:16:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "2430:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2430:3:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2435:4:5",
																				"nodeType": "YulLiteral",
																				"src": "2435:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2426:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:5"
																		},
																		"nativeSrc": "2426:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2426:14:5"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "2442:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2442:4:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2419:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:5"
																},
																"nativeSrc": "2419:28:5",
																"nodeType": "YulFunctionCall",
																"src": "2419:28:5"
															},
															"nativeSrc": "2419:28:5",
															"nodeType": "YulExpressionStatement",
															"src": "2419:28:5"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 517,
														"isOffset": false,
														"isSlot": false,
														"src": "2402:3:5",
														"valueSize": 1
													},
													{
														"declaration": 511,
														"isOffset": false,
														"isSlot": false,
														"src": "2442:4:5",
														"valueSize": 1
													},
													{
														"declaration": 523,
														"isOffset": false,
														"isSlot": false,
														"src": "2397:3:5",
														"valueSize": 1
													},
													{
														"declaration": 523,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:3:5",
														"valueSize": 1
													}
												],
												"id": 529,
												"nodeType": "InlineAssembly",
												"src": "2367:90:5"
											},
											{
												"expression": {
													"id": 530,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 523,
													"src": "2473:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 515,
												"id": 531,
												"nodeType": "Return",
												"src": "2466:10:5"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2000:73:5",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "2087:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2108:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2096:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "ShortString",
														"nameLocations": [
															"2096:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 453,
														"src": "2096:11:5"
													},
													"referencedDeclaration": 453,
													"src": "2096:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2095:18:5"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2137:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 513,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2137:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2136:15:5"
									},
									"scope": 664,
									"src": "2078:405:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "2625:175:5",
										"statements": [
											{
												"assignments": [
													543
												],
												"declarations": [
													{
														"constant": false,
														"id": 543,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2643:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "2635:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 542,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2635:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 548,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 537,
																		"src": "2679:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 546,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 453,
																		"src": "2660:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$453_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2672:6:5",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "2660:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$453_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2660:24:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2652:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 544,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2652:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2652:33:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2688:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "2652:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2635:57:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "2706:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2715:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "2706:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "2702:69:5",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "2719:52:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 557,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "2740:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2740:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 559,
															"nodeType": "RevertStatement",
															"src": "2733:27:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 562,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 543,
													"src": "2787:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 541,
												"id": 563,
												"nodeType": "Return",
												"src": "2780:13:5"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "2489:61:5",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "2564:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "2587:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "2575:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 536,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 535,
														"name": "ShortString",
														"nameLocations": [
															"2575:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 453,
														"src": "2575:11:5"
													},
													"referencedDeclaration": 453,
													"src": "2575:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:18:5"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "2616:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:9:5"
									},
									"scope": 664,
									"src": "2555:245:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "3023:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 578,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "3043:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3037:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 576,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3037:5:5",
																	"typeDescriptions": {}
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3037:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3050:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3037:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3059:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3037:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 602,
													"nodeType": "Block",
													"src": "3121:127:5",
													"statements": [
														{
															"expression": {
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 591,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 570,
																				"src": "3161:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 588,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 774,
																				"src": "3135:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$774_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3147:13:5",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 751,
																			"src": "3135:25:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$682_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3135:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$682_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3168:5:5",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 681,
																	"src": "3135:38:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 594,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "3176:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "3135:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 596,
															"nodeType": "ExpressionStatement",
															"src": "3135:46:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 599,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "3219:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 597,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 453,
																		"src": "3202:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$453_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3214:4:5",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "3202:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$453_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3202:35:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 575,
															"id": 601,
															"nodeType": "Return",
															"src": "3195:42:5"
														}
													]
												},
												"id": 603,
												"nodeType": "IfStatement",
												"src": "3033:215:5",
												"trueBody": {
													"id": 587,
													"nodeType": "Block",
													"src": "3063:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "3098:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 583,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "3084:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$453_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3084:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 575,
															"id": 586,
															"nodeType": "Return",
															"src": "3077:27:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "2806:103:5",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "2923:25:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2963:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "2949:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 567,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2949:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "2985:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "2970:20:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2970:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:43:5"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3010:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 572,
														"name": "ShortString",
														"nameLocations": [
															"3010:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 453,
														"src": "3010:11:5"
													},
													"referencedDeclaration": 453,
													"src": "3010:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:13:5"
									},
									"scope": 664,
									"src": "2914:340:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "3494:158:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 618,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "3527:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 616,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "3508:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$453_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3520:6:5",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "3508:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$453_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3508:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 620,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "3537:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3508:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 629,
													"nodeType": "Block",
													"src": "3609:37:5",
													"statements": [
														{
															"expression": {
																"id": 627,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "3630:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 615,
															"id": 628,
															"nodeType": "Return",
															"src": "3623:12:5"
														}
													]
												},
												"id": 630,
												"nodeType": "IfStatement",
												"src": "3504:142:5",
												"trueBody": {
													"id": 626,
													"nodeType": "Block",
													"src": "3556:47:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 623,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "3586:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 622,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "3577:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$453_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3577:15:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 615,
															"id": 625,
															"nodeType": "Return",
															"src": "3570:22:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "3260:120:5",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "3394:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3427:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3415:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 608,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 607,
														"name": "ShortString",
														"nameLocations": [
															"3415:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 453,
														"src": "3415:11:5"
													},
													"referencedDeclaration": 453,
													"src": "3415:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3449:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3434:20:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 610,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3434:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3414:41:5"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3479:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 613,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3479:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:15:5"
									},
									"scope": 664,
									"src": "3385:267:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "4132:174:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 645,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "4165:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 643,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 453,
																"src": "4146:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$453_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4158:6:5",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "4146:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$453_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4146:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 647,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "4175:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4146:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "4249:51:5",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 656,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "4276:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 654,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:5:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4283:6:5",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4270:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 642,
															"id": 659,
															"nodeType": "Return",
															"src": "4263:26:5"
														}
													]
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "4142:158:5",
												"trueBody": {
													"id": 653,
													"nodeType": "Block",
													"src": "4194:49:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 650,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "4226:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 649,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "4215:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$453_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4215:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 642,
															"id": 652,
															"nodeType": "Return",
															"src": "4208:24:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "3658:364:5",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "4036:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4071:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "4059:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 634,
														"name": "ShortString",
														"nameLocations": [
															"4059:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 453,
														"src": "4059:11:5"
													},
													"referencedDeclaration": 453,
													"src": "4059:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4093:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "4078:20:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 637,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4078:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4058:41:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "4123:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4122:9:5"
									},
									"scope": 664,
									"src": "4027:279:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 665,
							"src": "1255:3053:5",
							"usedErrors": [
								461,
								463
							],
							"usedEvents": []
						}
					],
					"src": "106:4203:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							774
						]
					},
					"id": 775,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:6",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 774,
							"linearizedBaseContracts": [
								774
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 670,
									"members": [
										{
											"constant": false,
											"id": 669,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 670,
											"src": "1300:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 668,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:6",
									"nodeType": "StructDefinition",
									"scope": 774,
									"src": "1271:49:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 673,
									"members": [
										{
											"constant": false,
											"id": 672,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 673,
											"src": "1355:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 671,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:6",
									"nodeType": "StructDefinition",
									"scope": 774,
									"src": "1326:46:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 676,
									"members": [
										{
											"constant": false,
											"id": 675,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 676,
											"src": "1407:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 674,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:6",
									"nodeType": "StructDefinition",
									"scope": 774,
									"src": "1378:49:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 679,
									"members": [
										{
											"constant": false,
											"id": 678,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 679,
											"src": "1462:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 677,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:6",
									"nodeType": "StructDefinition",
									"scope": 774,
									"src": "1433:49:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 682,
									"members": [
										{
											"constant": false,
											"id": 681,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 682,
											"src": "1516:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 680,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:6",
									"nodeType": "StructDefinition",
									"scope": 774,
									"src": "1488:47:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 685,
									"members": [
										{
											"constant": false,
											"id": 684,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 685,
											"src": "1568:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 683,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:6",
									"nodeType": "StructDefinition",
									"scope": 774,
									"src": "1541:45:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "1768:106:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:6",
													"nodeType": "YulBlock",
													"src": "1830:38:6",
													"statements": [
														{
															"nativeSrc": "1844:14:6",
															"nodeType": "YulAssignment",
															"src": "1844:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:6",
																"nodeType": "YulIdentifier",
																"src": "1854:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 692,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 688,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:6",
														"valueSize": 1
													}
												],
												"id": 694,
												"nodeType": "InlineAssembly",
												"src": "1821:47:6"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:6",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1708:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 687,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:6"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1745:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$670_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 691,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 690,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 670,
														"src": "1745:11:6"
													},
													"referencedDeclaration": 670,
													"src": "1745:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$670_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:6"
									},
									"scope": 774,
									"src": "1684:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "2056:106:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:6",
													"nodeType": "YulBlock",
													"src": "2118:38:6",
													"statements": [
														{
															"nativeSrc": "2132:14:6",
															"nodeType": "YulAssignment",
															"src": "2132:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:6",
																"nodeType": "YulIdentifier",
																"src": "2142:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 703,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 699,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:6",
														"valueSize": 1
													}
												],
												"id": 705,
												"nodeType": "InlineAssembly",
												"src": "2109:47:6"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:6",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1996:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 698,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:6"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "2033:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$673_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 702,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 701,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 673,
														"src": "2033:11:6"
													},
													"referencedDeclaration": 673,
													"src": "2033:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$673_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:6"
									},
									"scope": 774,
									"src": "1972:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "2344:106:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:6",
													"nodeType": "YulBlock",
													"src": "2406:38:6",
													"statements": [
														{
															"nativeSrc": "2420:14:6",
															"nodeType": "YulAssignment",
															"src": "2420:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:6",
																"nodeType": "YulIdentifier",
																"src": "2430:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 714,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 710,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:6",
														"valueSize": 1
													}
												],
												"id": 716,
												"nodeType": "InlineAssembly",
												"src": "2397:47:6"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:6",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2284:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 709,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:6"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "2321:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$676_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 713,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 712,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 676,
														"src": "2321:11:6"
													},
													"referencedDeclaration": 676,
													"src": "2321:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$676_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:6"
									},
									"scope": 774,
									"src": "2260:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "2632:106:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:6",
													"nodeType": "YulBlock",
													"src": "2694:38:6",
													"statements": [
														{
															"nativeSrc": "2708:14:6",
															"nodeType": "YulAssignment",
															"src": "2708:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:6",
																"nodeType": "YulIdentifier",
																"src": "2718:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 725,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 721,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:6",
														"valueSize": 1
													}
												],
												"id": 727,
												"nodeType": "InlineAssembly",
												"src": "2685:47:6"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:6",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "2572:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 720,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:6"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "2609:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$679_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 724,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 723,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 679,
														"src": "2609:11:6"
													},
													"referencedDeclaration": 679,
													"src": "2609:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$679_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:6"
									},
									"scope": 774,
									"src": "2548:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "2917:106:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:6",
													"nodeType": "YulBlock",
													"src": "2979:38:6",
													"statements": [
														{
															"nativeSrc": "2993:14:6",
															"nodeType": "YulAssignment",
															"src": "2993:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:6",
																"nodeType": "YulIdentifier",
																"src": "3003:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 736,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 732,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:6",
														"valueSize": 1
													}
												],
												"id": 738,
												"nodeType": "InlineAssembly",
												"src": "2970:47:6"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:6",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "2858:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 731,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:6"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "2895:20:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$682_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 735,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 734,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 682,
														"src": "2895:10:6"
													},
													"referencedDeclaration": 682,
													"src": "2895:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$682_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:6"
									},
									"scope": 774,
									"src": "2835:188:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "3225:112:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:6",
													"nodeType": "YulBlock",
													"src": "3287:44:6",
													"statements": [
														{
															"nativeSrc": "3301:20:6",
															"nodeType": "YulAssignment",
															"src": "3301:20:6",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:6",
																"nodeType": "YulIdentifier",
																"src": "3311:10:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 747,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 743,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:6",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 749,
												"nodeType": "InlineAssembly",
												"src": "3278:53:6"
											}
										]
									},
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:6",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3158:20:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 742,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:6"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3203:20:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$682_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 746,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 745,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 682,
														"src": "3203:10:6"
													},
													"referencedDeclaration": 682,
													"src": "3203:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$682_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:6"
									},
									"scope": 774,
									"src": "3135:202:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "3513:106:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:6",
													"nodeType": "YulBlock",
													"src": "3575:38:6",
													"statements": [
														{
															"nativeSrc": "3589:14:6",
															"nodeType": "YulAssignment",
															"src": "3589:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:6",
																"nodeType": "YulIdentifier",
																"src": "3599:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 758,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 754,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:6",
														"valueSize": 1
													}
												],
												"id": 760,
												"nodeType": "InlineAssembly",
												"src": "3566:47:6"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:6",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3455:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 753,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:6"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3492:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$685_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 757,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 756,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "3492:9:6"
													},
													"referencedDeclaration": 685,
													"src": "3492:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$685_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:6"
									},
									"scope": 774,
									"src": "3433:186:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "3816:112:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:6",
													"nodeType": "YulBlock",
													"src": "3878:44:6",
													"statements": [
														{
															"nativeSrc": "3892:20:6",
															"nodeType": "YulAssignment",
															"src": "3892:20:6",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:6",
																"nodeType": "YulIdentifier",
																"src": "3902:10:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 769,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:6",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 771,
												"nodeType": "InlineAssembly",
												"src": "3869:53:6"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:6",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "3751:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 764,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:6"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "3795:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$685_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 768,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 767,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 685,
														"src": "3795:9:6"
													},
													"referencedDeclaration": 685,
													"src": "3795:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$685_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:6"
									},
									"scope": 774,
									"src": "3729:199:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 775,
							"src": "1245:2685:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2869
						],
						"SignedMath": [
							2974
						],
						"Strings": [
							1029
						]
					},
					"id": 1030,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 776,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 778,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 2870,
							"src": "127:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 777,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2869,
										"src": "135:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 2975,
							"src": "165:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 779,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2974,
										"src": "173:10:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 781,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:7",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1029,
							"linearizedBaseContracts": [
								1029
							],
							"name": "Strings",
							"nameLocation": "259:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 784,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1029,
									"src": "273:56:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 782,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 783,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:7",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 787,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1029,
									"src": "335:42:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 785,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 786,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:7",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 794,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "520:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:7"
									},
									"src": "470:66:7"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "708:627:7",
										"statements": [
											{
												"id": 840,
												"nodeType": "UncheckedBlock",
												"src": "718:611:7",
												"statements": [
													{
														"assignments": [
															803
														],
														"declarations": [
															{
																"constant": false,
																"id": 803,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 840,
																"src": "742:14:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 802,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 810,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 806,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "770:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 804,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2869,
																		"src": "759:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2869_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:7",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2689,
																	"src": "759:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:7"
													},
													{
														"assignments": [
															812
														],
														"declarations": [
															{
																"constant": false,
																"id": 812,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:7",
																"nodeType": "VariableDeclaration",
																"scope": 840,
																"src": "794:20:7",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 811,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 817,
														"initialValue": {
															"arguments": [
																{
																	"id": 815,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "828:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 813,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:7"
													},
													{
														"assignments": [
															819
														],
														"declarations": [
															{
																"constant": false,
																"id": 819,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:7",
																"nodeType": "VariableDeclaration",
																"scope": 840,
																"src": "849:11:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 818,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 820,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:7"
													},
													{
														"AST": {
															"nativeSrc": "930:67:7",
															"nodeType": "YulBlock",
															"src": "930:67:7",
															"statements": [
																{
																	"nativeSrc": "948:35:7",
																	"nodeType": "YulAssignment",
																	"src": "948:35:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:7",
																						"nodeType": "YulLiteral",
																						"src": "971:2:7",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:7"
																				},
																				"nativeSrc": "967:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:7"
																		},
																		"nativeSrc": "955:28:7",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:7"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:7"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 812,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:7",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:7",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:7",
																"valueSize": 1
															}
														],
														"id": 821,
														"nodeType": "InlineAssembly",
														"src": "921:76:7"
													},
													{
														"body": {
															"id": 836,
															"nodeType": "Block",
															"src": "1023:269:7",
															"statements": [
																{
																	"expression": {
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:7",
																		"subExpression": {
																			"id": 823,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 819,
																			"src": "1041:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 825,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:7"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:7",
																		"nodeType": "YulBlock",
																		"src": "1124:86:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:7",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:7",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:7"
																									},
																									"nativeSrc": "1164:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:7"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:7"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:7"
																							},
																							"nativeSrc": "1159:32:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:7"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:7",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:7"
																					},
																					"nativeSrc": "1146:46:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:7"
																				},
																				"nativeSrc": "1146:46:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:7"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 784,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 819,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:7",
																			"valueSize": 1
																		},
																		{
																			"declaration": 797,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:7",
																			"valueSize": 1
																		}
																	],
																	"id": 826,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:7"
																},
																{
																	"expression": {
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 827,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 797,
																			"src": "1227:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 830,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:7"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 831,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 797,
																			"src": "1260:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 835,
																	"nodeType": "IfStatement",
																	"src": "1256:21:7",
																	"trueBody": {
																		"id": 834,
																		"nodeType": "Break",
																		"src": "1272:5:7"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 837,
														"nodeType": "WhileStatement",
														"src": "1010:282:7"
													},
													{
														"expression": {
															"id": 838,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "1312:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 801,
														"id": 839,
														"nodeType": "Return",
														"src": "1305:13:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "655:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:7"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "693:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 799,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:7"
									},
									"scope": 1029,
									"src": "637:698:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "1511:92:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 853,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "1542:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:7",
															"trueExpression": {
																"hexValue": "2d",
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 862,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 845,
																			"src": "1588:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 860,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2974,
																			"src": "1573:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2974_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:7",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2973,
																		"src": "1573:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 859,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "1564:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 850,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:7",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 849,
												"id": 866,
												"nodeType": "Return",
												"src": "1521:75:7"
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:7",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1459:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 844,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:7"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1496:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 847,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:7"
									},
									"scope": 1029,
									"src": "1435:168:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "1782:100:7",
										"statements": [
											{
												"id": 886,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 877,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "1835:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 880,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 871,
																				"src": "1854:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 878,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2869,
																				"src": "1842:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2869_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:7",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2811,
																			"src": "1842:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 876,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	888,
																	971,
																	991
																],
																"referencedDeclaration": 971,
																"src": "1823:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 875,
														"id": 885,
														"nodeType": "Return",
														"src": "1816:49:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1729:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:7"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1767:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 873,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:7"
									},
									"scope": 1029,
									"src": "1708:174:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "2095:435:7",
										"statements": [
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "2105:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 898,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 901,
												"initialValue": {
													"id": 900,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 891,
													"src": "2126:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:7"
											},
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "2141:19:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 902,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 912,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 907,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "2177:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 904,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:7"
											},
											{
												"expression": {
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 913,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "2198:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 915,
														"indexExpression": {
															"hexValue": "30",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:7"
											},
											{
												"expression": {
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 919,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "2223:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 921,
														"indexExpression": {
															"hexValue": "31",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:7"
											},
											{
												"body": {
													"id": 953,
													"nodeType": "Block",
													"src": "2293:95:7",
													"statements": [
														{
															"expression": {
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 939,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "2307:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 941,
																	"indexExpression": {
																		"id": 940,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "2314:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 942,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 784,
																		"src": "2319:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 946,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 943,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "2330:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 948,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:7"
														},
														{
															"expression": {
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 949,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "2361:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 952,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "2281:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 954,
												"initializationExpression": {
													"assignments": [
														926
													],
													"declarations": [
														{
															"constant": false,
															"id": 926,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 954,
															"src": "2253:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 925,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 932,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 928,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "2269:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:7"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:7",
														"subExpression": {
															"id": 936,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "2290:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 938,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:7"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 955,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "2401:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 964,
												"nodeType": "IfStatement",
												"src": "2397:96:7",
												"trueBody": {
													"id": 963,
													"nodeType": "Block",
													"src": "2418:75:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 959,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "2468:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 960,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "2475:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 958,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "2439:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 962,
															"nodeType": "RevertStatement",
															"src": "2432:50:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 967,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "2516:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 965,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 897,
												"id": 969,
												"nodeType": "Return",
												"src": "2502:21:7"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:7",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "2026:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "2041:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:7"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "2080:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:7"
									},
									"scope": 1029,
									"src": "2005:525:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "2762:75:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 984,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 974,
																			"src": "2807:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 982,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 980,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 987,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "2815:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 979,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															888,
															971,
															991
														],
														"referencedDeclaration": 971,
														"src": "2779:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 978,
												"id": 989,
												"nodeType": "Return",
												"src": "2772:58:7"
											}
										]
									},
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:7",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2710:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:7"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2747:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 976,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:7"
									},
									"scope": 1029,
									"src": "2689:148:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "2992:104:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1003,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "3015:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1001,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1008,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "3034:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1006,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1015,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 994,
																			"src": "3063:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1013,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1012,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1021,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 996,
																			"src": "3086:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1019,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1018,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1026,
												"nodeType": "Return",
												"src": "3002:87:7"
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:7",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2929:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 993,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2946:15:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 995,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:7"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "2986:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:7"
									},
									"scope": 1029,
									"src": "2914:182:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1030,
							"src": "251:2847:7",
							"usedErrors": [
								794
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							1377
						]
					},
					"id": 1378,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1031,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1032,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:8",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1377,
							"linearizedBaseContracts": [
								1377
							],
							"name": "ECDSA",
							"nameLocation": "352:5:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1037,
									"members": [
										{
											"id": 1033,
											"name": "NoError",
											"nameLocation": "392:7:8",
											"nodeType": "EnumValue",
											"src": "392:7:8"
										},
										{
											"id": 1034,
											"name": "InvalidSignature",
											"nameLocation": "409:16:8",
											"nodeType": "EnumValue",
											"src": "409:16:8"
										},
										{
											"id": 1035,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:8",
											"nodeType": "EnumValue",
											"src": "435:22:8"
										},
										{
											"id": 1036,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:8",
											"nodeType": "EnumValue",
											"src": "467:17:8"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:8",
									"nodeType": "EnumDefinition",
									"src": "364:126:8"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:8",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1040,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:8"
									},
									"src": "564:30:8"
								},
								{
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:8",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1045,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "699:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:8"
									},
									"src": "665:50:8"
								},
								{
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:8",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1050,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "840:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1047,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:8"
									},
									"src": "811:40:8"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "2242:653:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1065,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "2256:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1100,
													"nodeType": "Block",
													"src": "2781:108:8",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1089,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1087,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1091,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1037,
																			"src": "2815:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1037_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:8",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1035,
																		"src": "2815:35:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1037",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1095,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1055,
																					"src": "2860:9:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1096,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:8",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1093,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1098,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1064,
															"id": 1099,
															"nodeType": "Return",
															"src": "2795:83:8"
														}
													]
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "2252:637:8",
												"trueBody": {
													"id": 1086,
													"nodeType": "Block",
													"src": "2280:495:8",
													"statements": [
														{
															"assignments": [
																1070
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1070,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1086,
																	"src": "2294:9:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1069,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1071,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:8"
														},
														{
															"assignments": [
																1073
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1073,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1086,
																	"src": "2317:9:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1072,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1074,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:8"
														},
														{
															"assignments": [
																1076
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1076,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1086,
																	"src": "2340:7:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1075,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1077,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:8"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:8",
																"nodeType": "YulBlock",
																"src": "2548:171:8",
																"statements": [
																	{
																		"nativeSrc": "2566:32:8",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:8",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:8",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:8",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:8"
																					},
																					"nativeSrc": "2577:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:8"
																			},
																			"nativeSrc": "2571:27:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:8"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:8",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:8",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:8",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:8",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:8",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:8"
																					},
																					"nativeSrc": "2626:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:8"
																			},
																			"nativeSrc": "2620:27:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:8"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:8",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:8",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:8",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:8"
																							},
																							"nativeSrc": "2683:20:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:8"
																					},
																					"nativeSrc": "2677:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:8"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:8"
																			},
																			"nativeSrc": "2669:36:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:8"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:8"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1070,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1073,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1055,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1055,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1055,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1076,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:8",
																	"valueSize": 1
																}
															],
															"id": 1078,
															"nodeType": "InlineAssembly",
															"src": "2539:180:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1080,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "2750:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1081,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1076,
																		"src": "2756:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1082,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1070,
																		"src": "2759:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1083,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1073,
																		"src": "2762:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1079,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1103,
																		1183,
																		1291
																	],
																	"referencedDeclaration": 1291,
																	"src": "2739:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1064,
															"id": 1085,
															"nodeType": "Return",
															"src": "2732:32:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:8",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "2149:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1052,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "2163:22:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1054,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:8"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "2210:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "2219:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1037",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1060,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1059,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1037,
														"src": "2219:12:8"
													},
													"referencedDeclaration": 1037,
													"src": "2219:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1037",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "2233:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1062,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:8"
									},
									"scope": 1377,
									"src": "2129:766:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "3789:168:8",
										"statements": [
											{
												"assignments": [
													1114,
													1117,
													1119
												],
												"declarations": [
													{
														"constant": false,
														"id": 1114,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "3800:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1113,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "3819:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1037",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1116,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1115,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1037,
																"src": "3819:12:8"
															},
															"referencedDeclaration": 1037,
															"src": "3819:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1037",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1119,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1132,
														"src": "3839:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1118,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1124,
												"initialValue": {
													"arguments": [
														{
															"id": 1121,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "3870:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1122,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "3876:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1120,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1103,
															1183,
															1291
														],
														"referencedDeclaration": 1103,
														"src": "3859:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1126,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "3908:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1037",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1127,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "3915:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1037",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1125,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1376,
														"src": "3896:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1037_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:8"
											},
											{
												"expression": {
													"id": 1130,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1114,
													"src": "3941:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1112,
												"id": 1131,
												"nodeType": "Return",
												"src": "3934:16:8"
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:8",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3719:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1105,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3733:22:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1107,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:8"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3780:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:8"
									},
									"scope": 1377,
									"src": "3702:255:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "4285:342:8",
										"statements": [
											{
												"id": 1181,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:8",
												"statements": [
													{
														"assignments": [
															1151
														],
														"declarations": [
															{
																"constant": false,
																"id": 1151,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1181,
																"src": "4319:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1150,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1158,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1152,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "4331:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1153,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:8"
													},
													{
														"assignments": [
															1160
														],
														"declarations": [
															{
																"constant": false,
																"id": 1160,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1181,
																"src": "4522:7:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1159,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1173,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1165,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1140,
																							"src": "4547:2:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1164,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1163,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:8",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1166,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:8",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1167,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1169,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1161,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1175,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "4596:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1176,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "4602:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1177,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "4605:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1178,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "4608:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1174,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1103,
																	1183,
																	1291
																],
																"referencedDeclaration": 1291,
																"src": "4585:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1149,
														"id": 1180,
														"nodeType": "Return",
														"src": "4578:32:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:8",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "4193:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "4207:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "4218:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1139,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:8"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "4253:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "4262:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1037",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1145,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1144,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1037,
														"src": "4262:12:8"
													},
													"referencedDeclaration": 1037,
													"src": "4262:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1037",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "4276:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1147,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:8"
									},
									"scope": 1377,
									"src": "4173:454:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "4840:164:8",
										"statements": [
											{
												"assignments": [
													1196,
													1199,
													1201
												],
												"declarations": [
													{
														"constant": false,
														"id": 1196,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1215,
														"src": "4851:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1195,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1199,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1215,
														"src": "4870:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1037",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1198,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1197,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1037,
																"src": "4870:12:8"
															},
															"referencedDeclaration": 1037,
															"src": "4870:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1037",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1201,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1215,
														"src": "4890:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1200,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1207,
												"initialValue": {
													"arguments": [
														{
															"id": 1203,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "4921:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1204,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "4927:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1205,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1190,
															"src": "4930:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1202,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1103,
															1183,
															1291
														],
														"referencedDeclaration": 1183,
														"src": "4910:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1209,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "4955:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1037",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1210,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "4962:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1037",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1208,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1376,
														"src": "4943:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1037_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:8"
											},
											{
												"expression": {
													"id": 1213,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1196,
													"src": "4988:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1194,
												"id": 1214,
												"nodeType": "Return",
												"src": "4981:16:8"
											}
										]
									},
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:8",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4771:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1185,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4785:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1187,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4796:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1189,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:8"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4831:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:8"
									},
									"scope": 1377,
									"src": "4754:250:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "5298:1372:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1237,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1225,
																"src": "6194:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1235,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1251,
												"nodeType": "IfStatement",
												"src": "6182:164:8",
												"trueBody": {
													"id": 1250,
													"nodeType": "Block",
													"src": "6267:79:8",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1242,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1241,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1245,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1037,
																			"src": "6301:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1037_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:8",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1036,
																		"src": "6301:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1037",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1247,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "6333:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1248,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1234,
															"id": 1249,
															"nodeType": "Return",
															"src": "6281:54:8"
														}
													]
												}
											},
											{
												"assignments": [
													1253
												],
												"declarations": [
													{
														"constant": false,
														"id": 1253,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1290,
														"src": "6440:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1252,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1260,
												"initialValue": {
													"arguments": [
														{
															"id": 1255,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "6467:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1256,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "6473:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1257,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "6476:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1258,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "6479:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1254,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1261,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "6495:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1262,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1280,
												"nodeType": "IfStatement",
												"src": "6491:113:8",
												"trueBody": {
													"id": 1279,
													"nodeType": "Block",
													"src": "6517:87:8",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1269,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1267,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1271,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1037,
																			"src": "6551:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1037_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:8",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1034,
																		"src": "6551:29:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1037",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1273,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1277,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1234,
															"id": 1278,
															"nodeType": "Return",
															"src": "6531:62:8"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1281,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "6622:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1282,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "6630:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1037_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:8",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1033,
															"src": "6630:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1037",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1284,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1288,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1234,
												"id": 1289,
												"nodeType": "Return",
												"src": "6614:49:8"
											}
										]
									},
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:8",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "5169:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "5191:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1220,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "5208:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1222,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "5227:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1224,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:8"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "5266:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "5275:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1037",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1230,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1229,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1037,
														"src": "5275:12:8"
													},
													"referencedDeclaration": 1037,
													"src": "5275:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1037",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "5289:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:8"
									},
									"scope": 1377,
									"src": "5140:1530:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "6897:166:8",
										"statements": [
											{
												"assignments": [
													1306,
													1309,
													1311
												],
												"declarations": [
													{
														"constant": false,
														"id": 1306,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "6908:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1305,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1309,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "6927:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1037",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1307,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1037,
																"src": "6927:12:8"
															},
															"referencedDeclaration": 1037,
															"src": "6927:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1037",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1311,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1326,
														"src": "6947:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1310,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1318,
												"initialValue": {
													"arguments": [
														{
															"id": 1313,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "6978:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1314,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "6984:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1315,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "6987:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1316,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "6990:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1312,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1103,
															1183,
															1291
														],
														"referencedDeclaration": 1291,
														"src": "6967:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1320,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "7014:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1037",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1321,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "7021:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1037",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1319,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1376,
														"src": "7002:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1037_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:8"
											},
											{
												"expression": {
													"id": 1324,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1306,
													"src": "7047:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1304,
												"id": 1325,
												"nodeType": "Return",
												"src": "7040:16:8"
											}
										]
									},
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:8",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "6820:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1293,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "6834:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1295,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "6843:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1297,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "6854:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:8"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "6888:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:8"
									},
									"scope": 1377,
									"src": "6803:260:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "7268:460:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1037",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1336,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "7282:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1037",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1337,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "7291:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1037_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:8",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1033,
														"src": "7291:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1037",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1037",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1342,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "7378:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1037",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1343,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "7387:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1037_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:8",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1034,
															"src": "7387:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1037",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1037",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1350,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "7483:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1037",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1351,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "7492:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1037_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:8",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1035,
																"src": "7492:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1037",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1037",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1362,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "7617:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1037",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1363,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "7626:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1037_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:8",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1036,
																	"src": "7626:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1037",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1371,
															"nodeType": "IfStatement",
															"src": "7613:109:8",
															"trueBody": {
																"id": 1370,
																"nodeType": "Block",
																"src": "7658:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1367,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1333,
																					"src": "7702:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1366,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1050,
																				"src": "7679:22:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																					"typeString": "function (bytes32) pure returns (error)"
																				}
																			},
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1369,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:8"
																	}
																]
															}
														},
														"id": 1372,
														"nodeType": "IfStatement",
														"src": "7479:243:8",
														"trueBody": {
															"id": 1361,
															"nodeType": "Block",
															"src": "7529:78:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1357,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1333,
																						"src": "7586:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 1356,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1355,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1354,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1045,
																			"src": "7550:27:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (uint256) pure returns (error)"
																			}
																		},
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1360,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:8"
																}
															]
														}
													},
													"id": 1373,
													"nodeType": "IfStatement",
													"src": "7374:348:8",
													"trueBody": {
														"id": 1349,
														"nodeType": "Block",
														"src": "7418:55:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1346,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "7439:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1348,
																"nodeType": "RevertStatement",
																"src": "7432:30:8"
															}
														]
													}
												},
												"id": 1374,
												"nodeType": "IfStatement",
												"src": "7278:444:8",
												"trueBody": {
													"id": 1341,
													"nodeType": "Block",
													"src": "7313:55:8",
													"statements": [
														{
															"functionReturnParameters": 1335,
															"id": 1340,
															"nodeType": "Return",
															"src": "7327:7:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:8",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "7217:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1037",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1329,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1037,
														"src": "7217:12:8"
													},
													"referencedDeclaration": 1037,
													"src": "7217:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1037",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "7237:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1332,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:8"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:8"
									},
									"scope": 1377,
									"src": "7196:532:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1378,
							"src": "344:7386:8",
							"usedErrors": [
								1040,
								1045,
								1050
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
					"exportedSymbols": {
						"EIP712": [
							1604
						],
						"IERC5267": [
							417
						],
						"MessageHashUtils": [
							1678
						],
						"ShortString": [
							453
						],
						"ShortStrings": [
							664
						]
					},
					"id": 1605,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1379,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
							"file": "./MessageHashUtils.sol",
							"id": 1381,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1605,
							"sourceUnit": 1679,
							"src": "139:56:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1380,
										"name": "MessageHashUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1678,
										"src": "147:16:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ShortStrings.sol",
							"file": "../ShortStrings.sol",
							"id": 1384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1605,
							"sourceUnit": 665,
							"src": "196:62:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1382,
										"name": "ShortStrings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 664,
										"src": "204:12:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1383,
										"name": "ShortString",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 453,
										"src": "218:11:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC5267.sol",
							"file": "../../interfaces/IERC5267.sol",
							"id": 1386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1605,
							"sourceUnit": 418,
							"src": "259:55:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1385,
										"name": "IERC5267",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 417,
										"src": "267:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1388,
										"name": "IERC5267",
										"nameLocations": [
											"1988:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 417,
										"src": "1988:8:9"
									},
									"id": 1389,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:8:9"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1387,
								"nodeType": "StructuredDocumentation",
								"src": "316:1643:9",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 1604,
							"linearizedBaseContracts": [
								1604,
								417
							],
							"name": "EIP712",
							"nameLocation": "1978:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1391,
									"libraryName": {
										"id": 1390,
										"name": "ShortStrings",
										"nameLocations": [
											"2009:12:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 664,
										"src": "2009:12:9"
									},
									"nodeType": "UsingForDirective",
									"src": "2003:25:9"
								},
								{
									"constant": true,
									"id": 1396,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "2059:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1604,
									"src": "2034:140:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1392,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2034:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 1394,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2089:84:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 1393,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2079:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1395,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2079:95:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1398,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "2399:22:9",
									"nodeType": "VariableDeclaration",
									"scope": 1604,
									"src": "2373:48:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1397,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2373:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1400,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "2453:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1604,
									"src": "2427:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2427:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1402,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "2499:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1604,
									"src": "2473:37:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1401,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2473:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1404,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "2543:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1604,
									"src": "2517:37:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1403,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2517:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1406,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "2586:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1604,
									"src": "2560:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1405,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2560:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1409,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "2637:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1604,
									"src": "2607:35:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 1408,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1407,
											"name": "ShortString",
											"nameLocations": [
												"2607:11:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 453,
											"src": "2607:11:9"
										},
										"referencedDeclaration": 453,
										"src": "2607:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1412,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "2678:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1604,
									"src": "2648:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 1411,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1410,
											"name": "ShortString",
											"nameLocations": [
												"2648:11:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 453,
											"src": "2648:11:9"
										},
										"referencedDeclaration": 453,
										"src": "2648:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1414,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "2707:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1604,
									"src": "2692:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1413,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2692:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1416,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "2741:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1604,
									"src": "2726:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1415,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2726:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "3383:376:9",
										"statements": [
											{
												"expression": {
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1424,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "3393:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1427,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1414,
																"src": "3432:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1425,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "3401:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:25:9",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 605,
															"src": "3401:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$453_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3401:45:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
															"typeString": "ShortString"
														}
													},
													"src": "3393:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
														"typeString": "ShortString"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "3393:53:9"
											},
											{
												"expression": {
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1431,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "3456:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1434,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1416,
																"src": "3501:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1432,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "3467:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3475:25:9",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 605,
															"src": "3467:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$453_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3467:51:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
															"typeString": "ShortString"
														}
													},
													"src": "3456:62:9",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
														"typeString": "ShortString"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "3456:62:9"
											},
											{
												"expression": {
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1438,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "3528:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1442,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "3558:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3552:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1440,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3552:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3552:11:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1439,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3542:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3542:22:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3528:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "3528:36:9"
											},
											{
												"expression": {
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1447,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "3574:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1451,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1421,
																		"src": "3607:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3601:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1449,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3601:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3601:14:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1448,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "3591:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3591:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3574:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1455,
												"nodeType": "ExpressionStatement",
												"src": "3574:42:9"
											},
											{
												"expression": {
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1456,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "3627:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1457,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3644:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3650:7:9",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "3644:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3627:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "3627:30:9"
											},
											{
												"expression": {
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1461,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "3667:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1462,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "3692:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3692:23:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3667:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1465,
												"nodeType": "ExpressionStatement",
												"src": "3667:48:9"
											},
											{
												"expression": {
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1466,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "3725:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1469,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3747:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$1604",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$1604",
																	"typeString": "contract EIP712"
																}
															],
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3739:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3739:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3739:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3725:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "3725:27:9"
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "2764:559:9",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 1474,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3354:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "3340:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3374:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "3360:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1420,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3360:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:43:9"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3383:0:9"
									},
									"scope": 1604,
									"src": "3328:431:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "3907:200:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1482,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3929:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$1604",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$1604",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3921:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1480,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3921:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3921:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1484,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "3938:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3921:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1486,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3953:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3959:7:9",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "3953:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1488,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "3970:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3953:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3921:63:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1497,
													"nodeType": "Block",
													"src": "4046:55:9",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1494,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "4067:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4067:23:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1479,
															"id": 1496,
															"nodeType": "Return",
															"src": "4060:30:9"
														}
													]
												},
												"id": 1498,
												"nodeType": "IfStatement",
												"src": "3917:184:9",
												"trueBody": {
													"id": 1493,
													"nodeType": "Block",
													"src": "3986:54:9",
													"statements": [
														{
															"expression": {
																"id": 1491,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1398,
																"src": "4007:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1479,
															"id": 1492,
															"nodeType": "Return",
															"src": "4000:29:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "3765:75:9",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "3854:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3872:2:9"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "3898:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3897:9:9"
									},
									"scope": 1604,
									"src": "3845:262:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "4177:115:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1508,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1396,
																	"src": "4215:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1509,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "4226:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1510,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "4239:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 1511,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4255:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4261:7:9",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "4255:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1515,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4278:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$1604",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$1604",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4270:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1513,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4270:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4270:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1506,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4204:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4208:6:9",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "4204:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4204:80:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1505,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4194:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:91:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1504,
												"id": 1519,
												"nodeType": "Return",
												"src": "4187:98:9"
											}
										]
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "4122:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4143:2:9"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "4168:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1502,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:9:9"
									},
									"scope": 1604,
									"src": "4113:179:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "5003:90:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1531,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1500,
																"src": "5053:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5053:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1533,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "5075:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 1529,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "5020:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$1678_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5037:15:9",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1677,
														"src": "5020:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5020:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1528,
												"id": 1535,
												"nodeType": "Return",
												"src": "5013:73:9"
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "4298:614:9",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "4926:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "4951:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4943:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1523,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4943:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4942:20:9"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4994:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1526,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4993:9:9"
									},
									"scope": 1604,
									"src": "4917:176:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										416
									],
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "5472:229:9",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5503:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1557,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "5533:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5533:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1559,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "5560:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5560:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1561,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5590:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5596:7:9",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "5590:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1565,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5625:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$1604",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$1604",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5617:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1563,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5617:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5617:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5652:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5644:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1567,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5644:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5644:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5682:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "5668:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 1571,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5672:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1572,
																	"nodeType": "ArrayTypeName",
																	"src": "5672:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5668:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 1576,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5489:205:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 1555,
												"id": 1577,
												"nodeType": "Return",
												"src": "5482:212:9"
											}
										]
									},
									"documentation": {
										"id": 1538,
										"nodeType": "StructuredDocumentation",
										"src": "5099:40:9",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "5153:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5165:2:9"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "5249:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "5242:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 1540,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "5242:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5283:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "5269:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1542,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5269:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "5315:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "5301:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5301:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "5344:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "5336:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5336:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "5373:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "5365:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5365:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "5412:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "5404:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1550,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "5447:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "5430:27:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1552,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5430:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1553,
													"nodeType": "ArrayTypeName",
													"src": "5430:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5228:239:9"
									},
									"scope": 1604,
									"src": "5144:557:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "6082:65:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1587,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "6126:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 1585,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "6099:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																"typeString": "ShortString"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6105:20:9",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 632,
														"src": "6099:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$453_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$453_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6099:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1584,
												"id": 1589,
												"nodeType": "Return",
												"src": "6092:48:9"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "5707:256:9",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "6030:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6041:2:9"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "6067:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6067:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:15:9"
									},
									"scope": 1604,
									"src": "6021:126:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "6537:71:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1599,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "6584:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 1597,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "6554:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$453",
																"typeString": "ShortString"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6563:20:9",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 632,
														"src": "6554:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$453_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$453_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6554:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1596,
												"id": 1601,
												"nodeType": "Return",
												"src": "6547:54:9"
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "6153:262:9",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "6482:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6496:2:9"
									},
									"returnParameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "6522:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1594,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6522:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:15:9"
									},
									"scope": 1604,
									"src": "6473:135:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1605,
							"src": "1960:4650:9",
							"usedErrors": [
								461,
								463
							],
							"usedEvents": [
								397
							]
						}
					],
					"src": "113:6498:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
					"exportedSymbols": {
						"MessageHashUtils": [
							1678
						],
						"Strings": [
							1029
						]
					},
					"id": 1679,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1606,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../Strings.sol",
							"id": 1608,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1679,
							"sourceUnit": 1030,
							"src": "149:39:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1607,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1029,
										"src": "157:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1609,
								"nodeType": "StructuredDocumentation",
								"src": "190:330:10",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 1678,
							"linearizedBaseContracts": [
								1678
							],
							"name": "MessageHashUtils",
							"nameLocation": "529:16:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "1314:368:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1376:300:10",
													"nodeType": "YulBlock",
													"src": "1376:300:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1397:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1397:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "1403:34:10",
																		"nodeType": "YulLiteral",
																		"src": "1403:34:10",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:10"
																},
																"nativeSrc": "1390:48:10",
																"nodeType": "YulFunctionCall",
																"src": "1390:48:10"
															},
															"nativeSrc": "1390:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "1390:48:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1499:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1499:4:10",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "1505:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "1505:11:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1492:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1492:6:10"
																},
																"nativeSrc": "1492:25:10",
																"nodeType": "YulFunctionCall",
																"src": "1492:25:10"
															},
															"nativeSrc": "1492:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "1492:25:10"
														},
														{
															"nativeSrc": "1571:31:10",
															"nodeType": "YulAssignment",
															"src": "1571:31:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1591:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:10",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1597:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1597:4:10",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1581:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1581:9:10"
																},
																"nativeSrc": "1581:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1581:21:10"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "1571:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1615,
														"isOffset": false,
														"isSlot": false,
														"src": "1571:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1612,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:11:10",
														"valueSize": 1
													}
												],
												"id": 1617,
												"nodeType": "InlineAssembly",
												"src": "1367:309:10"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "552:665:10",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "1231:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "1262:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1254:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1611,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1254:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1253:21:10"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "1306:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "1298:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1614,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:16:10"
									},
									"scope": 1678,
									"src": "1222:460:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1644,
										"nodeType": "Block",
										"src": "2234:143:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2286:32:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1636,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1622,
																						"src": "2343:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 1637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2351:6:10",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "2343:14:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1634,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1029,
																					"src": "2326:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1029_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 1635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2334:8:10",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 842,
																				"src": "2326:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 1638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2326:32:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2320:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1632,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2320:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2320:39:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 1640,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "2361:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2273:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1628,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2279:6:10",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "2273:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2273:96:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1627,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2263:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2263:107:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1626,
												"id": 1643,
												"nodeType": "Return",
												"src": "2244:126:10"
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "1688:455:10",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 1645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2157:22:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "2193:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "2180:20:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1621,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:22:10"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "2225:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1624,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:9:10"
									},
									"scope": 1678,
									"src": "2148:229:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1664,
										"nodeType": "Block",
										"src": "2831:80:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2875:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 1659,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1648,
																	"src": "2887:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1660,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "2898:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1656,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2858:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2862:12:10",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2858:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2858:45:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1655,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2848:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2848:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1654,
												"id": 1663,
												"nodeType": "Return",
												"src": "2841:63:10"
											}
										]
									},
									"documentation": {
										"id": 1646,
										"nodeType": "StructuredDocumentation",
										"src": "2383:332:10",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 1665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "2729:31:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "2769:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "2761:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2761:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2793:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "2780:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1649,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:38:10"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1665,
												"src": "2822:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1652,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2822:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2821:9:10"
									},
									"scope": 1678,
									"src": "2720:191:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "3462:292:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3524:224:10",
													"nodeType": "YulBlock",
													"src": "3524:224:10",
													"statements": [
														{
															"nativeSrc": "3538:22:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3538:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3555:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3555:4:10",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3549:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3549:5:10"
																},
																"nativeSrc": "3549:11:10",
																"nodeType": "YulFunctionCall",
																"src": "3549:11:10"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "3542:3:10",
																	"nodeType": "YulTypedName",
																	"src": "3542:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3580:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:10"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "3585:10:10",
																		"nodeType": "YulLiteral",
																		"src": "3585:10:10",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3573:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3573:6:10"
																},
																"nativeSrc": "3573:23:10",
																"nodeType": "YulFunctionCall",
																"src": "3573:23:10"
															},
															"nativeSrc": "3573:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "3573:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3620:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3620:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:10",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:10",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3616:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:10"
																		},
																		"nativeSrc": "3616:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3616:14:10"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "3632:15:10",
																		"nodeType": "YulIdentifier",
																		"src": "3632:15:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3609:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:10"
																},
																"nativeSrc": "3609:39:10",
																"nodeType": "YulFunctionCall",
																"src": "3609:39:10"
															},
															"nativeSrc": "3609:39:10",
															"nodeType": "YulExpressionStatement",
															"src": "3609:39:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "3672:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3672:3:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:4:10",
																				"nodeType": "YulLiteral",
																				"src": "3677:4:10",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3668:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:10"
																		},
																		"nativeSrc": "3668:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3668:14:10"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "3684:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "3684:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3661:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:10"
																},
																"nativeSrc": "3661:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3661:34:10"
															},
															"nativeSrc": "3661:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3661:34:10"
														},
														{
															"nativeSrc": "3708:30:10",
															"nodeType": "YulAssignment",
															"src": "3708:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3728:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3728:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3733:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3733:4:10",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3718:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "3718:9:10"
																},
																"nativeSrc": "3718:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3718:20:10"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "3708:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3708:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1673,
														"isOffset": false,
														"isSlot": false,
														"src": "3708:6:10",
														"valueSize": 1
													},
													{
														"declaration": 1668,
														"isOffset": false,
														"isSlot": false,
														"src": "3632:15:10",
														"valueSize": 1
													},
													{
														"declaration": 1670,
														"isOffset": false,
														"isSlot": false,
														"src": "3684:10:10",
														"valueSize": 1
													}
												],
												"id": 1675,
												"nodeType": "InlineAssembly",
												"src": "3515:233:10"
											}
										]
									},
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "2917:431:10",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "3362:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "3386:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3378:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1667,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3378:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "3411:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3403:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1669,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3377:45:10"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "3454:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3446:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1672,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3445:16:10"
									},
									"scope": 1678,
									"src": "3353:401:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1679,
							"src": "521:3235:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3634:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
					"exportedSymbols": {
						"ECDSA": [
							1377
						],
						"IERC1271": [
							392
						],
						"SignatureChecker": [
							1779
						]
					},
					"id": 1780,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1680,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "./ECDSA.sol",
							"id": 1682,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1780,
							"sourceUnit": 1378,
							"src": "149:34:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1681,
										"name": "ECDSA",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1377,
										"src": "157:5:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1271.sol",
							"file": "../../interfaces/IERC1271.sol",
							"id": 1684,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1780,
							"sourceUnit": 393,
							"src": "184:55:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1683,
										"name": "IERC1271",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 392,
										"src": "192:8:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignatureChecker",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1685,
								"nodeType": "StructuredDocumentation",
								"src": "241:289:11",
								"text": " @dev Signature verification helper that can be used instead of `ECDSA.recover` to seamlessly support both ECDSA\n signatures from externally owned accounts (EOAs) as well as ERC1271 signatures from smart contract wallets like\n Argent and Safe Wallet (previously Gnosis Safe)."
							},
							"fullyImplemented": true,
							"id": 1779,
							"linearizedBaseContracts": [
								1779
							],
							"name": "SignatureChecker",
							"nameLocation": "539:16:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "1151:256:11",
										"statements": [
											{
												"assignments": [
													1698,
													1701,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1698,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "1170:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1725,
														"src": "1162:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1697,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1162:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1701,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "1200:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1725,
														"src": "1181:24:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1037",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1700,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1699,
																"name": "ECDSA.RecoverError",
																"nameLocations": [
																	"1181:5:11",
																	"1187:12:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1037,
																"src": "1181:18:11"
															},
															"referencedDeclaration": 1037,
															"src": "1181:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1037",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1707,
												"initialValue": {
													"arguments": [
														{
															"id": 1704,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1690,
															"src": "1228:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1705,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "1234:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1702,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "1211:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$1377_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1217:10:11",
														"memberName": "tryRecover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1103,
														"src": "1211:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1211:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1037_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1161:83:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_RecoverError_$1037",
																		"typeString": "enum ECDSA.RecoverError"
																	},
																	"id": 1712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1708,
																		"name": "error",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1701,
																		"src": "1274:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1037",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"expression": {
																				"id": 1709,
																				"name": "ECDSA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1377,
																				"src": "1283:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ECDSA_$1377_$",
																					"typeString": "type(library ECDSA)"
																				}
																			},
																			"id": 1710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1289:12:11",
																			"memberName": "RecoverError",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1037,
																			"src": "1283:18:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1037_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1302:7:11",
																		"memberName": "NoError",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1033,
																		"src": "1283:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1037",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	"src": "1274:35:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1713,
																		"name": "recovered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1698,
																		"src": "1313:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1714,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1688,
																		"src": "1326:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1313:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1274:58:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1717,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1273:60:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1719,
																"name": "signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "1376:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1720,
																"name": "hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "1384:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1721,
																"name": "signature",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1692,
																"src": "1390:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1718,
															"name": "isValidERC1271SignatureNow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1778,
															"src": "1349:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (address,bytes32,bytes memory) view returns (bool)"
															}
														},
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1349:51:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1273:127:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1696,
												"id": 1724,
												"nodeType": "Return",
												"src": "1254:146:11"
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "562:472:11",
										"text": " @dev Checks if a signature is valid for a given signer and data hash. If the signer is a smart contract, the\n signature is validated against that smart contract using ERC1271, otherwise it's validated using `ECDSA.recover`.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."
									},
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidSignatureNow",
									"nameLocation": "1048:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1076:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1068:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1092:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1084:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1689,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1111:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1098:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1691,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1098:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1067:54:11"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "1145:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1694,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:11"
									},
									"scope": 1779,
									"src": "1039:368:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1777,
										"nodeType": "Block",
										"src": "1962:309:11",
										"statements": [
											{
												"assignments": [
													1739,
													1741
												],
												"declarations": [
													{
														"constant": false,
														"id": 1739,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1978:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1777,
														"src": "1973:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1738,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1973:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1741,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "2000:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1777,
														"src": "1987:19:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1740,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1987:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1753,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1746,
																		"name": "IERC1271",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "2056:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1271_$392_$",
																			"typeString": "type(contract IERC1271)"
																		}
																	},
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2065:16:11",
																	"memberName": "isValidSignature",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 391,
																	"src": "2056:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1748,
																			"name": "hash",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "2084:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		{
																			"id": 1749,
																			"name": "signature",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1733,
																			"src": "2090:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"id": 1750,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2083:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(bytes32,bytes memory)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$",
																		"typeString": "tuple(bytes32,bytes memory)"
																	}
																],
																"expression": {
																	"id": 1744,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2041:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2045:10:11",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2041:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2041:60:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1742,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "2010:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2017:10:11",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "2010:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2010:101:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1972:139:11"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1754,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "2129:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1755,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1741,
																			"src": "2152:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2159:6:11",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2152:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "3332",
																		"id": 1757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2169:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"src": "2152:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2129:42:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1762,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1741,
																			"src": "2198:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"components": [
																				{
																					"id": 1764,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2207:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 1763,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "2207:7:11",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"id": 1765,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2206:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			}
																		],
																		"expression": {
																			"id": 1760,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2187:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2191:6:11",
																		"memberName": "decode",
																		"nodeType": "MemberAccess",
																		"src": "2187:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2187:29:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1769,
																					"name": "IERC1271",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 392,
																					"src": "2228:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC1271_$392_$",
																						"typeString": "type(contract IERC1271)"
																					}
																				},
																				"id": 1770,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2237:16:11",
																				"memberName": "isValidSignature",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 391,
																				"src": "2228:25:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_declaration_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function IERC1271.isValidSignature(bytes32,bytes memory) view returns (bytes4)"
																				}
																			},
																			"id": 1771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2254:8:11",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2228:34:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2220:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 1767,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "2220:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2220:43:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2187:76:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2129:134:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1775,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2128:136:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1776,
												"nodeType": "Return",
												"src": "2121:143:11"
											}
										]
									},
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "1413:395:11",
										"text": " @dev Checks if a signature is valid for a given signer and data hash. The signature is validated\n against the signer smart contract using ERC1271.\n NOTE: Unlike ECDSA signatures, contract signatures are revocable, and the outcome of this function can thus\n change through time. It could return true at block N and false at block N+1 (or the opposite)."
									},
									"id": 1778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValidERC1271SignatureNow",
									"nameLocation": "1822:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "1866:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "1858:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1858:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "1890:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "1882:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "1917:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "1904:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1848:84:11"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1778,
												"src": "1956:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1735,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1956:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:6:11"
									},
									"scope": 1779,
									"src": "1813:458:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1780,
							"src": "531:1742:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:2151:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1803
						],
						"IERC165": [
							1815
						]
					},
					"id": 1804,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1781,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1783,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1804,
							"sourceUnit": 1816,
							"src": "140:38:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1782,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1815,
										"src": "148:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1785,
										"name": "IERC165",
										"nameLocations": [
											"687:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1815,
										"src": "687:7:12"
									},
									"id": 1786,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:12"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1784,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:12",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1803,
							"linearizedBaseContracts": [
								1803,
								1815
							],
							"name": "ERC165",
							"nameLocation": "677:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1814
									],
									"body": {
										"id": 1801,
										"nodeType": "Block",
										"src": "844:64:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1794,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1789,
														"src": "861:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1796,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "881:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1815_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1815_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1795,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1815",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:12",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1793,
												"id": 1800,
												"nodeType": "Return",
												"src": "854:47:12"
											}
										]
									},
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "789:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1788,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:12"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "838:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1791,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:12"
									},
									"scope": 1803,
									"src": "762:146:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1804,
							"src": "659:251:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1815
						]
					},
					"id": 1816,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1805,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1806,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:13",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1815,
							"linearizedBaseContracts": [
								1815
							],
							"name": "IERC165",
							"nameLocation": "431:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:13",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "817:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1808,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:13"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "860:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1811,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:13"
									},
									"scope": 1815,
									"src": "790:76:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1816,
							"src": "421:447:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2869
						]
					},
					"id": 2870,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1817,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1818,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:14",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2869,
							"linearizedBaseContracts": [
								2869
							],
							"name": "Math",
							"nameLocation": "211:4:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:14",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1821,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:14"
									},
									"src": "277:29:14"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1826,
									"members": [
										{
											"id": 1822,
											"name": "Floor",
											"nameLocation": "336:5:14",
											"nodeType": "EnumValue",
											"src": "336:5:14"
										},
										{
											"id": 1823,
											"name": "Ceil",
											"nameLocation": "379:4:14",
											"nodeType": "EnumValue",
											"src": "379:4:14"
										},
										{
											"id": 1824,
											"name": "Trunc",
											"nameLocation": "421:5:14",
											"nodeType": "EnumValue",
											"src": "421:5:14"
										},
										{
											"id": 1825,
											"name": "Expand",
											"nameLocation": "451:6:14",
											"nodeType": "EnumValue",
											"src": "451:6:14"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:14",
									"nodeType": "EnumDefinition",
									"src": "312:169:14"
								},
								{
									"body": {
										"id": 1857,
										"nodeType": "Block",
										"src": "661:140:14",
										"statements": [
											{
												"id": 1856,
												"nodeType": "UncheckedBlock",
												"src": "671:124:14",
												"statements": [
													{
														"assignments": [
															1839
														],
														"declarations": [
															{
																"constant": false,
																"id": 1839,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 1856,
																"src": "695:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1838,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1843,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1840,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "707:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1841,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "711:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1844,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1839,
																"src": "730:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1845,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "734:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1851,
														"nodeType": "IfStatement",
														"src": "726:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1849,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1837,
															"id": 1850,
															"nodeType": "Return",
															"src": "737:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1853,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "782:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1854,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1837,
														"id": 1855,
														"nodeType": "Return",
														"src": "768:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1827,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:14",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "601:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "612:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:14"
									},
									"returnParameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "646:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "652:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:14"
									},
									"scope": 2869,
									"src": "585:216:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "984:113:14",
										"statements": [
											{
												"id": 1884,
												"nodeType": "UncheckedBlock",
												"src": "994:97:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1870,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "1022:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1871,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "1026:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1877,
														"nodeType": "IfStatement",
														"src": "1018:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1875,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1869,
															"id": 1876,
															"nodeType": "Return",
															"src": "1029:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1879,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1861,
																		"src": "1074:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1880,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "1078:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1882,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1869,
														"id": 1883,
														"nodeType": "Return",
														"src": "1060:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1859,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:14",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "924:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "935:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:14"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "969:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1865,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "975:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:14"
									},
									"scope": 2869,
									"src": "908:189:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1927,
										"nodeType": "Block",
										"src": "1283:417:14",
										"statements": [
											{
												"id": 1926,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1898,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "1551:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1905,
														"nodeType": "IfStatement",
														"src": "1547:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1903,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1897,
															"id": 1904,
															"nodeType": "Return",
															"src": "1559:16:14"
														}
													},
													{
														"assignments": [
															1907
														],
														"declarations": [
															{
																"constant": false,
																"id": 1907,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 1926,
																"src": "1589:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1906,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1911,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1908,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "1601:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1909,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "1605:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1912,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "1624:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1913,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1889,
																	"src": "1628:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1915,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "1633:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1921,
														"nodeType": "IfStatement",
														"src": "1620:33:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1919,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1897,
															"id": 1920,
															"nodeType": "Return",
															"src": "1636:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1923,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "1681:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1924,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1897,
														"id": 1925,
														"nodeType": "Return",
														"src": "1667:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:14",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1223:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1234:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:14"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1268:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1274:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:14"
									},
									"scope": 2869,
									"src": "1207:493:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "1887:114:14",
										"statements": [
											{
												"id": 1954,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1940,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1933,
																"src": "1925:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1947,
														"nodeType": "IfStatement",
														"src": "1921:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1945,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1939,
															"id": 1946,
															"nodeType": "Return",
															"src": "1933:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1949,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "1978:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1950,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1933,
																		"src": "1982:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1952,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1939,
														"id": 1953,
														"nodeType": "Return",
														"src": "1964:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:14",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "1827:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "1838:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:14"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "1872:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "1878:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:14"
									},
									"scope": 2869,
									"src": "1811:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "2198:114:14",
										"statements": [
											{
												"id": 1982,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1968,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1961,
																"src": "2236:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1975,
														"nodeType": "IfStatement",
														"src": "2232:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1973,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1967,
															"id": 1974,
															"nodeType": "Return",
															"src": "2244:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1977,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1959,
																		"src": "2289:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1978,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1961,
																		"src": "2293:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1980,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1967,
														"id": 1981,
														"nodeType": "Return",
														"src": "2275:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1957,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:14",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2138:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2149:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:14"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2183:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1963,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "2189:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:14"
									},
									"scope": 2869,
									"src": "2122:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2001,
										"nodeType": "Block",
										"src": "2449:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1994,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1987,
															"src": "2466:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1995,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "2470:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1998,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "2478:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:14",
													"trueExpression": {
														"id": 1997,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1987,
														"src": "2474:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1993,
												"id": 2000,
												"nodeType": "Return",
												"src": "2459:20:14"
											}
										]
									},
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:14",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2002,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "2395:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "2406:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:14"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2002,
												"src": "2440:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:14"
									},
									"scope": 2869,
									"src": "2382:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2019,
										"nodeType": "Block",
										"src": "2624:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2012,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "2641:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2013,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2007,
															"src": "2645:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2016,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2007,
														"src": "2653:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:14",
													"trueExpression": {
														"id": 2015,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "2649:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2011,
												"id": 2018,
												"nodeType": "Return",
												"src": "2634:20:14"
											}
										]
									},
									"documentation": {
										"id": 2003,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:14",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "2570:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "2581:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:14"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "2615:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:14"
									},
									"scope": 2869,
									"src": "2557:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2042,
										"nodeType": "Block",
										"src": "2845:82:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2030,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2023,
																	"src": "2900:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2031,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2025,
																	"src": "2904:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2033,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2034,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2023,
																		"src": "2910:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2035,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "2914:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2037,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2029,
												"id": 2041,
												"nodeType": "Return",
												"src": "2892:28:14"
											}
										]
									},
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:14",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "2791:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "2802:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:14"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "2836:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:14"
									},
									"scope": 2869,
									"src": "2774:153:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2076,
										"nodeType": "Block",
										"src": "3219:260:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2053,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "3233:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2061,
												"nodeType": "IfStatement",
												"src": "3229:127:14",
												"trueBody": {
													"id": 2060,
													"nodeType": "Block",
													"src": "3241:115:14",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2056,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2046,
																	"src": "3340:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2057,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2048,
																	"src": "3344:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2052,
															"id": 2059,
															"nodeType": "Return",
															"src": "3333:12:14"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2062,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "3444:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2066,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2046,
																			"src": "3458:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2069,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2070,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2048,
																"src": "3467:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:14",
													"trueExpression": {
														"hexValue": "30",
														"id": 2065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2052,
												"id": 2075,
												"nodeType": "Return",
												"src": "3437:35:14"
											}
										]
									},
									"documentation": {
										"id": 2044,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:14",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "3165:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "3176:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:14"
									},
									"returnParameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "3210:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:14"
									},
									"scope": 2869,
									"src": "3148:331:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2202,
										"nodeType": "Block",
										"src": "3901:4018:14",
										"statements": [
											{
												"id": 2201,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:14",
												"statements": [
													{
														"assignments": [
															2090
														],
														"declarations": [
															{
																"constant": false,
																"id": 2090,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2201,
																"src": "4232:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2089,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2094,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2091,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2080,
																"src": "4248:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2092,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2082,
																"src": "4252:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:14"
													},
													{
														"assignments": [
															2096
														],
														"declarations": [
															{
																"constant": false,
																"id": 2096,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2201,
																"src": "4312:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2095,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2097,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:14"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:14",
															"nodeType": "YulBlock",
															"src": "4392:122:14",
															"statements": [
																{
																	"nativeSrc": "4410:30:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:14"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:14",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:14"
																				},
																				"nativeSrc": "4433:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:14"
																		},
																		"nativeSrc": "4420:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:14"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:14",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:14",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:14"
																				},
																				"nativeSrc": "4470:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:14"
																				},
																				"nativeSrc": "4486:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:14"
																		},
																		"nativeSrc": "4466:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2090,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2090,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2096,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2080,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2082,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:14",
																"valueSize": 1
															}
														],
														"id": 2098,
														"nodeType": "InlineAssembly",
														"src": "4383:131:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2099,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2096,
																"src": "4595:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2107,
														"nodeType": "IfStatement",
														"src": "4591:368:14",
														"trueBody": {
															"id": 2106,
															"nodeType": "Block",
															"src": "4607:352:14",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2102,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2090,
																			"src": "4925:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2103,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2084,
																			"src": "4933:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2088,
																	"id": 2105,
																	"nodeType": "Return",
																	"src": "4918:26:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2108,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2084,
																"src": "5065:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2109,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2096,
																"src": "5080:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2115,
														"nodeType": "IfStatement",
														"src": "5061:88:14",
														"trueBody": {
															"id": 2114,
															"nodeType": "Block",
															"src": "5087:62:14",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2111,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "5112:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2113,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:14"
																}
															]
														}
													},
													{
														"assignments": [
															2117
														],
														"declarations": [
															{
																"constant": false,
																"id": 2117,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:14",
																"nodeType": "VariableDeclaration",
																"scope": 2201,
																"src": "5404:17:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2116,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2118,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:14"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:14",
															"nodeType": "YulBlock",
															"src": "5444:291:14",
															"statements": [
																{
																	"nativeSrc": "5513:38:14",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:14"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:14"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:14",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:14"
																		},
																		"nativeSrc": "5526:25:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:14"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:14",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:14"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:14",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:14"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:14"
																				},
																				"nativeSrc": "5653:20:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:14"
																		},
																		"nativeSrc": "5642:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:14"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:14",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:14"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:14"
																		},
																		"nativeSrc": "5700:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2084,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2090,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2090,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2090,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2096,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2096,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2117,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2117,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2117,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2080,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2082,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:14",
																"valueSize": 1
															}
														],
														"id": 2119,
														"nodeType": "InlineAssembly",
														"src": "5435:300:14"
													},
													{
														"assignments": [
															2121
														],
														"declarations": [
															{
																"constant": false,
																"id": 2121,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:14",
																"nodeType": "VariableDeclaration",
																"scope": 2201,
																"src": "5939:12:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2120,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2128,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2122,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2084,
																"src": "5954:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2124,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2084,
																			"src": "5973:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2126,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:14"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:14",
															"nodeType": "YulBlock",
															"src": "6008:362:14",
															"statements": [
																{
																	"nativeSrc": "6073:37:14",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:14",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:14"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:14"
																		},
																		"nativeSrc": "6088:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:14"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:14",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:14"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:14",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:14"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:14"
																		},
																		"nativeSrc": "6186:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:14"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:14",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:14",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:14",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:14"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:14"
																						},
																						"nativeSrc": "6333:12:14",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:14"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:14"
																				},
																				"nativeSrc": "6329:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:14"
																		},
																		"nativeSrc": "6325:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:14"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:14",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2084,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2084,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2090,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2090,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:14",
																"valueSize": 1
															}
														],
														"id": 2129,
														"nodeType": "InlineAssembly",
														"src": "5999:371:14"
													},
													{
														"expression": {
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2130,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2090,
																"src": "6436:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2131,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2096,
																	"src": "6445:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2132,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "6453:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2135,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:14"
													},
													{
														"assignments": [
															2137
														],
														"declarations": [
															{
																"constant": false,
																"id": 2137,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:14",
																"nodeType": "VariableDeclaration",
																"scope": 2201,
																"src": "6775:15:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2136,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2144,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2139,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2084,
																			"src": "6798:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2141,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:14"
													},
													{
														"expression": {
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2145,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "7031:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2147,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2084,
																		"src": "7046:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2148,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "7060:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2152,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:14"
													},
													{
														"expression": {
															"id": 2159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2153,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "7100:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2155,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2084,
																		"src": "7115:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2156,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "7129:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2160,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:14"
													},
													{
														"expression": {
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2161,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "7170:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2163,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2084,
																		"src": "7185:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2164,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "7199:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2168,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:14"
													},
													{
														"expression": {
															"id": 2175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2169,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "7240:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2171,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2084,
																		"src": "7255:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2172,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "7269:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2176,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:14"
													},
													{
														"expression": {
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2177,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "7310:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2179,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2084,
																		"src": "7325:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2180,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "7339:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2184,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:14"
													},
													{
														"expression": {
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2185,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2137,
																"src": "7381:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2187,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2084,
																		"src": "7396:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2188,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2137,
																		"src": "7410:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2192,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:14"
													},
													{
														"expression": {
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2193,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "7851:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2194,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2090,
																	"src": "7860:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2195,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2137,
																	"src": "7868:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2198,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:14"
													},
													{
														"expression": {
															"id": 2199,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "7896:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2088,
														"id": 2200,
														"nodeType": "Return",
														"src": "7889:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2078,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:14",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "3819:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "3830:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "3841:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:14"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2203,
												"src": "3885:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:14"
									},
									"scope": 2869,
									"src": "3803:4116:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "8161:192:14",
										"statements": [
											{
												"assignments": [
													2219
												],
												"declarations": [
													{
														"constant": false,
														"id": 2219,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2245,
														"src": "8171:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2225,
												"initialValue": {
													"arguments": [
														{
															"id": 2221,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2206,
															"src": "8195:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2222,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "8198:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2223,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2210,
															"src": "8201:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2220,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2203,
															2246
														],
														"referencedDeclaration": 2203,
														"src": "8188:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2227,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2213,
																"src": "8244:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1826",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1826",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2226,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2868,
															"src": "8227:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1826_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2230,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2206,
																	"src": "8264:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2231,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "8267:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2232,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "8270:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2229,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2242,
												"nodeType": "IfStatement",
												"src": "8223:101:14",
												"trueBody": {
													"id": 2241,
													"nodeType": "Block",
													"src": "8288:36:14",
													"statements": [
														{
															"expression": {
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2237,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2219,
																	"src": "8302:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2240,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2243,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2219,
													"src": "8340:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2217,
												"id": 2244,
												"nodeType": "Return",
												"src": "8333:13:14"
											}
										]
									},
									"documentation": {
										"id": 2204,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:14",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "8067:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "8078:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "8089:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "8110:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1826",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2212,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2211,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1826,
														"src": "8110:8:14"
													},
													"referencedDeclaration": 1826,
													"src": "8110:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1826",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:14"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2246,
												"src": "8152:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:14"
									},
									"scope": 2869,
									"src": "8051:302:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2357,
										"nodeType": "Block",
										"src": "8644:1585:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2254,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2249,
														"src": "8658:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2260,
												"nodeType": "IfStatement",
												"src": "8654:45:14",
												"trueBody": {
													"id": 2259,
													"nodeType": "Block",
													"src": "8666:33:14",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2253,
															"id": 2258,
															"nodeType": "Return",
															"src": "8680:8:14"
														}
													]
												}
											},
											{
												"assignments": [
													2262
												],
												"declarations": [
													{
														"constant": false,
														"id": 2262,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2357,
														"src": "9378:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2271,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2265,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2249,
																			"src": "9406:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2264,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2525,
																			2560
																		],
																		"referencedDeclaration": 2525,
																		"src": "9401:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2269,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:14"
											},
											{
												"id": 2356,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:14",
												"statements": [
													{
														"expression": {
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2272,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "9839:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2273,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2262,
																				"src": "9849:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2274,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "9858:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2275,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "9862:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2278,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2282,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:14"
													},
													{
														"expression": {
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2283,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "9888:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2284,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2262,
																				"src": "9898:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2285,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "9907:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2286,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "9911:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2289,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2293,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:14"
													},
													{
														"expression": {
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2294,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "9937:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2295,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2262,
																				"src": "9947:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2296,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "9956:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2297,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "9960:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2300,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2304,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:14"
													},
													{
														"expression": {
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2305,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "9986:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2306,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2262,
																				"src": "9996:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2307,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "10005:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2308,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "10009:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2311,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2315,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:14"
													},
													{
														"expression": {
															"id": 2325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2316,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "10035:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2317,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2262,
																				"src": "10045:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2318,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "10054:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2319,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "10058:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2322,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2326,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:14"
													},
													{
														"expression": {
															"id": 2336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2327,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "10084:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2328,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2262,
																				"src": "10094:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2329,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "10103:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2330,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "10107:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2333,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2337,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:14"
													},
													{
														"expression": {
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2338,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2262,
																"src": "10133:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2339,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2262,
																				"src": "10143:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2342,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2340,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2249,
																					"src": "10152:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2341,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2262,
																					"src": "10156:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2344,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2348,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:14"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2350,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2262,
																	"src": "10193:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2351,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2249,
																		"src": "10201:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2352,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2262,
																		"src": "10205:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2349,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2020,
																"src": "10189:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2253,
														"id": 2355,
														"nodeType": "Return",
														"src": "10182:30:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2247,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:14",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "8601:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:14"
									},
									"returnParameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "8635:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:14"
									},
									"scope": 2869,
									"src": "8587:1642:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2392,
										"nodeType": "Block",
										"src": "10405:164:14",
										"statements": [
											{
												"id": 2391,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:14",
												"statements": [
													{
														"assignments": [
															2370
														],
														"declarations": [
															{
																"constant": false,
																"id": 2370,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2391,
																"src": "10439:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2369,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2374,
														"initialValue": {
															"arguments": [
																{
																	"id": 2372,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2361,
																	"src": "10461:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2371,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2358,
																	2393
																],
																"referencedDeclaration": 2358,
																"src": "10456:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2375,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2370,
																"src": "10484:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2377,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2364,
																						"src": "10511:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1826",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1826",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2376,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2868,
																					"src": "10494:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1826_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2383,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2381,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2379,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2370,
																						"src": "10524:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2380,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2370,
																						"src": "10533:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2382,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2361,
																					"src": "10542:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2388,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2368,
														"id": 2390,
														"nodeType": "Return",
														"src": "10477:75:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2359,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:14",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "10343:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "10354:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1826",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2362,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1826,
														"src": "10354:8:14"
													},
													"referencedDeclaration": 1826,
													"src": "10354:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1826",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:14"
									},
									"returnParameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2393,
												"src": "10396:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:14"
									},
									"scope": 2869,
									"src": "10329:240:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2524,
										"nodeType": "Block",
										"src": "10760:922:14",
										"statements": [
											{
												"assignments": [
													2402
												],
												"declarations": [
													{
														"constant": false,
														"id": 2402,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2524,
														"src": "10770:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2401,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2404,
												"initialValue": {
													"hexValue": "30",
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:14"
											},
											{
												"id": 2521,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2405,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "10826:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2419,
														"nodeType": "IfStatement",
														"src": "10822:99:14",
														"trueBody": {
															"id": 2418,
															"nodeType": "Block",
															"src": "10844:77:14",
															"statements": [
																{
																	"expression": {
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2410,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2396,
																			"src": "10862:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2413,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:14"
																},
																{
																	"expression": {
																		"id": 2416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2414,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2402,
																			"src": "10893:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2417,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2420,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "10938:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2434,
														"nodeType": "IfStatement",
														"src": "10934:96:14",
														"trueBody": {
															"id": 2433,
															"nodeType": "Block",
															"src": "10955:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2425,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2396,
																			"src": "10973:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2428,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:14"
																},
																{
																	"expression": {
																		"id": 2431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2429,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2402,
																			"src": "11003:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2432,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2435,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "11047:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2449,
														"nodeType": "IfStatement",
														"src": "11043:96:14",
														"trueBody": {
															"id": 2448,
															"nodeType": "Block",
															"src": "11064:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2440,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2396,
																			"src": "11082:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2443,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:14"
																},
																{
																	"expression": {
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2444,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2402,
																			"src": "11112:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2447,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2450,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "11156:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2464,
														"nodeType": "IfStatement",
														"src": "11152:96:14",
														"trueBody": {
															"id": 2463,
															"nodeType": "Block",
															"src": "11173:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2455,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2396,
																			"src": "11191:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2458,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:14"
																},
																{
																	"expression": {
																		"id": 2461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2459,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2402,
																			"src": "11221:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2462,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2465,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "11265:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2479,
														"nodeType": "IfStatement",
														"src": "11261:93:14",
														"trueBody": {
															"id": 2478,
															"nodeType": "Block",
															"src": "11281:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2396,
																			"src": "11299:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2473,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:14"
																},
																{
																	"expression": {
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2474,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2402,
																			"src": "11328:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2477,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2480,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "11371:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2494,
														"nodeType": "IfStatement",
														"src": "11367:93:14",
														"trueBody": {
															"id": 2493,
															"nodeType": "Block",
															"src": "11387:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2485,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2396,
																			"src": "11405:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2488,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:14"
																},
																{
																	"expression": {
																		"id": 2491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2489,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2402,
																			"src": "11434:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2492,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2495,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "11477:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2509,
														"nodeType": "IfStatement",
														"src": "11473:93:14",
														"trueBody": {
															"id": 2508,
															"nodeType": "Block",
															"src": "11493:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2500,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2396,
																			"src": "11511:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2503,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:14"
																},
																{
																	"expression": {
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2504,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2402,
																			"src": "11540:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2507,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2510,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "11583:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2520,
														"nodeType": "IfStatement",
														"src": "11579:64:14",
														"trueBody": {
															"id": 2519,
															"nodeType": "Block",
															"src": "11599:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2515,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2402,
																			"src": "11617:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2518,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2522,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2402,
													"src": "11669:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2400,
												"id": 2523,
												"nodeType": "Return",
												"src": "11662:13:14"
											}
										]
									},
									"documentation": {
										"id": 2394,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:14",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "10713:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:14"
									},
									"returnParameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "10751:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:14"
									},
									"scope": 2869,
									"src": "10699:983:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2559,
										"nodeType": "Block",
										"src": "11915:168:14",
										"statements": [
											{
												"id": 2558,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:14",
												"statements": [
													{
														"assignments": [
															2537
														],
														"declarations": [
															{
																"constant": false,
																"id": 2537,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2558,
																"src": "11949:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2536,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2541,
														"initialValue": {
															"arguments": [
																{
																	"id": 2539,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "11971:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2538,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2525,
																	2560
																],
																"referencedDeclaration": 2525,
																"src": "11966:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2542,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2537,
																"src": "11998:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2544,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2531,
																						"src": "12025:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1826",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1826",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2543,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2868,
																					"src": "12008:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1826_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2545,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2548,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2546,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2547,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2537,
																						"src": "12043:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2549,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2528,
																					"src": "12052:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2555,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2535,
														"id": 2557,
														"nodeType": "Return",
														"src": "11991:75:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2526,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:14",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "11849:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "11864:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1826",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2530,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2529,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1826,
														"src": "11864:8:14"
													},
													"referencedDeclaration": 1826,
													"src": "11864:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1826",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:14"
									},
									"returnParameters": {
										"id": 2535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "11906:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:14"
									},
									"scope": 2869,
									"src": "11835:248:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2688,
										"nodeType": "Block",
										"src": "12276:854:14",
										"statements": [
											{
												"assignments": [
													2569
												],
												"declarations": [
													{
														"constant": false,
														"id": 2569,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2688,
														"src": "12286:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2568,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2571,
												"initialValue": {
													"hexValue": "30",
													"id": 2570,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:14"
											},
											{
												"id": 2685,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2572,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2563,
																"src": "12342:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2588,
														"nodeType": "IfStatement",
														"src": "12338:103:14",
														"trueBody": {
															"id": 2587,
															"nodeType": "Block",
															"src": "12361:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2577,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "12379:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2579,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2582,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:14"
																},
																{
																	"expression": {
																		"id": 2585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2583,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2569,
																			"src": "12414:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2586,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2589,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2563,
																"src": "12458:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2605,
														"nodeType": "IfStatement",
														"src": "12454:103:14",
														"trueBody": {
															"id": 2604,
															"nodeType": "Block",
															"src": "12477:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2594,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "12495:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2599,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:14"
																},
																{
																	"expression": {
																		"id": 2602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2600,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2569,
																			"src": "12530:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2603,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2606,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2563,
																"src": "12574:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2622,
														"nodeType": "IfStatement",
														"src": "12570:103:14",
														"trueBody": {
															"id": 2621,
															"nodeType": "Block",
															"src": "12593:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2611,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "12611:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2612,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2616,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:14"
																},
																{
																	"expression": {
																		"id": 2619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2617,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2569,
																			"src": "12646:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2620,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2623,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2563,
																"src": "12690:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2639,
														"nodeType": "IfStatement",
														"src": "12686:100:14",
														"trueBody": {
															"id": 2638,
															"nodeType": "Block",
															"src": "12708:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2628,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "12726:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2629,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2633,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:14"
																},
																{
																	"expression": {
																		"id": 2636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2634,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2569,
																			"src": "12760:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2637,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2640,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2563,
																"src": "12803:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2656,
														"nodeType": "IfStatement",
														"src": "12799:100:14",
														"trueBody": {
															"id": 2655,
															"nodeType": "Block",
															"src": "12821:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2645,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "12839:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2647,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2650,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:14"
																},
																{
																	"expression": {
																		"id": 2653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2651,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2569,
																			"src": "12873:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2654,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2657,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2563,
																"src": "12916:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2673,
														"nodeType": "IfStatement",
														"src": "12912:100:14",
														"trueBody": {
															"id": 2672,
															"nodeType": "Block",
															"src": "12934:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2662,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2563,
																			"src": "12952:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2664,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2667,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:14"
																},
																{
																	"expression": {
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2668,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2569,
																			"src": "12986:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2671,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2674,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2563,
																"src": "13029:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2684,
														"nodeType": "IfStatement",
														"src": "13025:66:14",
														"trueBody": {
															"id": 2683,
															"nodeType": "Block",
															"src": "13047:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2679,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2569,
																			"src": "13065:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2682,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2686,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2569,
													"src": "13117:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2567,
												"id": 2687,
												"nodeType": "Return",
												"src": "13110:13:14"
											}
										]
									},
									"documentation": {
										"id": 2561,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:14",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "12229:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:14"
									},
									"returnParameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "12267:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:14"
									},
									"scope": 2869,
									"src": "12214:916:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2723,
										"nodeType": "Block",
										"src": "13365:170:14",
										"statements": [
											{
												"id": 2722,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:14",
												"statements": [
													{
														"assignments": [
															2701
														],
														"declarations": [
															{
																"constant": false,
																"id": 2701,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2722,
																"src": "13399:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2700,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2705,
														"initialValue": {
															"arguments": [
																{
																	"id": 2703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2692,
																	"src": "13422:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2702,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2689,
																	2724
																],
																"referencedDeclaration": 2689,
																"src": "13416:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2706,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2701,
																"src": "13449:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2708,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2695,
																						"src": "13476:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1826",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1826",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2707,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2868,
																					"src": "13459:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1826_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2714,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2712,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2710,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2711,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2701,
																						"src": "13495:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2713,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2692,
																					"src": "13504:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2719,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2699,
														"id": 2721,
														"nodeType": "Return",
														"src": "13442:76:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2690,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:14",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "13299:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "13314:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1826",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2694,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2693,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1826,
														"src": "13314:8:14"
													},
													"referencedDeclaration": 1826,
													"src": "13314:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1826",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:14"
									},
									"returnParameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "13356:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:14"
									},
									"scope": 2869,
									"src": "13284:251:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2810,
										"nodeType": "Block",
										"src": "13855:600:14",
										"statements": [
											{
												"assignments": [
													2733
												],
												"declarations": [
													{
														"constant": false,
														"id": 2733,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2810,
														"src": "13865:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2735,
												"initialValue": {
													"hexValue": "30",
													"id": 2734,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:14"
											},
											{
												"id": 2807,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2736,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2727,
																	"src": "13921:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2750,
														"nodeType": "IfStatement",
														"src": "13917:98:14",
														"trueBody": {
															"id": 2749,
															"nodeType": "Block",
															"src": "13939:76:14",
															"statements": [
																{
																	"expression": {
																		"id": 2743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2741,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2727,
																			"src": "13957:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2744,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:14"
																},
																{
																	"expression": {
																		"id": 2747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2745,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "13988:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2748,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2751,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2727,
																	"src": "14032:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2765,
														"nodeType": "IfStatement",
														"src": "14028:95:14",
														"trueBody": {
															"id": 2764,
															"nodeType": "Block",
															"src": "14049:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2756,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2727,
																			"src": "14067:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2759,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:14"
																},
																{
																	"expression": {
																		"id": 2762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2760,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "14097:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2763,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2766,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2727,
																	"src": "14140:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2780,
														"nodeType": "IfStatement",
														"src": "14136:95:14",
														"trueBody": {
															"id": 2779,
															"nodeType": "Block",
															"src": "14157:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2771,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2727,
																			"src": "14175:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2774,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:14"
																},
																{
																	"expression": {
																		"id": 2777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2775,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "14205:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2778,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2781,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2727,
																	"src": "14248:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2795,
														"nodeType": "IfStatement",
														"src": "14244:95:14",
														"trueBody": {
															"id": 2794,
															"nodeType": "Block",
															"src": "14265:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2786,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2727,
																			"src": "14283:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2789,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:14"
																},
																{
																	"expression": {
																		"id": 2792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2790,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "14313:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2793,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2796,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2727,
																	"src": "14356:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2806,
														"nodeType": "IfStatement",
														"src": "14352:64:14",
														"trueBody": {
															"id": 2805,
															"nodeType": "Block",
															"src": "14372:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2801,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "14390:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2804,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2808,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2733,
													"src": "14442:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2731,
												"id": 2809,
												"nodeType": "Return",
												"src": "14435:13:14"
											}
										]
									},
									"documentation": {
										"id": 2725,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:14",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "13808:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:14"
									},
									"returnParameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2811,
												"src": "13846:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:14"
									},
									"scope": 2869,
									"src": "13792:663:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2848,
										"nodeType": "Block",
										"src": "14692:177:14",
										"statements": [
											{
												"id": 2847,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:14",
												"statements": [
													{
														"assignments": [
															2823
														],
														"declarations": [
															{
																"constant": false,
																"id": 2823,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2847,
																"src": "14726:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2822,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2827,
														"initialValue": {
															"arguments": [
																{
																	"id": 2825,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2814,
																	"src": "14750:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2824,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2811,
																	2849
																],
																"referencedDeclaration": 2811,
																"src": "14743:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2828,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2823,
																"src": "14777:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2830,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2817,
																						"src": "14804:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1826",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1826",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2829,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2868,
																					"src": "14787:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1826_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2837,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2832,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2835,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2833,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2823,
																									"src": "14823:6:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2834,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2836,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2838,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2814,
																					"src": "14838:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2844,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2821,
														"id": 2846,
														"nodeType": "Return",
														"src": "14770:82:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2812,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:14",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2814,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "14626:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "14641:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1826",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2816,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2815,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1826,
														"src": "14641:8:14"
													},
													"referencedDeclaration": 1826,
													"src": "14641:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1826",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:14"
									},
									"returnParameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "14683:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:14"
									},
									"scope": 2869,
									"src": "14610:259:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2867,
										"nodeType": "Block",
										"src": "15067:48:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2860,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2853,
																	"src": "15090:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1826",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1826",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2858,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2857,
												"id": 2866,
												"nodeType": "Return",
												"src": "15077:31:14"
											}
										]
									},
									"documentation": {
										"id": 2850,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:14",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2868,
												"src": "15019:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1826",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2852,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2851,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1826,
														"src": "15019:8:14"
													},
													"referencedDeclaration": 1826,
													"src": "15019:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1826",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:14"
									},
									"returnParameters": {
										"id": 2857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2868,
												"src": "15061:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:14"
									},
									"scope": 2869,
									"src": "14993:122:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2870,
							"src": "203:14914:14",
							"usedErrors": [
								1821
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2974
						]
					},
					"id": 2975,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2871,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2872,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:15",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2974,
							"linearizedBaseContracts": [
								2974
							],
							"name": "SignedMath",
							"nameLocation": "224:10:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2889,
										"nodeType": "Block",
										"src": "376:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2882,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2875,
															"src": "393:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2883,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2877,
															"src": "397:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2886,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2877,
														"src": "405:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:15",
													"trueExpression": {
														"id": 2885,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2875,
														"src": "401:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2881,
												"id": 2888,
												"nodeType": "Return",
												"src": "386:20:15"
											}
										]
									},
									"documentation": {
										"id": 2873,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:15",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "325:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2874,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "335:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2876,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:15"
									},
									"returnParameters": {
										"id": 2881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "368:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2879,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:15"
									},
									"scope": 2974,
									"src": "312:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2907,
										"nodeType": "Block",
										"src": "555:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2900,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2893,
															"src": "572:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2901,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2895,
															"src": "576:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2904,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2895,
														"src": "584:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:15",
													"trueExpression": {
														"id": 2903,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2893,
														"src": "580:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2899,
												"id": 2906,
												"nodeType": "Return",
												"src": "565:20:15"
											}
										]
									},
									"documentation": {
										"id": 2891,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:15",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2893,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "504:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2892,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2895,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "514:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2894,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:15"
									},
									"returnParameters": {
										"id": 2899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "547:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2897,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:15"
									},
									"scope": 2974,
									"src": "491:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2951,
										"nodeType": "Block",
										"src": "797:162:15",
										"statements": [
											{
												"assignments": [
													2919
												],
												"declarations": [
													{
														"constant": false,
														"id": 2919,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 2951,
														"src": "859:8:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2918,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2932,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2920,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2911,
																	"src": "871:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2921,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2913,
																	"src": "875:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2923,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2924,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2911,
																				"src": "882:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2925,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2913,
																				"src": "886:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2927,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2930,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:15"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2933,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2919,
														"src": "911:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2938,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2919,
																						"src": "931:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2937,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2936,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2939,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2934,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2943,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2911,
																				"src": "945:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2944,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2913,
																				"src": "949:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2946,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2948,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2917,
												"id": 2950,
												"nodeType": "Return",
												"src": "904:48:15"
											}
										]
									},
									"documentation": {
										"id": 2909,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:15",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2952,
												"src": "746:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2910,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2952,
												"src": "756:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2912,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:15"
									},
									"returnParameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2952,
												"src": "789:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2915,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:15"
									},
									"scope": 2974,
									"src": "729:230:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2972,
										"nodeType": "Block",
										"src": "1103:158:15",
										"statements": [
											{
												"id": 2971,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:15",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2962,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2955,
																			"src": "1228:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:15",
																		"subExpression": {
																			"id": 2966,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2955,
																			"src": "1242:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:15",
																	"trueExpression": {
																		"id": 2965,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2955,
																		"src": "1237:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2960,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 2969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2959,
														"id": 2970,
														"nodeType": "Return",
														"src": "1213:31:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2953,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:15",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2955,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "1061:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2954,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:15"
									},
									"returnParameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "1094:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:15"
									},
									"scope": 2974,
									"src": "1048:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2975,
							"src": "216:1047:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:15"
				},
				"id": 15
			},
			"contracts/security/zkSnarks/ProofGeneration.sol": {
				"ast": {
					"absolutePath": "contracts/security/zkSnarks/ProofGeneration.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							447
						],
						"ECDSA": [
							1377
						],
						"EIP712": [
							1604
						],
						"ERC165": [
							1803
						],
						"IAccessControl": [
							378
						],
						"IERC1271": [
							392
						],
						"IERC5267": [
							417
						],
						"IProofVerifier": [
							2996
						],
						"Math": [
							2869
						],
						"MessageHashUtils": [
							1678
						],
						"ProofGeneration": [
							3143
						],
						"ShortString": [
							453
						],
						"ShortStrings": [
							664
						],
						"SignatureChecker": [
							1779
						],
						"SignedMath": [
							2974
						],
						"Strings": [
							1029
						]
					},
					"id": 3144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2976,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 2977,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3144,
							"sourceUnit": 296,
							"src": "59:58:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 2978,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3144,
							"sourceUnit": 1030,
							"src": "118:51:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 2979,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3144,
							"sourceUnit": 2870,
							"src": "170:53:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 2980,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3144,
							"sourceUnit": 1378,
							"src": "224:62:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/EIP712.sol",
							"id": 2981,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3144,
							"sourceUnit": 1605,
							"src": "287:63:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 2982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3144,
							"sourceUnit": 296,
							"src": "351:58:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 2983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3144,
							"sourceUnit": 1030,
							"src": "410:51:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 2984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3144,
							"sourceUnit": 1378,
							"src": "462:62:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
							"id": 2985,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3144,
							"sourceUnit": 1780,
							"src": "525:73:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProofVerifier",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2996,
							"linearizedBaseContracts": [
								2996
							],
							"name": "IProofVerifier",
							"nameLocation": "610:14:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1e8e1e13",
									"id": 2995,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verifyProof",
									"nameLocation": "640:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "676:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2995,
												"src": "661:20:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2986,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "661:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2990,
												"mutability": "mutable",
												"name": "inputs",
												"nameLocation": "710:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2995,
												"src": "691:25:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2988,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "691:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2989,
													"nodeType": "ArrayTypeName",
													"src": "691:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:71:16"
									},
									"returnParameters": {
										"id": 2994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2995,
												"src": "746:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2992,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "746:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:6:16"
									},
									"scope": 2996,
									"src": "631:121:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3144,
							"src": "600:154:16",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2998,
										"name": "AccessControl",
										"nameLocations": [
											"925:13:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "925:13:16"
									},
									"id": 2999,
									"nodeType": "InheritanceSpecifier",
									"src": "925:13:16"
								},
								{
									"baseName": {
										"id": 3000,
										"name": "EIP712",
										"nameLocations": [
											"940:6:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1604,
										"src": "940:6:16"
									},
									"id": 3001,
									"nodeType": "InheritanceSpecifier",
									"src": "940:6:16"
								}
							],
							"canonicalName": "ProofGeneration",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2997,
								"nodeType": "StructuredDocumentation",
								"src": "756:140:16",
								"text": " @title ProofGeneration\n @dev This contract is responsible for generating zk-SNARKs proofs for transactions and data validation."
							},
							"fullyImplemented": true,
							"id": 3143,
							"linearizedBaseContracts": [
								3143,
								1604,
								417,
								295,
								1803,
								1815,
								378,
								447
							],
							"name": "ProofGeneration",
							"nameLocation": "906:15:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3004,
									"libraryName": {
										"id": 3002,
										"name": "Math",
										"nameLocations": [
											"959:4:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2869,
										"src": "959:4:16"
									},
									"nodeType": "UsingForDirective",
									"src": "953:23:16",
									"typeName": {
										"id": 3003,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "968:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 3007,
									"libraryName": {
										"id": 3005,
										"name": "Strings",
										"nameLocations": [
											"987:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1029,
										"src": "987:7:16"
									},
									"nodeType": "UsingForDirective",
									"src": "981:25:16",
									"typeName": {
										"id": 3006,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "999:6:16",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 3012,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "1036:10:16",
									"nodeType": "VariableDeclaration",
									"scope": 3143,
									"src": "1012:60:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3008,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1012:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 3010,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1059:12:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 3009,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1049:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3011,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1049:23:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e7705db6",
									"id": 3017,
									"mutability": "constant",
									"name": "VERIFIER_ROLE",
									"nameLocation": "1102:13:16",
									"nodeType": "VariableDeclaration",
									"scope": 3143,
									"src": "1078:66:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3013,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1078:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "56455249464945525f524f4c45",
												"id": 3015,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1128:15:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09",
													"typeString": "literal_string \"VERIFIER_ROLE\""
												},
												"value": "VERIFIER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_0ce23c3e399818cfee81a7ab0880f714e53d7672b08df0fa62f2843416e1ea09",
													"typeString": "literal_string \"VERIFIER_ROLE\""
												}
											],
											"id": 3014,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "1118:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3016,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1118:26:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7fa417b3",
									"id": 3020,
									"mutability": "mutable",
									"name": "proofVerifier",
									"nameLocation": "1173:13:16",
									"nodeType": "VariableDeclaration",
									"scope": 3143,
									"src": "1151:35:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IProofVerifier_$2996",
										"typeString": "contract IProofVerifier"
									},
									"typeName": {
										"id": 3019,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3018,
											"name": "IProofVerifier",
											"nameLocations": [
												"1151:14:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2996,
											"src": "1151:14:16"
										},
										"referencedDeclaration": 2996,
										"src": "1151:14:16",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IProofVerifier_$2996",
											"typeString": "contract IProofVerifier"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9055e6953596a4bec3ee94fe69263dbbb095ebee41411bc4902a0c4cf0a51a21",
									"id": 3026,
									"name": "ProofGenerated",
									"nameLocation": "1199:14:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1230:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3026,
												"src": "1214:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1214:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3024,
												"indexed": false,
												"mutability": "mutable",
												"name": "proofId",
												"nameLocation": "1243:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3026,
												"src": "1236:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3023,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1236:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:38:16"
									},
									"src": "1193:59:16"
								},
								{
									"body": {
										"id": 3051,
										"nodeType": "Block",
										"src": "1359:115:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3040,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1380:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 3041,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1400:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1404:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1400:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3039,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1369:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 3043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1369:42:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3044,
												"nodeType": "ExpressionStatement",
												"src": "1369:42:16"
											},
											{
												"expression": {
													"id": 3049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3045,
														"name": "proofVerifier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3020,
														"src": "1421:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IProofVerifier_$2996",
															"typeString": "contract IProofVerifier"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3047,
																"name": "_proofVerifier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3032,
																"src": "1452:14:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3046,
															"name": "IProofVerifier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2996,
															"src": "1437:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IProofVerifier_$2996_$",
																"typeString": "type(contract IProofVerifier)"
															}
														},
														"id": 3048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1437:30:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IProofVerifier_$2996",
															"typeString": "contract IProofVerifier"
														}
													},
													"src": "1421:46:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IProofVerifier_$2996",
														"typeString": "contract IProofVerifier"
													}
												},
												"id": 3050,
												"nodeType": "ExpressionStatement",
												"src": "1421:46:16"
											}
										]
									},
									"id": 3052,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3035,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3028,
													"src": "1344:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 3036,
													"name": "version",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3030,
													"src": "1350:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 3037,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3034,
												"name": "EIP712",
												"nameLocations": [
													"1337:6:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1604,
												"src": "1337:6:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1337:21:16"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1284:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 3052,
												"src": "1270:18:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3027,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1270:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3030,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "1304:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3052,
												"src": "1290:21:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3029,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1290:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3032,
												"mutability": "mutable",
												"name": "_proofVerifier",
												"nameLocation": "1321:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 3052,
												"src": "1313:22:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:67:16"
									},
									"returnParameters": {
										"id": 3038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1359:0:16"
									},
									"scope": 3143,
									"src": "1258:216:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3081,
										"nodeType": "Block",
										"src": "1836:151:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3069,
																	"name": "proof",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3055,
																	"src": "1880:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																{
																	"id": 3070,
																	"name": "inputs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3058,
																	"src": "1887:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	},
																	{
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																],
																"expression": {
																	"id": 3067,
																	"name": "proofVerifier",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3020,
																	"src": "1854:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IProofVerifier_$2996",
																		"typeString": "contract IProofVerifier"
																	}
																},
																"id": 3068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1868:11:16",
																"memberName": "verifyProof",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2995,
																"src": "1854:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (bytes memory,uint256[] memory) view external returns (bool)"
																}
															},
															"id": 3071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1854:40:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f6f6647656e65726174696f6e3a20496e76616c69642070726f6f66",
															"id": 3072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:32:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e",
																"typeString": "literal_string \"ProofGeneration: Invalid proof\""
															},
															"value": "ProofGeneration: Invalid proof"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a0d38667032c8804183b6c080feacd52f55f9d0ec04dfab5f896b1842b13238e",
																"typeString": "literal_string \"ProofGeneration: Invalid proof\""
															}
														],
														"id": 3066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1846:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1846:83:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3074,
												"nodeType": "ExpressionStatement",
												"src": "1846:83:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3076,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1960:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1964:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1960:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3078,
															"name": "proofId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3060,
															"src": "1972:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 3075,
														"name": "ProofGenerated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3026,
														"src": "1945:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,string memory)"
														}
													},
													"id": 3079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1945:35:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3080,
												"nodeType": "EmitStatement",
												"src": "1940:40:16"
											}
										]
									},
									"documentation": {
										"id": 3053,
										"nodeType": "StructuredDocumentation",
										"src": "1480:221:16",
										"text": " @dev Generate zk-SNARK proof for a transaction or data.\n @param proof The zk-SNARK proof.\n @param inputs The inputs used for the proof.\n @param proofId Unique identifier for the proof."
									},
									"functionSelector": "f736c365",
									"id": 3082,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3063,
													"name": "VERIFIER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3017,
													"src": "1821:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3064,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3062,
												"name": "onlyRole",
												"nameLocations": [
													"1812:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1812:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1812:23:16"
										}
									],
									"name": "generateProof",
									"nameLocation": "1715:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "proof",
												"nameLocation": "1744:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3082,
												"src": "1729:20:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3054,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1729:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3058,
												"mutability": "mutable",
												"name": "inputs",
												"nameLocation": "1770:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 3082,
												"src": "1751:25:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3056,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1751:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3057,
													"nodeType": "ArrayTypeName",
													"src": "1751:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3060,
												"mutability": "mutable",
												"name": "proofId",
												"nameLocation": "1794:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3082,
												"src": "1778:23:16",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3059,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1778:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:74:16"
									},
									"returnParameters": {
										"id": 3065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1836:0:16"
									},
									"scope": 3143,
									"src": "1706:281:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3097,
										"nodeType": "Block",
										"src": "2221:63:16",
										"statements": [
											{
												"expression": {
													"id": 3095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3091,
														"name": "proofVerifier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3020,
														"src": "2231:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IProofVerifier_$2996",
															"typeString": "contract IProofVerifier"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3093,
																"name": "_proofVerifier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3085,
																"src": "2262:14:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3092,
															"name": "IProofVerifier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2996,
															"src": "2247:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IProofVerifier_$2996_$",
																"typeString": "type(contract IProofVerifier)"
															}
														},
														"id": 3094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2247:30:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IProofVerifier_$2996",
															"typeString": "contract IProofVerifier"
														}
													},
													"src": "2231:46:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IProofVerifier_$2996",
														"typeString": "contract IProofVerifier"
													}
												},
												"id": 3096,
												"nodeType": "ExpressionStatement",
												"src": "2231:46:16"
											}
										]
									},
									"documentation": {
										"id": 3083,
										"nodeType": "StructuredDocumentation",
										"src": "1993:143:16",
										"text": " @dev Set a new proof verifier contract address.\n @param _proofVerifier The address of the new proof verifier contract."
									},
									"functionSelector": "df6244db",
									"id": 3098,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3088,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3012,
													"src": "2209:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3089,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3087,
												"name": "onlyRole",
												"nameLocations": [
													"2200:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2200:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2200:20:16"
										}
									],
									"name": "setProofVerifier",
									"nameLocation": "2150:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3085,
												"mutability": "mutable",
												"name": "_proofVerifier",
												"nameLocation": "2175:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "2167:22:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2167:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:24:16"
									},
									"returnParameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2221:0:16"
									},
									"scope": 3143,
									"src": "2141:143:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3112,
										"nodeType": "Block",
										"src": "2504:50:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3108,
															"name": "VERIFIER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3017,
															"src": "2524:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3109,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3101,
															"src": "2539:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3107,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2514:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2514:33:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3111,
												"nodeType": "ExpressionStatement",
												"src": "2514:33:16"
											}
										]
									},
									"documentation": {
										"id": 3099,
										"nodeType": "StructuredDocumentation",
										"src": "2290:127:16",
										"text": " @dev Grant the verifier role to an account.\n @param account The account to grant the verifier role to."
									},
									"functionSelector": "0337c061",
									"id": 3113,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3104,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "2484:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3105,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3103,
												"name": "onlyRole",
												"nameLocations": [
													"2475:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2475:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2475:28:16"
										}
									],
									"name": "grantVerifierRole",
									"nameLocation": "2431:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3101,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2457:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3113,
												"src": "2449:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:17:16"
									},
									"returnParameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2504:0:16"
									},
									"scope": 3143,
									"src": "2422:132:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3127,
										"nodeType": "Block",
										"src": "2781:51:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3123,
															"name": "VERIFIER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3017,
															"src": "2802:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3124,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3116,
															"src": "2817:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3122,
														"name": "revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "2791:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 3125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2791:34:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3126,
												"nodeType": "ExpressionStatement",
												"src": "2791:34:16"
											}
										]
									},
									"documentation": {
										"id": 3114,
										"nodeType": "StructuredDocumentation",
										"src": "2560:133:16",
										"text": " @dev Revoke the verifier role from an account.\n @param account The account to revoke the verifier role from."
									},
									"functionSelector": "a3669aef",
									"id": 3128,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3119,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "2761:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 3120,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3118,
												"name": "onlyRole",
												"nameLocations": [
													"2752:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2752:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2752:28:16"
										}
									],
									"name": "revokeVerifierRole",
									"nameLocation": "2707:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2734:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3128,
												"src": "2726:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2725:17:16"
									},
									"returnParameters": {
										"id": 3121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2781:0:16"
									},
									"scope": 3143,
									"src": "2698:134:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3141,
										"nodeType": "Block",
										"src": "3099:55:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3137,
															"name": "VERIFIER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3017,
															"src": "3124:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3138,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3131,
															"src": "3139:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3136,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "3116:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 3139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3116:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3135,
												"id": 3140,
												"nodeType": "Return",
												"src": "3109:38:16"
											}
										]
									},
									"documentation": {
										"id": 3129,
										"nodeType": "StructuredDocumentation",
										"src": "2838:185:16",
										"text": " @dev Check if an account has the verifier role.\n @param account The account to check.\n @return True if the account has the verifier role, false otherwise."
									},
									"functionSelector": "a865e5fe",
									"id": 3142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasVerifierRole",
									"nameLocation": "3037:15:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3061:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 3142,
												"src": "3053:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3053:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3052:17:16"
									},
									"returnParameters": {
										"id": 3135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3142,
												"src": "3093:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3093:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3092:6:16"
									},
									"scope": 3143,
									"src": "3028:126:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3144,
							"src": "897:2259:16",
							"usedErrors": [
								305,
								308,
								461,
								463
							],
							"usedEvents": [
								317,
								326,
								335,
								397,
								3026
							]
						}
					],
					"src": "32:3125:16"
				},
				"id": 16
			}
		}
	}
}