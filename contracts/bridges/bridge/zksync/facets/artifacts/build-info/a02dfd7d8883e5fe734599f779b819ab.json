{
	"id": "a02dfd7d8883e5fe734599f779b819ab",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/bridges/bridge/zksync/facets/Base.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.13;\r\n\r\nimport \"../Storage.sol\";\r\nimport \"../../common/ReentrancyGuard.sol\";\r\nimport \"../../common/AllowListed.sol\";\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/// @title Base contract containing functions accessible to the other facets.\r\n/// @author Matter Labs\r\n/// @custom:security-contact security@matterlabs.dev\r\ncontract Base is ReentrancyGuard, AllowListed {\r\n    AppStorage internal s;\r\n\r\n    /// @notice Checks that the message sender is an active governor\r\n    modifier onlyGovernor() {\r\n        require(msg.sender == s.governor, \"1g\"); // only by governor\r\n        _;\r\n    }\r\n\r\n    /// @notice Checks that the message sender is an active governor or admin\r\n    modifier onlyGovernorOrAdmin() {\r\n        require(msg.sender == s.governor || msg.sender == s.admin, \"Only by governor or admin\");\r\n        _;\r\n    }\r\n\r\n    /// @notice Checks if validator is active\r\n    modifier onlyValidator() {\r\n        require(s.validators[msg.sender], \"1h\"); // validator is not active\r\n        _;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/bridges/bridge/common/AllowListed.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.13;\r\n\r\nimport \"./interfaces/IAllowList.sol\";\r\n\r\n/// @author Matter Labs\r\n/// @custom:security-contact security@matterlabs.dev\r\nabstract contract AllowListed {\r\n    modifier senderCanCallFunction(IAllowList _allowList) {\r\n        // Preventing the stack too deep error\r\n        {\r\n            require(_allowList.canCall(msg.sender, address(this), msg.sig), \"nr\");\r\n        }\r\n        _;\r\n    }\r\n}\r\n"
			},
			"contracts/bridges/bridge/common/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.13;\r\n\r\n/**\r\n * @custom:security-contact security@matterlabs.dev\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n *\r\n * _Since v2.5.0:_ this module is now much more gas efficient, given net gas\r\n * metering changes introduced in the Istanbul hardfork.\r\n */\r\nabstract contract ReentrancyGuard {\r\n    /// @dev Address of lock flag variable.\r\n    /// @dev Flag is placed at random memory location to not interfere with Storage contract.\r\n    // keccak256(\"ReentrancyGuard\") - 1;\r\n    uint256 private constant LOCK_FLAG_ADDRESS = 0x8e94fed44239eb2314ab7a406345e6c5a8f0ccedf3b600de3d004e672c33abf4;\r\n\r\n    // solhint-disable-next-line max-line-length\r\n    // https://github.com/OpenZeppelin/openzeppelin-contracts/blob/566a774222707e424896c0c390a84dc3c13bdcb2/contracts/security/ReentrancyGuard.sol\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    modifier reentrancyGuardInitializer() {\r\n        _initializeReentrancyGuard();\r\n        _;\r\n    }\r\n\r\n    function _initializeReentrancyGuard() private {\r\n        uint256 lockSlotOldValue;\r\n\r\n        // Storing an initial non-zero value makes deployment a bit more\r\n        // expensive but in exchange every call to nonReentrant\r\n        // will be cheaper.\r\n        assembly {\r\n            lockSlotOldValue := sload(LOCK_FLAG_ADDRESS)\r\n            sstore(LOCK_FLAG_ADDRESS, _NOT_ENTERED)\r\n        }\r\n\r\n        // Check that storage slot for reentrancy guard is empty to rule out possibility of slot conflict\r\n        require(lockSlotOldValue == 0, \"1B\");\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and make it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        uint256 _status;\r\n        assembly {\r\n            _status := sload(LOCK_FLAG_ADDRESS)\r\n        }\r\n\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status == _NOT_ENTERED, \"r1\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        assembly {\r\n            sstore(LOCK_FLAG_ADDRESS, _ENTERED)\r\n        }\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        assembly {\r\n            sstore(LOCK_FLAG_ADDRESS, _NOT_ENTERED)\r\n        }\r\n    }\r\n}\r\n"
			},
			"contracts/bridges/bridge/zksync/Storage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.13;\r\n\r\nimport \"./../zksync/interfaces/IVerifier.sol\";\r\nimport \"../common/interfaces/IAllowList.sol\";\r\nimport \"./libraries/PriorityQueue.sol\";\r\n\r\n/// @notice Indicates whether an upgrade is initiated and if yes what type\r\n/// @param None Upgrade is NOT initiated\r\n/// @param Transparent Fully transparent upgrade is initiated, upgrade data is publicly known\r\n/// @param Shadow Shadow upgrade is initiated, upgrade data is hidden\r\nenum UpgradeState {\r\n    None,\r\n    Transparent,\r\n    Shadow\r\n}\r\n\r\n/// @dev Logically separated part of the storage structure, which is responsible for everything related to proxy\r\n/// upgrades and diamond cuts\r\n/// @param proposedUpgradeHash The hash of the current upgrade proposal, zero if there is no active proposal\r\n/// @param state Indicates whether an upgrade is initiated and if yes what type\r\n/// @param securityCouncil Address which has the permission to approve instant upgrades (expected to be a Gnosis\r\n/// multisig)\r\n/// @param approvedBySecurityCouncil Indicates whether the security council has approved the upgrade\r\n/// @param proposedUpgradeTimestamp The timestamp when the upgrade was proposed, zero if there are no active proposals\r\n/// @param currentProposalId The serial number of proposed upgrades, increments when proposing a new one\r\nstruct UpgradeStorage {\r\n    bytes32 proposedUpgradeHash;\r\n    UpgradeState state;\r\n    address securityCouncil;\r\n    bool approvedBySecurityCouncil;\r\n    uint40 proposedUpgradeTimestamp;\r\n    uint40 currentProposalId;\r\n}\r\n\r\n/// @dev The log passed from L2\r\n/// @param l2ShardId The shard identifier, 0 - rollup, 1 - porter. All other values are not used but are reserved for\r\n/// the future\r\n/// @param isService A boolean flag that is part of the log along with `key`, `value`, and `sender` address.\r\n/// This field is required formally but does not have any special meaning.\r\n/// @param txNumberInBatch The L2 transaction number in the batch, in which the log was sent\r\n/// @param sender The L2 address which sent the log\r\n/// @param key The 32 bytes of information that was sent in the log\r\n/// @param value The 32 bytes of information that was sent in the log\r\n// Both `key` and `value` are arbitrary 32-bytes selected by the log sender\r\nstruct L2Log {\r\n    uint8 l2ShardId;\r\n    bool isService;\r\n    uint16 txNumberInBatch;\r\n    address sender;\r\n    bytes32 key;\r\n    bytes32 value;\r\n}\r\n\r\n/// @dev An arbitrary length message passed from L2\r\n/// @notice Under the hood it is `L2Log` sent from the special system L2 contract\r\n/// @param txNumberInBatch The L2 transaction number in the batch, in which the message was sent\r\n/// @param sender The address of the L2 account from which the message was passed\r\n/// @param data An arbitrary length message\r\nstruct L2Message {\r\n    uint16 txNumberInBatch;\r\n    address sender;\r\n    bytes data;\r\n}\r\n\r\n/// @notice Part of the configuration parameters of ZKP circuits\r\nstruct VerifierParams {\r\n    bytes32 recursionNodeLevelVkHash;\r\n    bytes32 recursionLeafLevelVkHash;\r\n    bytes32 recursionCircuitsSetVksHash;\r\n}\r\n\r\n/// @dev storing all storage variables for zkSync facets\r\n/// NOTE: It is used in a proxy, so it is possible to add new variables to the end\r\n/// but NOT to modify already existing variables or change their order.\r\n/// NOTE: variables prefixed with '__DEPRECATED_' are deprecated and shouldn't be used.\r\n/// Their presence is maintained for compatibility and to prevent storage collision.\r\nstruct AppStorage {\r\n    /// @dev Storage of variables needed for deprecated diamond cut facet\r\n    uint256[7] __DEPRECATED_diamondCutStorage;\r\n    /// @notice Address which will exercise critical changes to the Diamond Proxy (upgrades, freezing & unfreezing)\r\n    address governor;\r\n    /// @notice Address that the governor proposed as one that will replace it\r\n    address pendingGovernor;\r\n    /// @notice List of permitted validators\r\n    mapping(address => bool) validators;\r\n    /// @dev Verifier contract. Used to verify aggregated proof for batches\r\n    IVerifier verifier;\r\n    /// @notice Total number of executed batches i.e. batches[totalBatchesExecuted] points at the latest executed batch\r\n    /// (batch 0 is genesis)\r\n    uint256 totalBatchesExecuted;\r\n    /// @notice Total number of proved batches i.e. batches[totalBatchesProved] points at the latest proved batch\r\n    uint256 totalBatchesVerified;\r\n    /// @notice Total number of committed batches i.e. batches[totalBatchesCommitted] points at the latest committed\r\n    /// batch\r\n    uint256 totalBatchesCommitted;\r\n    /// @dev Stored hashed StoredBatch for batch number\r\n    mapping(uint256 => bytes32) storedBatchHashes;\r\n    /// @dev Stored root hashes of L2 -> L1 logs\r\n    mapping(uint256 => bytes32) l2LogsRootHashes;\r\n    /// @dev Container that stores transactions requested from L1\r\n    PriorityQueue.Queue priorityQueue;\r\n    /// @dev The smart contract that manages the list with permission to call contract functions\r\n    IAllowList allowList;\r\n    /// @notice Part of the configuration parameters of ZKP circuits. Used as an input for the verifier smart contract\r\n    VerifierParams verifierParams;\r\n    /// @notice Bytecode hash of bootloader program.\r\n    /// @dev Used as an input to zkp-circuit.\r\n    bytes32 l2BootloaderBytecodeHash;\r\n    /// @notice Bytecode hash of default account (bytecode for EOA).\r\n    /// @dev Used as an input to zkp-circuit.\r\n    bytes32 l2DefaultAccountBytecodeHash;\r\n    /// @dev Indicates that the porter may be touched on L2 transactions.\r\n    /// @dev Used as an input to zkp-circuit.\r\n    bool zkPorterIsAvailable;\r\n    /// @dev The maximum number of the L2 gas that a user can request for L1 -> L2 transactions\r\n    /// @dev This is the maximum number of L2 gas that is available for the \"body\" of the transaction, i.e.\r\n    /// without overhead for proving the batch.\r\n    uint256 priorityTxMaxGasLimit;\r\n    /// @dev Storage of variables needed for upgrade facet\r\n    UpgradeStorage __DEPRECATED_upgrades;\r\n    /// @dev A mapping L2 batch number => message number => flag.\r\n    /// @dev The L2 -> L1 log is sent for every withdrawal, so this mapping is serving as\r\n    /// a flag to indicate that the message was already processed.\r\n    /// @dev Used to indicate that eth withdrawal was already processed\r\n    mapping(uint256 => mapping(uint256 => bool)) isEthWithdrawalFinalized;\r\n    /// @dev The most recent withdrawal time and amount reset\r\n    uint256 __DEPRECATED_lastWithdrawalLimitReset;\r\n    /// @dev The accumulated withdrawn amount during the withdrawal limit window\r\n    uint256 __DEPRECATED_withdrawnAmountInWindow;\r\n    /// @dev A mapping user address => the total deposited amount by the user\r\n    mapping(address => uint256) totalDepositedAmountPerUser;\r\n    /// @dev Stores the protocol version. Note, that the protocol version may not only encompass changes to the\r\n    /// smart contracts, but also to the node behavior.\r\n    uint256 protocolVersion;\r\n    /// @dev Hash of the system contract upgrade transaction. If 0, then no upgrade transaction needs to be done.\r\n    bytes32 l2SystemContractsUpgradeTxHash;\r\n    /// @dev Batch number where the upgrade transaction has happened. If 0, then no upgrade transaction has happened\r\n    /// yet.\r\n    uint256 l2SystemContractsUpgradeBatchNumber;\r\n    /// @dev Address which will exercise non-critical changes to the Diamond Proxy (changing validator set & unfreezing)\r\n    address admin;\r\n    /// @notice Address that the governor or admin proposed as one that will replace admin role\r\n    address pendingAdmin;\r\n}\r\n"
			},
			"contracts/bridges/bridge/zksync/libraries/PriorityQueue.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.13;\r\n\r\n/// @notice The structure that contains meta information of the L2 transaction that was requested from L1\r\n/// @dev The weird size of fields was selected specifically to minimize the structure storage size\r\n/// @param canonicalTxHash Hashed L2 transaction data that is needed to process it\r\n/// @param expirationTimestamp Expiration timestamp for this request (must be satisfied before)\r\n/// @param layer2Tip Additional payment to the validator as an incentive to perform the operation\r\nstruct PriorityOperation {\r\n    bytes32 canonicalTxHash;\r\n    uint64 expirationTimestamp;\r\n    uint192 layer2Tip;\r\n}\r\n\r\n/// @author Matter Labs\r\n/// @custom:security-contact security@matterlabs.dev\r\n/// @dev The library provides the API to interact with the priority queue container\r\n/// @dev Order of processing operations from queue - FIFO (Fist in - first out)\r\nlibrary PriorityQueue {\r\n    using PriorityQueue for Queue;\r\n\r\n    /// @notice Container that stores priority operations\r\n    /// @param data The inner mapping that saves priority operation by its index\r\n    /// @param head The pointer to the first unprocessed priority operation, equal to the tail if the queue is empty\r\n    /// @param tail The pointer to the free slot\r\n    struct Queue {\r\n        mapping(uint256 => PriorityOperation) data;\r\n        uint256 tail;\r\n        uint256 head;\r\n    }\r\n\r\n    /// @notice Returns zero if and only if no operations were processed from the queue\r\n    /// @return Index of the oldest priority operation that wasn't processed yet\r\n    function getFirstUnprocessedPriorityTx(Queue storage _queue) internal view returns (uint256) {\r\n        return _queue.head;\r\n    }\r\n\r\n    /// @return The total number of priority operations that were added to the priority queue, including all processed ones\r\n    function getTotalPriorityTxs(Queue storage _queue) internal view returns (uint256) {\r\n        return _queue.tail;\r\n    }\r\n\r\n    /// @return The total number of unprocessed priority operations in a priority queue\r\n    function getSize(Queue storage _queue) internal view returns (uint256) {\r\n        return uint256(_queue.tail - _queue.head);\r\n    }\r\n\r\n    /// @return Whether the priority queue contains no operations\r\n    function isEmpty(Queue storage _queue) internal view returns (bool) {\r\n        return _queue.tail == _queue.head;\r\n    }\r\n\r\n    /// @notice Add the priority operation to the end of the priority queue\r\n    function pushBack(Queue storage _queue, PriorityOperation memory _operation) internal {\r\n        // Save value into the stack to avoid double reading from the storage\r\n        uint256 tail = _queue.tail;\r\n\r\n        _queue.data[tail] = _operation;\r\n        _queue.tail = tail + 1;\r\n    }\r\n\r\n    /// @return The first unprocessed priority operation from the queue\r\n    function front(Queue storage _queue) internal view returns (PriorityOperation memory) {\r\n        require(!_queue.isEmpty(), \"D\"); // priority queue is empty\r\n\r\n        return _queue.data[_queue.head];\r\n    }\r\n\r\n    /// @notice Remove the first unprocessed priority operation from the queue\r\n    /// @return priorityOperation that was popped from the priority queue\r\n    function popFront(Queue storage _queue) internal returns (PriorityOperation memory priorityOperation) {\r\n        require(!_queue.isEmpty(), \"s\"); // priority queue is empty\r\n\r\n        // Save value into the stack to avoid double reading from the storage\r\n        uint256 head = _queue.head;\r\n\r\n        priorityOperation = _queue.data[head];\r\n        delete _queue.data[head];\r\n        _queue.head = head + 1;\r\n    }\r\n}\r\n"
			},
			"contracts/bridges/bridge/common/interfaces/IAllowList.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.13;\r\n\r\ninterface IAllowList {\r\n    /*//////////////////////////////////////////////////////////////\r\n                            EVENTS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    /// @notice Access mode of target contract is changed\r\n    event UpdateAccessMode(address indexed target, AccessMode previousMode, AccessMode newMode);\r\n\r\n    /// @notice Permission to call is changed\r\n    event UpdateCallPermission(address indexed caller, address indexed target, bytes4 indexed functionSig, bool status);\r\n\r\n    /// @notice Type of access to a specific contract includes three different modes\r\n    /// @param Closed No one has access to the contract\r\n    /// @param SpecialAccessOnly Any address with granted special access can interact with a contract (see `hasSpecialAccessToCall`)\r\n    /// @param Public Everyone can interact with a contract\r\n    enum AccessMode {\r\n        Closed,\r\n        SpecialAccessOnly,\r\n        Public\r\n    }\r\n\r\n    /// @dev A struct that contains deposit limit data of a token\r\n    /// @param depositLimitation Whether any deposit limitation is placed or not\r\n    /// @param depositCap The maximum amount that can be deposited.\r\n    struct Deposit {\r\n        bool depositLimitation;\r\n        uint256 depositCap;\r\n    }\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                            GETTERS\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    function getAccessMode(address _target) external view returns (AccessMode);\r\n\r\n    function hasSpecialAccessToCall(\r\n        address _caller,\r\n        address _target,\r\n        bytes4 _functionSig\r\n    ) external view returns (bool);\r\n\r\n    function canCall(\r\n        address _caller,\r\n        address _target,\r\n        bytes4 _functionSig\r\n    ) external view returns (bool);\r\n\r\n    function getTokenDepositLimitData(address _l1Token) external view returns (Deposit memory);\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                           ALLOW LIST LOGIC\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    function setBatchAccessMode(address[] calldata _targets, AccessMode[] calldata _accessMode) external;\r\n\r\n    function setAccessMode(address _target, AccessMode _accessMode) external;\r\n\r\n    function setBatchPermissionToCall(\r\n        address[] calldata _callers,\r\n        address[] calldata _targets,\r\n        bytes4[] calldata _functionSigs,\r\n        bool[] calldata _enables\r\n    ) external;\r\n\r\n    function setPermissionToCall(\r\n        address _caller,\r\n        address _target,\r\n        bytes4 _functionSig,\r\n        bool _enable\r\n    ) external;\r\n\r\n    /*//////////////////////////////////////////////////////////////\r\n                           DEPOSIT LIMIT LOGIC\r\n    //////////////////////////////////////////////////////////////*/\r\n\r\n    function setDepositLimit(\r\n        address _l1Token,\r\n        bool _depositLimitation,\r\n        uint256 _depositCap\r\n    ) external;\r\n}\r\n"
			},
			"contracts/bridges/bridge/zksync/interfaces/IVerifier.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.13;\r\n\r\ninterface IVerifier {\r\n    function verify(\r\n        uint256[] calldata _publicInputs,\r\n        uint256[] calldata _proof,\r\n        uint256[] calldata _recursiveAggregationInput\r\n    ) external view returns (bool);\r\n\r\n    function verificationKeyHash() external pure returns (bytes32);\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/bridges/bridge/common/AllowListed.sol": {
				"AllowListed": {
					"abi": [],
					"devdoc": {
						"author": "Matter Labs",
						"custom:security-contact": "security@matterlabs.dev",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matter Labs\",\"custom:security-contact\":\"security@matterlabs.dev\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridges/bridge/common/AllowListed.sol\":\"AllowListed\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bridges/bridge/common/AllowListed.sol\":{\"keccak256\":\"0xfa60da24f1d22fbb48b9efc58a454f0b995596ddf9181a2d18279dc51d617527\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e6dd2def1c838e5c5fe48eb91966e3d6e1c6ec00002631e5313e33ca65b1016\",\"dweb:/ipfs/QmNj64FKAntdtWH5BsR2eycccb2XYRDza4vsXtwPZT5SAd\"]},\"contracts/bridges/bridge/common/interfaces/IAllowList.sol\":{\"keccak256\":\"0xa73d93ec249506a9c7e45d6701d594f641a221d5cd63aab18fed51a3d7cee612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ae14641c15d6b407b12b6b18ee3bd3960947fae9f0c9a52541fd1f8f7eb3c8\",\"dweb:/ipfs/QmZtD1Y26FNPqqnxrwvnF5fc3TVSk5VcCB9cGeZ535DZgu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/bridges/bridge/common/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"custom:security-contact": "security@matterlabs.dev",
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]. _Since v2.5.0:_ this module is now much more gas efficient, given net gas metering changes introduced in the Istanbul hardfork.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"LOCK_FLAG_ADDRESS": {
								"details": "Address of lock flag variable.Flag is placed at random memory location to not interfere with Storage contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"custom:security-contact\":\"security@matterlabs.dev\",\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]. _Since v2.5.0:_ this module is now much more gas efficient, given net gas metering changes introduced in the Istanbul hardfork.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"LOCK_FLAG_ADDRESS\":{\"details\":\"Address of lock flag variable.Flag is placed at random memory location to not interfere with Storage contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridges/bridge/common/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bridges/bridge/common/ReentrancyGuard.sol\":{\"keccak256\":\"0xf17bfdce868037a2dabe64986f6d96be29ef2a9266fa749f84d8526b4d1784b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8eb19deadde2961e77507cb2b5f72d345586ed9b16f902255ed4d26c9193df23\",\"dweb:/ipfs/QmTQ4tYx1fgqeRKuz283nayCuZHWGeiLT8GfMNMbzomB9a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/bridges/bridge/common/interfaces/IAllowList.sol": {
				"IAllowList": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum IAllowList.AccessMode",
									"name": "previousMode",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "enum IAllowList.AccessMode",
									"name": "newMode",
									"type": "uint8"
								}
							],
							"name": "UpdateAccessMode",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes4",
									"name": "functionSig",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "UpdateCallPermission",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_target",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "_functionSig",
									"type": "bytes4"
								}
							],
							"name": "canCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_target",
									"type": "address"
								}
							],
							"name": "getAccessMode",
							"outputs": [
								{
									"internalType": "enum IAllowList.AccessMode",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_l1Token",
									"type": "address"
								}
							],
							"name": "getTokenDepositLimitData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "depositLimitation",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "depositCap",
											"type": "uint256"
										}
									],
									"internalType": "struct IAllowList.Deposit",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_target",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "_functionSig",
									"type": "bytes4"
								}
							],
							"name": "hasSpecialAccessToCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_target",
									"type": "address"
								},
								{
									"internalType": "enum IAllowList.AccessMode",
									"name": "_accessMode",
									"type": "uint8"
								}
							],
							"name": "setAccessMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_targets",
									"type": "address[]"
								},
								{
									"internalType": "enum IAllowList.AccessMode[]",
									"name": "_accessMode",
									"type": "uint8[]"
								}
							],
							"name": "setBatchAccessMode",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_callers",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "_targets",
									"type": "address[]"
								},
								{
									"internalType": "bytes4[]",
									"name": "_functionSigs",
									"type": "bytes4[]"
								},
								{
									"internalType": "bool[]",
									"name": "_enables",
									"type": "bool[]"
								}
							],
							"name": "setBatchPermissionToCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_l1Token",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_depositLimitation",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_depositCap",
									"type": "uint256"
								}
							],
							"name": "setDepositLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_caller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_target",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "_functionSig",
									"type": "bytes4"
								},
								{
									"internalType": "bool",
									"name": "_enable",
									"type": "bool"
								}
							],
							"name": "setPermissionToCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"canCall(address,address,bytes4)": "b7009613",
							"getAccessMode(address)": "285712c8",
							"getTokenDepositLimitData(address)": "7cf14701",
							"hasSpecialAccessToCall(address,address,bytes4)": "5965cf8c",
							"setAccessMode(address,uint8)": "ffc7d0b4",
							"setBatchAccessMode(address[],uint8[])": "ec5f109a",
							"setBatchPermissionToCall(address[],address[],bytes4[],bool[])": "507d1bed",
							"setDepositLimit(address,bool,uint256)": "dff05449",
							"setPermissionToCall(address,address,bytes4,bool)": "73df5d8d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IAllowList.AccessMode\",\"name\":\"previousMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum IAllowList.AccessMode\",\"name\":\"newMode\",\"type\":\"uint8\"}],\"name\":\"UpdateAccessMode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"functionSig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"UpdateCallPermission\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"_functionSig\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"name\":\"getAccessMode\",\"outputs\":[{\"internalType\":\"enum IAllowList.AccessMode\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"}],\"name\":\"getTokenDepositLimitData\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"depositLimitation\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"depositCap\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowList.Deposit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"_functionSig\",\"type\":\"bytes4\"}],\"name\":\"hasSpecialAccessToCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"enum IAllowList.AccessMode\",\"name\":\"_accessMode\",\"type\":\"uint8\"}],\"name\":\"setAccessMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_targets\",\"type\":\"address[]\"},{\"internalType\":\"enum IAllowList.AccessMode[]\",\"name\":\"_accessMode\",\"type\":\"uint8[]\"}],\"name\":\"setBatchAccessMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_callers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_targets\",\"type\":\"address[]\"},{\"internalType\":\"bytes4[]\",\"name\":\"_functionSigs\",\"type\":\"bytes4[]\"},{\"internalType\":\"bool[]\",\"name\":\"_enables\",\"type\":\"bool[]\"}],\"name\":\"setBatchPermissionToCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_depositLimitation\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_depositCap\",\"type\":\"uint256\"}],\"name\":\"setDepositLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"_functionSig\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"_enable\",\"type\":\"bool\"}],\"name\":\"setPermissionToCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"UpdateAccessMode(address,uint8,uint8)\":{\"notice\":\"Access mode of target contract is changed\"},\"UpdateCallPermission(address,address,bytes4,bool)\":{\"notice\":\"Permission to call is changed\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridges/bridge/common/interfaces/IAllowList.sol\":\"IAllowList\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bridges/bridge/common/interfaces/IAllowList.sol\":{\"keccak256\":\"0xa73d93ec249506a9c7e45d6701d594f641a221d5cd63aab18fed51a3d7cee612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ae14641c15d6b407b12b6b18ee3bd3960947fae9f0c9a52541fd1f8f7eb3c8\",\"dweb:/ipfs/QmZtD1Y26FNPqqnxrwvnF5fc3TVSk5VcCB9cGeZ535DZgu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"UpdateAccessMode(address,uint8,uint8)": {
								"notice": "Access mode of target contract is changed"
							},
							"UpdateCallPermission(address,address,bytes4,bool)": {
								"notice": "Permission to call is changed"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/bridges/bridge/zksync/facets/Base.sol": {
				"Base": {
					"abi": [],
					"devdoc": {
						"author": "Matter Labs",
						"custom:security-contact": "security@matterlabs.dev",
						"kind": "dev",
						"methods": {},
						"title": "Base contract containing functions accessible to the other facets.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/bridges/bridge/zksync/facets/Base.sol\":389:1072  contract Base is ReentrancyGuard, AllowListed {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/bridges/bridge/zksync/facets/Base.sol\":389:1072  contract Base is ReentrancyGuard, AllowListed {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d0e0108cef2968a177b5aea335052e5ae352bc84065cfa33f4b246d0defb982a64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220d0e0108cef2968a177b5aea335052e5ae352bc84065cfa33f4b246d0defb982a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xE0 LT DUP13 0xEF 0x29 PUSH9 0xA177B5AEA335052E5A 0xE3 MSTORE 0xBC DUP5 MOD TLOAD STATICCALL CALLER DELEGATECALL 0xB2 CHAINID 0xD0 0xDE 0xFB SWAP9 0x2A PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "389:683:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220d0e0108cef2968a177b5aea335052e5ae352bc84065cfa33f4b246d0defb982a64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xE0 LT DUP13 0xEF 0x29 PUSH9 0xA177B5AEA335052E5A 0xE3 MSTORE 0xBC DUP5 MOD TLOAD STATICCALL CALLER DELEGATECALL 0xB2 CHAINID 0xD0 0xDE 0xFB SWAP9 0x2A PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "389:683:6:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 389,
									"end": 1072,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 1072,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d0e0108cef2968a177b5aea335052e5ae352bc84065cfa33f4b246d0defb982a64736f6c634300081a0033",
									".code": [
										{
											"begin": 389,
											"end": 1072,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 389,
											"end": 1072,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 389,
											"end": 1072,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 389,
											"end": 1072,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 1072,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 1072,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/bridges/bridge/common/AllowListed.sol",
								"contracts/bridges/bridge/common/ReentrancyGuard.sol",
								"contracts/bridges/bridge/common/interfaces/IAllowList.sol",
								"contracts/bridges/bridge/zksync/Storage.sol",
								"contracts/bridges/bridge/zksync/facets/Base.sol",
								"contracts/bridges/bridge/zksync/interfaces/IVerifier.sol",
								"contracts/bridges/bridge/zksync/libraries/PriorityQueue.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matter Labs\",\"custom:security-contact\":\"security@matterlabs.dev\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Base contract containing functions accessible to the other facets.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridges/bridge/zksync/facets/Base.sol\":\"Base\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/bridges/bridge/common/AllowListed.sol\":{\"keccak256\":\"0xfa60da24f1d22fbb48b9efc58a454f0b995596ddf9181a2d18279dc51d617527\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e6dd2def1c838e5c5fe48eb91966e3d6e1c6ec00002631e5313e33ca65b1016\",\"dweb:/ipfs/QmNj64FKAntdtWH5BsR2eycccb2XYRDza4vsXtwPZT5SAd\"]},\"contracts/bridges/bridge/common/ReentrancyGuard.sol\":{\"keccak256\":\"0xf17bfdce868037a2dabe64986f6d96be29ef2a9266fa749f84d8526b4d1784b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8eb19deadde2961e77507cb2b5f72d345586ed9b16f902255ed4d26c9193df23\",\"dweb:/ipfs/QmTQ4tYx1fgqeRKuz283nayCuZHWGeiLT8GfMNMbzomB9a\"]},\"contracts/bridges/bridge/common/interfaces/IAllowList.sol\":{\"keccak256\":\"0xa73d93ec249506a9c7e45d6701d594f641a221d5cd63aab18fed51a3d7cee612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ae14641c15d6b407b12b6b18ee3bd3960947fae9f0c9a52541fd1f8f7eb3c8\",\"dweb:/ipfs/QmZtD1Y26FNPqqnxrwvnF5fc3TVSk5VcCB9cGeZ535DZgu\"]},\"contracts/bridges/bridge/zksync/Storage.sol\":{\"keccak256\":\"0xbbbd33f5928ad4c4308ff5bdc8f58ceb32a665480228498858941e8238fb2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0aac0650cf4768a229e16707a7553de930411378950c233596ed8ec2bfcc174\",\"dweb:/ipfs/Qmc8YrjqpVcz5BD8tk8RGocraRNai7c9z29qMJSB9RAQWo\"]},\"contracts/bridges/bridge/zksync/facets/Base.sol\":{\"keccak256\":\"0xf544b22bfa327546ed8092167c5f6a8b8d17ccdf483b7da124e8089ab3f9bafc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1ed1112cbb7a75f1cb3d9231740c65bb87ada41efb7c8521701443f517eaaf9\",\"dweb:/ipfs/QmXRMi6W5SfyTRNwYywyAyQT6DPgSWSBkrfsxQ8g7cmzwd\"]},\"contracts/bridges/bridge/zksync/interfaces/IVerifier.sol\":{\"keccak256\":\"0x6704250c491939d8ee423562046811aeffb9fd942ad72751f80818d0a3d57c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7622e9d9a519195105f997f6d88187c9f5428bf2a52f71b500c34bf78b3c766a\",\"dweb:/ipfs/QmX7yEwnhy4guB79FJiMxgHChbuGnQ9Ens18mqThAi5shD\"]},\"contracts/bridges/bridge/zksync/libraries/PriorityQueue.sol\":{\"keccak256\":\"0x0340dcaa8744e0ad548375bc5c681e994f274a92435e7053d16beeba2d3adf26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fe288f3b8fd86749e287fa78fafd2f373d29187b3a243539c1830e5b8074104\",\"dweb:/ipfs/QmcY6C5Qk2qohee9YtSWqdDMtVuXyXauSkaCJqAoXVR9cR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 557,
								"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
								"label": "s",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(AppStorage)543_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)7_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[7]",
								"numberOfBytes": "224"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IAllowList)386": {
								"encoding": "inplace",
								"label": "contract IAllowList",
								"numberOfBytes": "20"
							},
							"t_contract(IVerifier)628": {
								"encoding": "inplace",
								"label": "contract IVerifier",
								"numberOfBytes": "20"
							},
							"t_enum(UpgradeState)396": {
								"encoding": "inplace",
								"label": "enum UpgradeState",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_uint256,t_struct(PriorityOperation)638_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct PriorityOperation)",
								"numberOfBytes": "32",
								"value": "t_struct(PriorityOperation)638_storage"
							},
							"t_struct(AppStorage)543_storage": {
								"encoding": "inplace",
								"label": "struct AppStorage",
								"members": [
									{
										"astId": 447,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "__DEPRECATED_diamondCutStorage",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_uint256)7_storage"
									},
									{
										"astId": 450,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "governor",
										"offset": 0,
										"slot": "7",
										"type": "t_address"
									},
									{
										"astId": 453,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "pendingGovernor",
										"offset": 0,
										"slot": "8",
										"type": "t_address"
									},
									{
										"astId": 458,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "validators",
										"offset": 0,
										"slot": "9",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 462,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "verifier",
										"offset": 0,
										"slot": "10",
										"type": "t_contract(IVerifier)628"
									},
									{
										"astId": 465,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "totalBatchesExecuted",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 468,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "totalBatchesVerified",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 471,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "totalBatchesCommitted",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 476,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "storedBatchHashes",
										"offset": 0,
										"slot": "14",
										"type": "t_mapping(t_uint256,t_bytes32)"
									},
									{
										"astId": 481,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "l2LogsRootHashes",
										"offset": 0,
										"slot": "15",
										"type": "t_mapping(t_uint256,t_bytes32)"
									},
									{
										"astId": 485,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "priorityQueue",
										"offset": 0,
										"slot": "16",
										"type": "t_struct(Queue)654_storage"
									},
									{
										"astId": 489,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "allowList",
										"offset": 0,
										"slot": "19",
										"type": "t_contract(IAllowList)386"
									},
									{
										"astId": 493,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "verifierParams",
										"offset": 0,
										"slot": "20",
										"type": "t_struct(VerifierParams)441_storage"
									},
									{
										"astId": 496,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "l2BootloaderBytecodeHash",
										"offset": 0,
										"slot": "23",
										"type": "t_bytes32"
									},
									{
										"astId": 499,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "l2DefaultAccountBytecodeHash",
										"offset": 0,
										"slot": "24",
										"type": "t_bytes32"
									},
									{
										"astId": 502,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "zkPorterIsAvailable",
										"offset": 0,
										"slot": "25",
										"type": "t_bool"
									},
									{
										"astId": 505,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "priorityTxMaxGasLimit",
										"offset": 0,
										"slot": "26",
										"type": "t_uint256"
									},
									{
										"astId": 509,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "__DEPRECATED_upgrades",
										"offset": 0,
										"slot": "27",
										"type": "t_struct(UpgradeStorage)411_storage"
									},
									{
										"astId": 516,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "isEthWithdrawalFinalized",
										"offset": 0,
										"slot": "29",
										"type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))"
									},
									{
										"astId": 519,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "__DEPRECATED_lastWithdrawalLimitReset",
										"offset": 0,
										"slot": "30",
										"type": "t_uint256"
									},
									{
										"astId": 522,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "__DEPRECATED_withdrawnAmountInWindow",
										"offset": 0,
										"slot": "31",
										"type": "t_uint256"
									},
									{
										"astId": 527,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "totalDepositedAmountPerUser",
										"offset": 0,
										"slot": "32",
										"type": "t_mapping(t_address,t_uint256)"
									},
									{
										"astId": 530,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "protocolVersion",
										"offset": 0,
										"slot": "33",
										"type": "t_uint256"
									},
									{
										"astId": 533,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "l2SystemContractsUpgradeTxHash",
										"offset": 0,
										"slot": "34",
										"type": "t_bytes32"
									},
									{
										"astId": 536,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "l2SystemContractsUpgradeBatchNumber",
										"offset": 0,
										"slot": "35",
										"type": "t_uint256"
									},
									{
										"astId": 539,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "admin",
										"offset": 0,
										"slot": "36",
										"type": "t_address"
									},
									{
										"astId": 542,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "pendingAdmin",
										"offset": 0,
										"slot": "37",
										"type": "t_address"
									}
								],
								"numberOfBytes": "1216"
							},
							"t_struct(PriorityOperation)638_storage": {
								"encoding": "inplace",
								"label": "struct PriorityOperation",
								"members": [
									{
										"astId": 633,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "canonicalTxHash",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 635,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "expirationTimestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint64"
									},
									{
										"astId": 637,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "layer2Tip",
										"offset": 8,
										"slot": "1",
										"type": "t_uint192"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Queue)654_storage": {
								"encoding": "inplace",
								"label": "struct PriorityQueue.Queue",
								"members": [
									{
										"astId": 649,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "data",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_uint256,t_struct(PriorityOperation)638_storage)"
									},
									{
										"astId": 651,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "tail",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 653,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "head",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(UpgradeStorage)411_storage": {
								"encoding": "inplace",
								"label": "struct UpgradeStorage",
								"members": [
									{
										"astId": 399,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "proposedUpgradeHash",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 402,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "state",
										"offset": 0,
										"slot": "1",
										"type": "t_enum(UpgradeState)396"
									},
									{
										"astId": 404,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "securityCouncil",
										"offset": 1,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 406,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "approvedBySecurityCouncil",
										"offset": 21,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 408,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "proposedUpgradeTimestamp",
										"offset": 22,
										"slot": "1",
										"type": "t_uint40"
									},
									{
										"astId": 410,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "currentProposalId",
										"offset": 27,
										"slot": "1",
										"type": "t_uint40"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(VerifierParams)441_storage": {
								"encoding": "inplace",
								"label": "struct VerifierParams",
								"members": [
									{
										"astId": 436,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "recursionNodeLevelVkHash",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 438,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "recursionLeafLevelVkHash",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									},
									{
										"astId": 440,
										"contract": "contracts/bridges/bridge/zksync/facets/Base.sol:Base",
										"label": "recursionCircuitsSetVksHash",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint192": {
								"encoding": "inplace",
								"label": "uint192",
								"numberOfBytes": "24"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint40": {
								"encoding": "inplace",
								"label": "uint40",
								"numberOfBytes": "5"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/bridges/bridge/zksync/interfaces/IVerifier.sol": {
				"IVerifier": {
					"abi": [
						{
							"inputs": [],
							"name": "verificationKeyHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_publicInputs",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_proof",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_recursiveAggregationInput",
									"type": "uint256[]"
								}
							],
							"name": "verify",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"verificationKeyHash()": "9e8945d2",
							"verify(uint256[],uint256[],uint256[])": "87d9d023"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"verificationKeyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_publicInputs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_proof\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_recursiveAggregationInput\",\"type\":\"uint256[]\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridges/bridge/zksync/interfaces/IVerifier.sol\":\"IVerifier\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bridges/bridge/zksync/interfaces/IVerifier.sol\":{\"keccak256\":\"0x6704250c491939d8ee423562046811aeffb9fd942ad72751f80818d0a3d57c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7622e9d9a519195105f997f6d88187c9f5428bf2a52f71b500c34bf78b3c766a\",\"dweb:/ipfs/QmX7yEwnhy4guB79FJiMxgHChbuGnQ9Ens18mqThAi5shD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/bridges/bridge/zksync/libraries/PriorityQueue.sol": {
				"PriorityQueue": {
					"abi": [],
					"devdoc": {
						"author": "Matter Labs",
						"custom:security-contact": "security@matterlabs.dev",
						"details": "The library provides the API to interact with the priority queue containerOrder of processing operations from queue - FIFO (Fist in - first out)",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/bridges/bridge/zksync/libraries/PriorityQueue.sol\":915:3636  library PriorityQueue {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/bridges/bridge/zksync/libraries/PriorityQueue.sol\":915:3636  library PriorityQueue {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204aa3b9ad7287ec869640af8253a332ac9a2252b77653083ccd9e1753e00c9b3564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204aa3b9ad7287ec869640af8253a332ac9a2252b77653083ccd9e1753e00c9b3564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE LOG3 0xB9 0xAD PUSH19 0x87EC869640AF8253A332AC9A2252B77653083C 0xCD SWAP15 OR MSTORE8 0xE0 0xC SWAP12 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "915:2721:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204aa3b9ad7287ec869640af8253a332ac9a2252b77653083ccd9e1753e00c9b3564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE LOG3 0xB9 0xAD PUSH19 0x87EC869640AF8253A332AC9A2252B77653083C 0xCD SWAP15 OR MSTORE8 0xE0 0xC SWAP12 CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "915:2721:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"front(struct PriorityQueue.Queue storage pointer)": "infinite",
								"getFirstUnprocessedPriorityTx(struct PriorityQueue.Queue storage pointer)": "infinite",
								"getSize(struct PriorityQueue.Queue storage pointer)": "infinite",
								"getTotalPriorityTxs(struct PriorityQueue.Queue storage pointer)": "infinite",
								"isEmpty(struct PriorityQueue.Queue storage pointer)": "infinite",
								"popFront(struct PriorityQueue.Queue storage pointer)": "infinite",
								"pushBack(struct PriorityQueue.Queue storage pointer,struct PriorityOperation memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 915,
									"end": 3636,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 915,
									"end": 3636,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204aa3b9ad7287ec869640af8253a332ac9a2252b77653083ccd9e1753e00c9b3564736f6c634300081a0033",
									".code": [
										{
											"begin": 915,
											"end": 3636,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 915,
											"end": 3636,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 915,
											"end": 3636,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 915,
											"end": 3636,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 915,
											"end": 3636,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 3636,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 915,
											"end": 3636,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 3636,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 915,
											"end": 3636,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/bridges/bridge/common/AllowListed.sol",
								"contracts/bridges/bridge/common/ReentrancyGuard.sol",
								"contracts/bridges/bridge/common/interfaces/IAllowList.sol",
								"contracts/bridges/bridge/zksync/Storage.sol",
								"contracts/bridges/bridge/zksync/facets/Base.sol",
								"contracts/bridges/bridge/zksync/interfaces/IVerifier.sol",
								"contracts/bridges/bridge/zksync/libraries/PriorityQueue.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matter Labs\",\"custom:security-contact\":\"security@matterlabs.dev\",\"details\":\"The library provides the API to interact with the priority queue containerOrder of processing operations from queue - FIFO (Fist in - first out)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bridges/bridge/zksync/libraries/PriorityQueue.sol\":\"PriorityQueue\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bridges/bridge/zksync/libraries/PriorityQueue.sol\":{\"keccak256\":\"0x0340dcaa8744e0ad548375bc5c681e994f274a92435e7053d16beeba2d3adf26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fe288f3b8fd86749e287fa78fafd2f373d29187b3a243539c1830e5b8074104\",\"dweb:/ipfs/QmcY6C5Qk2qohee9YtSWqdDMtVuXyXauSkaCJqAoXVR9cR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"contracts/bridges/bridge/common/AllowListed.sol": {
				"ast": {
					"absolutePath": "contracts/bridges/bridge/common/AllowListed.sol",
					"exportedSymbols": {
						"AllowListed": [
							205
						],
						"IAllowList": [
							386
						]
					},
					"id": 206,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:2"
						},
						{
							"absolutePath": "contracts/bridges/bridge/common/interfaces/IAllowList.sol",
							"file": "./interfaces/IAllowList.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 206,
							"sourceUnit": 387,
							"src": "63:37:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "AllowListed",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 181,
								"nodeType": "StructuredDocumentation",
								"src": "104:79:2",
								"text": "@author Matter Labs\n @custom:security-contact security@matterlabs.dev"
							},
							"fullyImplemented": true,
							"id": 205,
							"linearizedBaseContracts": [
								205
							],
							"name": "AllowListed",
							"nameLocation": "201:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "274:174:2",
										"statements": [
											{
												"id": 201,
												"nodeType": "Block",
												"src": "333:96:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 189,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "375:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "379:6:2",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "375:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 193,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "395:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_AllowListed_$205",
																						"typeString": "contract AllowListed"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_AllowListed_$205",
																						"typeString": "contract AllowListed"
																					}
																				],
																				"id": 192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "387:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 191,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "387:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "387:13:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"expression": {
																				"id": 195,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "402:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "406:3:2",
																			"memberName": "sig",
																			"nodeType": "MemberAccess",
																			"src": "402:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"expression": {
																			"id": 187,
																			"name": "_allowList",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 184,
																			"src": "356:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IAllowList_$386",
																				"typeString": "contract IAllowList"
																			}
																		},
																		"id": 188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "367:7:2",
																		"memberName": "canCall",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 324,
																		"src": "356:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$",
																			"typeString": "function (address,address,bytes4) view external returns (bool)"
																		}
																	},
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "356:54:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "6e72",
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "412:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c072c52b8bba89e69ab1529b25a7fb9174c2b83cea239d71242fee4a79239cb0",
																		"typeString": "literal_string \"nr\""
																	},
																	"value": "nr"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_c072c52b8bba89e69ab1529b25a7fb9174c2b83cea239d71242fee4a79239cb0",
																		"typeString": "literal_string \"nr\""
																	}
																],
																"id": 186,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "348:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "348:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 200,
														"nodeType": "ExpressionStatement",
														"src": "348:69:2"
													}
												]
											},
											{
												"id": 202,
												"nodeType": "PlaceholderStatement",
												"src": "439:1:2"
											}
										]
									},
									"id": 204,
									"name": "senderCanCallFunction",
									"nameLocation": "229:21:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "_allowList",
												"nameLocation": "262:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "251:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IAllowList_$386",
													"typeString": "contract IAllowList"
												},
												"typeName": {
													"id": 183,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 182,
														"name": "IAllowList",
														"nameLocations": [
															"251:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 386,
														"src": "251:10:2"
													},
													"referencedDeclaration": 386,
													"src": "251:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAllowList_$386",
														"typeString": "contract IAllowList"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:23:2"
									},
									"src": "220:228:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 206,
							"src": "183:268:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:418:2"
				},
				"id": 2
			},
			"contracts/bridges/bridge/common/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "contracts/bridges/bridge/common/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							259
						]
					},
					"id": 260,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 207,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 208,
								"nodeType": "StructuredDocumentation",
								"src": "63:958:3",
								"text": " @custom:security-contact security@matterlabs.dev\n @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n _Since v2.5.0:_ this module is now much more gas efficient, given net gas\n metering changes introduced in the Istanbul hardfork."
							},
							"fullyImplemented": true,
							"id": 259,
							"linearizedBaseContracts": [
								259
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1041:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "1064:134:3",
										"text": "@dev Address of lock flag variable.\n @dev Flag is placed at random memory location to not interfere with Storage contract."
									},
									"id": 212,
									"mutability": "constant",
									"name": "LOCK_FLAG_ADDRESS",
									"nameLocation": "1271:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 259,
									"src": "1246:111:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 210,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1246:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307838653934666564343432333965623233313461623761343036333435653663356138663063636564663362363030646533643030346536373263333361626634",
										"id": 211,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1291:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64491676630466243809640389642816699344250122302177356955313734891917720923124_by_1",
											"typeString": "int_const 6449...(69 digits omitted)...3124"
										},
										"value": "0x8e94fed44239eb2314ab7a406345e6c5a8f0ccedf3b600de3d004e672c33abf4"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 215,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1973:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 259,
									"src": "1948:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 213,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1948:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 214,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1988:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 218,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "2021:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 259,
									"src": "1996:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1996:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2032:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "2080:59:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 220,
														"name": "_initializeReentrancyGuard",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2091:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "2091:28:3"
											},
											{
												"id": 223,
												"nodeType": "PlaceholderStatement",
												"src": "2130:1:3"
											}
										]
									},
									"id": 225,
									"name": "reentrancyGuardInitializer",
									"nameLocation": "2051:26:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2077:2:3"
									},
									"src": "2042:97:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "2193:511:3",
										"statements": [
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "lockSlotOldValue",
														"nameLocation": "2212:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 239,
														"src": "2204:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 230,
												"nodeType": "VariableDeclarationStatement",
												"src": "2204:24:3"
											},
											{
												"AST": {
													"nativeSrc": "2418:123:3",
													"nodeType": "YulBlock",
													"src": "2418:123:3",
													"statements": [
														{
															"nativeSrc": "2433:44:3",
															"nodeType": "YulAssignment",
															"src": "2433:44:3",
															"value": {
																"arguments": [
																	{
																		"name": "LOCK_FLAG_ADDRESS",
																		"nativeSrc": "2459:17:3",
																		"nodeType": "YulIdentifier",
																		"src": "2459:17:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "2453:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "2453:5:3"
																},
																"nativeSrc": "2453:24:3",
																"nodeType": "YulFunctionCall",
																"src": "2453:24:3"
															},
															"variableNames": [
																{
																	"name": "lockSlotOldValue",
																	"nativeSrc": "2433:16:3",
																	"nodeType": "YulIdentifier",
																	"src": "2433:16:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "LOCK_FLAG_ADDRESS",
																		"nativeSrc": "2498:17:3",
																		"nodeType": "YulIdentifier",
																		"src": "2498:17:3"
																	},
																	{
																		"name": "_NOT_ENTERED",
																		"nativeSrc": "2517:12:3",
																		"nodeType": "YulIdentifier",
																		"src": "2517:12:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2491:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2491:6:3"
																},
																"nativeSrc": "2491:39:3",
																"nodeType": "YulFunctionCall",
																"src": "2491:39:3"
															},
															"nativeSrc": "2491:39:3",
															"nodeType": "YulExpressionStatement",
															"src": "2491:39:3"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 212,
														"isOffset": false,
														"isSlot": false,
														"src": "2459:17:3",
														"valueSize": 1
													},
													{
														"declaration": 212,
														"isOffset": false,
														"isSlot": false,
														"src": "2498:17:3",
														"valueSize": 1
													},
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "2517:12:3",
														"valueSize": 1
													},
													{
														"declaration": 229,
														"isOffset": false,
														"isSlot": false,
														"src": "2433:16:3",
														"valueSize": 1
													}
												],
												"id": 231,
												"nodeType": "InlineAssembly",
												"src": "2409:132:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 233,
																"name": "lockSlotOldValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2668:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2688:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2668:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "3142",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2691:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_73661624d3d9d622617907ec04fc037e9913f4237ce6560d7963508388d43472",
																"typeString": "literal_string \"1B\""
															},
															"value": "1B"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_73661624d3d9d622617907ec04fc037e9913f4237ce6560d7963508388d43472",
																"typeString": "literal_string \"1B\""
															}
														],
														"id": 232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2660:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2660:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "2660:36:3"
											}
										]
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeReentrancyGuard",
									"nameLocation": "2156:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2182:2:3"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2193:0:3"
									},
									"scope": 259,
									"src": "2147:557:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "3112:618:3",
										"statements": [
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "_status",
														"nameLocation": "3131:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "3123:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3123:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"nodeType": "VariableDeclarationStatement",
												"src": "3123:15:3"
											},
											{
												"AST": {
													"nativeSrc": "3158:61:3",
													"nodeType": "YulBlock",
													"src": "3158:61:3",
													"statements": [
														{
															"nativeSrc": "3173:35:3",
															"nodeType": "YulAssignment",
															"src": "3173:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "LOCK_FLAG_ADDRESS",
																		"nativeSrc": "3190:17:3",
																		"nodeType": "YulIdentifier",
																		"src": "3190:17:3"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "3184:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3184:5:3"
																},
																"nativeSrc": "3184:24:3",
																"nodeType": "YulFunctionCall",
																"src": "3184:24:3"
															},
															"variableNames": [
																{
																	"name": "_status",
																	"nativeSrc": "3173:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3173:7:3"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 212,
														"isOffset": false,
														"isSlot": false,
														"src": "3190:17:3",
														"valueSize": 1
													},
													{
														"declaration": 244,
														"isOffset": false,
														"isSlot": false,
														"src": "3173:7:3",
														"valueSize": 1
													}
												],
												"id": 246,
												"nodeType": "InlineAssembly",
												"src": "3149:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 248,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "3311:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 249,
																"name": "_NOT_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 215,
																"src": "3322:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3311:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7231",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3336:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d836ba56b88abad41af9a2d0e7a278279f5d24a80179a540545eb5cc8621d6e",
																"typeString": "literal_string \"r1\""
															},
															"value": "r1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d836ba56b88abad41af9a2d0e7a278279f5d24a80179a540545eb5cc8621d6e",
																"typeString": "literal_string \"r1\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3303:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3303:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "3303:38:3"
											},
											{
												"AST": {
													"nativeSrc": "3428:61:3",
													"nodeType": "YulBlock",
													"src": "3428:61:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "LOCK_FLAG_ADDRESS",
																		"nativeSrc": "3450:17:3",
																		"nodeType": "YulIdentifier",
																		"src": "3450:17:3"
																	},
																	{
																		"name": "_ENTERED",
																		"nativeSrc": "3469:8:3",
																		"nodeType": "YulIdentifier",
																		"src": "3469:8:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3443:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3443:6:3"
																},
																"nativeSrc": "3443:35:3",
																"nodeType": "YulFunctionCall",
																"src": "3443:35:3"
															},
															"nativeSrc": "3443:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "3443:35:3"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 212,
														"isOffset": false,
														"isSlot": false,
														"src": "3450:17:3",
														"valueSize": 1
													},
													{
														"declaration": 218,
														"isOffset": false,
														"isSlot": false,
														"src": "3469:8:3",
														"valueSize": 1
													}
												],
												"id": 254,
												"nodeType": "InlineAssembly",
												"src": "3419:70:3"
											},
											{
												"id": 255,
												"nodeType": "PlaceholderStatement",
												"src": "3501:1:3"
											},
											{
												"AST": {
													"nativeSrc": "3658:65:3",
													"nodeType": "YulBlock",
													"src": "3658:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "LOCK_FLAG_ADDRESS",
																		"nativeSrc": "3680:17:3",
																		"nodeType": "YulIdentifier",
																		"src": "3680:17:3"
																	},
																	{
																		"name": "_NOT_ENTERED",
																		"nativeSrc": "3699:12:3",
																		"nodeType": "YulIdentifier",
																		"src": "3699:12:3"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3673:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3673:6:3"
																},
																"nativeSrc": "3673:39:3",
																"nodeType": "YulFunctionCall",
																"src": "3673:39:3"
															},
															"nativeSrc": "3673:39:3",
															"nodeType": "YulExpressionStatement",
															"src": "3673:39:3"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 212,
														"isOffset": false,
														"isSlot": false,
														"src": "3680:17:3",
														"valueSize": 1
													},
													{
														"declaration": 215,
														"isOffset": false,
														"isSlot": false,
														"src": "3699:12:3",
														"valueSize": 1
													}
												],
												"id": 256,
												"nodeType": "InlineAssembly",
												"src": "3649:74:3"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "2712:370:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
									},
									"id": 258,
									"name": "nonReentrant",
									"nameLocation": "3097:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3109:2:3"
									},
									"src": "3088:642:3",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 260,
							"src": "1023:2710:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:3700:3"
				},
				"id": 3
			},
			"contracts/bridges/bridge/common/interfaces/IAllowList.sol": {
				"ast": {
					"absolutePath": "contracts/bridges/bridge/common/interfaces/IAllowList.sol",
					"exportedSymbols": {
						"IAllowList": [
							386
						]
					},
					"id": 387,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 261,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAllowList",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 386,
							"linearizedBaseContracts": [
								386
							],
							"name": "IAllowList",
							"nameLocation": "73:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "269:53:4",
										"text": "@notice Access mode of target contract is changed"
									},
									"eventSelector": "3b3c3f982e4b12b1870d2ff77adfdb97d3838faab0fd8a6b255160e52e79a82f",
									"id": 272,
									"name": "UpdateAccessMode",
									"nameLocation": "334:16:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "367:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "351:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousMode",
												"nameLocation": "386:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "375:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_AccessMode_$288",
													"typeString": "enum IAllowList.AccessMode"
												},
												"typeName": {
													"id": 266,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 265,
														"name": "AccessMode",
														"nameLocations": [
															"375:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 288,
														"src": "375:10:4"
													},
													"referencedDeclaration": 288,
													"src": "375:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_AccessMode_$288",
														"typeString": "enum IAllowList.AccessMode"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMode",
												"nameLocation": "411:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "400:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_AccessMode_$288",
													"typeString": "enum IAllowList.AccessMode"
												},
												"typeName": {
													"id": 269,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 268,
														"name": "AccessMode",
														"nameLocations": [
															"400:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 288,
														"src": "400:10:4"
													},
													"referencedDeclaration": 288,
													"src": "400:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_AccessMode_$288",
														"typeString": "enum IAllowList.AccessMode"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:69:4"
									},
									"src": "328:92:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "428:41:4",
										"text": "@notice Permission to call is changed"
									},
									"eventSelector": "3336e7aa4c86fcb95fa993c8022c30690f1f696f67f138c845d81dc5484c9a32",
									"id": 283,
									"name": "UpdateCallPermission",
									"nameLocation": "481:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "518:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "502:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "542:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "526:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"indexed": true,
												"mutability": "mutable",
												"name": "functionSig",
												"nameLocation": "565:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "550:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 278,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "550:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "583:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "578:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 280,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "578:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:89:4"
									},
									"src": "475:116:4"
								},
								{
									"canonicalName": "IAllowList.AccessMode",
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "599:332:4",
										"text": "@notice Type of access to a specific contract includes three different modes\n @param Closed No one has access to the contract\n @param SpecialAccessOnly Any address with granted special access can interact with a contract (see `hasSpecialAccessToCall`)\n @param Public Everyone can interact with a contract"
									},
									"id": 288,
									"members": [
										{
											"id": 285,
											"name": "Closed",
											"nameLocation": "964:6:4",
											"nodeType": "EnumValue",
											"src": "964:6:4"
										},
										{
											"id": 286,
											"name": "SpecialAccessOnly",
											"nameLocation": "981:17:4",
											"nodeType": "EnumValue",
											"src": "981:17:4"
										},
										{
											"id": 287,
											"name": "Public",
											"nameLocation": "1009:6:4",
											"nodeType": "EnumValue",
											"src": "1009:6:4"
										}
									],
									"name": "AccessMode",
									"nameLocation": "942:10:4",
									"nodeType": "EnumDefinition",
									"src": "937:85:4"
								},
								{
									"canonicalName": "IAllowList.Deposit",
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "1030:212:4",
										"text": "@dev A struct that contains deposit limit data of a token\n @param depositLimitation Whether any deposit limitation is placed or not\n @param depositCap The maximum amount that can be deposited."
									},
									"id": 294,
									"members": [
										{
											"constant": false,
											"id": 291,
											"mutability": "mutable",
											"name": "depositLimitation",
											"nameLocation": "1279:17:4",
											"nodeType": "VariableDeclaration",
											"scope": 294,
											"src": "1274:22:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 290,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1274:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 293,
											"mutability": "mutable",
											"name": "depositCap",
											"nameLocation": "1315:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 294,
											"src": "1307:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 292,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1307:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nameLocation": "1255:7:4",
									"nodeType": "StructDefinition",
									"scope": 386,
									"src": "1248:85:4",
									"visibility": "public"
								},
								{
									"functionSelector": "285712c8",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAccessMode",
									"nameLocation": "1529:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "_target",
												"nameLocation": "1551:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1543:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:17:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "1583:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_AccessMode_$288",
													"typeString": "enum IAllowList.AccessMode"
												},
												"typeName": {
													"id": 299,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 298,
														"name": "AccessMode",
														"nameLocations": [
															"1583:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 288,
														"src": "1583:10:4"
													},
													"referencedDeclaration": 288,
													"src": "1583:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_AccessMode_$288",
														"typeString": "enum IAllowList.AccessMode"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:12:4"
									},
									"scope": 386,
									"src": "1520:75:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5965cf8c",
									"id": 313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasSpecialAccessToCall",
									"nameLocation": "1612:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "1653:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1645:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "_target",
												"nameLocation": "1679:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1671:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "_functionSig",
												"nameLocation": "1704:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1697:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 307,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1697:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:89:4"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1747:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1747:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1746:6:4"
									},
									"scope": 386,
									"src": "1603:150:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b7009613",
									"id": 324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canCall",
									"nameLocation": "1770:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "1796:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1788:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1788:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "_target",
												"nameLocation": "1822:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1814:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "_functionSig",
												"nameLocation": "1847:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1840:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 318,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1840:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1777:89:4"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1890:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 321,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1890:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1889:6:4"
									},
									"scope": 386,
									"src": "1761:135:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7cf14701",
									"id": 332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenDepositLimitData",
									"nameLocation": "1913:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "_l1Token",
												"nameLocation": "1946:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1938:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:18:4"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1979:14:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Deposit_$294_memory_ptr",
													"typeString": "struct IAllowList.Deposit"
												},
												"typeName": {
													"id": 329,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 328,
														"name": "Deposit",
														"nameLocations": [
															"1979:7:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 294,
														"src": "1979:7:4"
													},
													"referencedDeclaration": 294,
													"src": "1979:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deposit_$294_storage_ptr",
														"typeString": "struct IAllowList.Deposit"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1978:16:4"
									},
									"scope": 386,
									"src": "1904:91:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ec5f109a",
									"id": 342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBatchAccessMode",
									"nameLocation": "2199:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "_targets",
												"nameLocation": "2237:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2218:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 333,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2218:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 334,
													"nodeType": "ArrayTypeName",
													"src": "2218:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "_accessMode",
												"nameLocation": "2269:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2247:33:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_enum$_AccessMode_$288_$dyn_calldata_ptr",
													"typeString": "enum IAllowList.AccessMode[]"
												},
												"typeName": {
													"baseType": {
														"id": 337,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 336,
															"name": "AccessMode",
															"nameLocations": [
																"2247:10:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 288,
															"src": "2247:10:4"
														},
														"referencedDeclaration": 288,
														"src": "2247:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_AccessMode_$288",
															"typeString": "enum IAllowList.AccessMode"
														}
													},
													"id": 338,
													"nodeType": "ArrayTypeName",
													"src": "2247:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_enum$_AccessMode_$288_$dyn_storage_ptr",
														"typeString": "enum IAllowList.AccessMode[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2217:64:4"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2290:0:4"
									},
									"scope": 386,
									"src": "2190:101:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ffc7d0b4",
									"id": 350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAccessMode",
									"nameLocation": "2308:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "_target",
												"nameLocation": "2330:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2322:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2322:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "_accessMode",
												"nameLocation": "2350:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2339:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_AccessMode_$288",
													"typeString": "enum IAllowList.AccessMode"
												},
												"typeName": {
													"id": 346,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 345,
														"name": "AccessMode",
														"nameLocations": [
															"2339:10:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 288,
														"src": "2339:10:4"
													},
													"referencedDeclaration": 288,
													"src": "2339:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_AccessMode_$288",
														"typeString": "enum IAllowList.AccessMode"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2321:41:4"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2371:0:4"
									},
									"scope": 386,
									"src": "2299:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "507d1bed",
									"id": 365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBatchPermissionToCall",
									"nameLocation": "2389:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "_callers",
												"nameLocation": "2443:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2424:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 351,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2424:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 352,
													"nodeType": "ArrayTypeName",
													"src": "2424:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "_targets",
												"nameLocation": "2481:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2462:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 354,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2462:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 355,
													"nodeType": "ArrayTypeName",
													"src": "2462:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "_functionSigs",
												"nameLocation": "2518:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2500:31:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_calldata_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 357,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "2500:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 358,
													"nodeType": "ArrayTypeName",
													"src": "2500:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "_enables",
												"nameLocation": "2558:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2542:24:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 360,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "2542:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 361,
													"nodeType": "ArrayTypeName",
													"src": "2542:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2413:160:4"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2582:0:4"
									},
									"scope": 386,
									"src": "2380:203:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "73df5d8d",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPermissionToCall",
									"nameLocation": "2600:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "_caller",
												"nameLocation": "2638:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2630:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "_target",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "_functionSig",
												"nameLocation": "2689:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2682:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 370,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2682:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "_enable",
												"nameLocation": "2717:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2619:112:4"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2740:0:4"
									},
									"scope": 386,
									"src": "2591:150:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dff05449",
									"id": 385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setDepositLimit",
									"nameLocation": "2948:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "_l1Token",
												"nameLocation": "2982:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2974:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2974:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "_depositLimitation",
												"nameLocation": "3006:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3001:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "_depositCap",
												"nameLocation": "3043:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3035:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3035:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2963:98:4"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3070:0:4"
									},
									"scope": 386,
									"src": "2939:132:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 387,
							"src": "63:3011:4",
							"usedErrors": [],
							"usedEvents": [
								272,
								283
							]
						}
					],
					"src": "35:3041:4"
				},
				"id": 4
			},
			"contracts/bridges/bridge/zksync/Storage.sol": {
				"ast": {
					"absolutePath": "contracts/bridges/bridge/zksync/Storage.sol",
					"exportedSymbols": {
						"AppStorage": [
							543
						],
						"IAllowList": [
							386
						],
						"IVerifier": [
							628
						],
						"L2Log": [
							425
						],
						"L2Message": [
							433
						],
						"PriorityOperation": [
							638
						],
						"PriorityQueue": [
							818
						],
						"UpgradeState": [
							396
						],
						"UpgradeStorage": [
							411
						],
						"VerifierParams": [
							441
						]
					},
					"id": 544,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 388,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:5"
						},
						{
							"absolutePath": "contracts/bridges/bridge/zksync/interfaces/IVerifier.sol",
							"file": "./../zksync/interfaces/IVerifier.sol",
							"id": 389,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 544,
							"sourceUnit": 629,
							"src": "63:46:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/bridges/bridge/common/interfaces/IAllowList.sol",
							"file": "../common/interfaces/IAllowList.sol",
							"id": 390,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 544,
							"sourceUnit": 387,
							"src": "111:45:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/bridges/bridge/zksync/libraries/PriorityQueue.sol",
							"file": "./libraries/PriorityQueue.sol",
							"id": 391,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 544,
							"sourceUnit": 819,
							"src": "158:39:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "UpgradeState",
							"documentation": {
								"id": 392,
								"nodeType": "StructuredDocumentation",
								"src": "201:284:5",
								"text": "@notice Indicates whether an upgrade is initiated and if yes what type\n @param None Upgrade is NOT initiated\n @param Transparent Fully transparent upgrade is initiated, upgrade data is publicly known\n @param Shadow Shadow upgrade is initiated, upgrade data is hidden"
							},
							"id": 396,
							"members": [
								{
									"id": 393,
									"name": "None",
									"nameLocation": "510:4:5",
									"nodeType": "EnumValue",
									"src": "510:4:5"
								},
								{
									"id": 394,
									"name": "Transparent",
									"nameLocation": "521:11:5",
									"nodeType": "EnumValue",
									"src": "521:11:5"
								},
								{
									"id": 395,
									"name": "Shadow",
									"nameLocation": "539:6:5",
									"nodeType": "EnumValue",
									"src": "539:6:5"
								}
							],
							"name": "UpgradeState",
							"nameLocation": "490:12:5",
							"nodeType": "EnumDefinition",
							"src": "485:63:5"
						},
						{
							"canonicalName": "UpgradeStorage",
							"documentation": {
								"id": 397,
								"nodeType": "StructuredDocumentation",
								"src": "552:793:5",
								"text": "@dev Logically separated part of the storage structure, which is responsible for everything related to proxy\n upgrades and diamond cuts\n @param proposedUpgradeHash The hash of the current upgrade proposal, zero if there is no active proposal\n @param state Indicates whether an upgrade is initiated and if yes what type\n @param securityCouncil Address which has the permission to approve instant upgrades (expected to be a Gnosis\n multisig)\n @param approvedBySecurityCouncil Indicates whether the security council has approved the upgrade\n @param proposedUpgradeTimestamp The timestamp when the upgrade was proposed, zero if there are no active proposals\n @param currentProposalId The serial number of proposed upgrades, increments when proposing a new one"
							},
							"id": 411,
							"members": [
								{
									"constant": false,
									"id": 399,
									"mutability": "mutable",
									"name": "proposedUpgradeHash",
									"nameLocation": "1382:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 411,
									"src": "1374:27:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 398,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1374:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 402,
									"mutability": "mutable",
									"name": "state",
									"nameLocation": "1421:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 411,
									"src": "1408:18:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_UpgradeState_$396",
										"typeString": "enum UpgradeState"
									},
									"typeName": {
										"id": 401,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 400,
											"name": "UpgradeState",
											"nameLocations": [
												"1408:12:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 396,
											"src": "1408:12:5"
										},
										"referencedDeclaration": 396,
										"src": "1408:12:5",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_UpgradeState_$396",
											"typeString": "enum UpgradeState"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 404,
									"mutability": "mutable",
									"name": "securityCouncil",
									"nameLocation": "1441:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 411,
									"src": "1433:23:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 403,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1433:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 406,
									"mutability": "mutable",
									"name": "approvedBySecurityCouncil",
									"nameLocation": "1468:25:5",
									"nodeType": "VariableDeclaration",
									"scope": 411,
									"src": "1463:30:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 405,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1463:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 408,
									"mutability": "mutable",
									"name": "proposedUpgradeTimestamp",
									"nameLocation": "1507:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 411,
									"src": "1500:31:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint40",
										"typeString": "uint40"
									},
									"typeName": {
										"id": 407,
										"name": "uint40",
										"nodeType": "ElementaryTypeName",
										"src": "1500:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint40",
											"typeString": "uint40"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 410,
									"mutability": "mutable",
									"name": "currentProposalId",
									"nameLocation": "1545:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 411,
									"src": "1538:24:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint40",
										"typeString": "uint40"
									},
									"typeName": {
										"id": 409,
										"name": "uint40",
										"nodeType": "ElementaryTypeName",
										"src": "1538:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint40",
											"typeString": "uint40"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "UpgradeStorage",
							"nameLocation": "1352:14:5",
							"nodeType": "StructDefinition",
							"scope": 544,
							"src": "1345:221:5",
							"visibility": "public"
						},
						{
							"canonicalName": "L2Log",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "1570:641:5",
								"text": "@dev The log passed from L2\n @param l2ShardId The shard identifier, 0 - rollup, 1 - porter. All other values are not used but are reserved for\n the future\n @param isService A boolean flag that is part of the log along with `key`, `value`, and `sender` address.\n This field is required formally but does not have any special meaning.\n @param txNumberInBatch The L2 transaction number in the batch, in which the log was sent\n @param sender The L2 address which sent the log\n @param key The 32 bytes of information that was sent in the log\n @param value The 32 bytes of information that was sent in the log"
							},
							"id": 425,
							"members": [
								{
									"constant": false,
									"id": 414,
									"mutability": "mutable",
									"name": "l2ShardId",
									"nameLocation": "2314:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 425,
									"src": "2308:15:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 413,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2308:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 416,
									"mutability": "mutable",
									"name": "isService",
									"nameLocation": "2335:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 425,
									"src": "2330:14:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 415,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2330:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 418,
									"mutability": "mutable",
									"name": "txNumberInBatch",
									"nameLocation": "2358:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 425,
									"src": "2351:22:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 417,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2351:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 420,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "2388:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 425,
									"src": "2380:14:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 419,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2380:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 422,
									"mutability": "mutable",
									"name": "key",
									"nameLocation": "2409:3:5",
									"nodeType": "VariableDeclaration",
									"scope": 425,
									"src": "2401:11:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 421,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2401:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 424,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "2427:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 425,
									"src": "2419:13:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 423,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2419:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "L2Log",
							"nameLocation": "2295:5:5",
							"nodeType": "StructDefinition",
							"scope": 544,
							"src": "2288:148:5",
							"visibility": "public"
						},
						{
							"canonicalName": "L2Message",
							"documentation": {
								"id": 426,
								"nodeType": "StructuredDocumentation",
								"src": "2440:362:5",
								"text": "@dev An arbitrary length message passed from L2\n @notice Under the hood it is `L2Log` sent from the special system L2 contract\n @param txNumberInBatch The L2 transaction number in the batch, in which the message was sent\n @param sender The address of the L2 account from which the message was passed\n @param data An arbitrary length message"
							},
							"id": 433,
							"members": [
								{
									"constant": false,
									"id": 428,
									"mutability": "mutable",
									"name": "txNumberInBatch",
									"nameLocation": "2833:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 433,
									"src": "2826:22:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 427,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2826:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 430,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "2863:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 433,
									"src": "2855:14:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 429,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2855:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 432,
									"mutability": "mutable",
									"name": "data",
									"nameLocation": "2882:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 433,
									"src": "2876:10:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 431,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "2876:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "L2Message",
							"nameLocation": "2809:9:5",
							"nodeType": "StructDefinition",
							"scope": 544,
							"src": "2802:88:5",
							"visibility": "public"
						},
						{
							"canonicalName": "VerifierParams",
							"documentation": {
								"id": 434,
								"nodeType": "StructuredDocumentation",
								"src": "2894:66:5",
								"text": "@notice Part of the configuration parameters of ZKP circuits"
							},
							"id": 441,
							"members": [
								{
									"constant": false,
									"id": 436,
									"mutability": "mutable",
									"name": "recursionNodeLevelVkHash",
									"nameLocation": "2997:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 441,
									"src": "2989:32:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 435,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2989:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 438,
									"mutability": "mutable",
									"name": "recursionLeafLevelVkHash",
									"nameLocation": "3036:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 441,
									"src": "3028:32:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 437,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3028:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 440,
									"mutability": "mutable",
									"name": "recursionCircuitsSetVksHash",
									"nameLocation": "3075:27:5",
									"nodeType": "VariableDeclaration",
									"scope": 441,
									"src": "3067:35:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 439,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3067:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "VerifierParams",
							"nameLocation": "2967:14:5",
							"nodeType": "StructDefinition",
							"scope": 544,
							"src": "2960:146:5",
							"visibility": "public"
						},
						{
							"canonicalName": "AppStorage",
							"documentation": {
								"id": 442,
								"nodeType": "StructuredDocumentation",
								"src": "3110:390:5",
								"text": "@dev storing all storage variables for zkSync facets\n NOTE: It is used in a proxy, so it is possible to add new variables to the end\n but NOT to modify already existing variables or change their order.\n NOTE: variables prefixed with '__DEPRECATED_' are deprecated and shouldn't be used.\n Their presence is maintained for compatibility and to prevent storage collision."
							},
							"id": 543,
							"members": [
								{
									"constant": false,
									"id": 447,
									"mutability": "mutable",
									"name": "__DEPRECATED_diamondCutStorage",
									"nameLocation": "3611:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "3600:41:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
										"typeString": "uint256[7]"
									},
									"typeName": {
										"baseType": {
											"id": 444,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3600:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 446,
										"length": {
											"hexValue": "37",
											"id": 445,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3608:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_7_by_1",
												"typeString": "int_const 7"
											},
											"value": "7"
										},
										"nodeType": "ArrayTypeName",
										"src": "3600:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$7_storage_ptr",
											"typeString": "uint256[7]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 450,
									"mutability": "mutable",
									"name": "governor",
									"nameLocation": "3773:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "3765:16:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 449,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3765:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 453,
									"mutability": "mutable",
									"name": "pendingGovernor",
									"nameLocation": "3876:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "3868:23:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 452,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3868:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 458,
									"mutability": "mutable",
									"name": "validators",
									"nameLocation": "3969:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "3944:35:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 457,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 455,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3952:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3944:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 456,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "3963:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 462,
									"mutability": "mutable",
									"name": "verifier",
									"nameLocation": "4073:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "4063:18:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IVerifier_$628",
										"typeString": "contract IVerifier"
									},
									"typeName": {
										"id": 461,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 460,
											"name": "IVerifier",
											"nameLocations": [
												"4063:9:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 628,
											"src": "4063:9:5"
										},
										"referencedDeclaration": 628,
										"src": "4063:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IVerifier_$628",
											"typeString": "contract IVerifier"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 465,
									"mutability": "mutable",
									"name": "totalBatchesExecuted",
									"nameLocation": "4247:20:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "4239:28:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 464,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4239:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 468,
									"mutability": "mutable",
									"name": "totalBatchesVerified",
									"nameLocation": "4397:20:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "4389:28:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 467,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4389:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 471,
									"mutability": "mutable",
									"name": "totalBatchesCommitted",
									"nameLocation": "4565:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "4557:29:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 470,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4557:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 476,
									"mutability": "mutable",
									"name": "storedBatchHashes",
									"nameLocation": "4678:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "4650:45:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
										"typeString": "mapping(uint256 => bytes32)"
									},
									"typeName": {
										"id": 475,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 473,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4658:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4650:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
											"typeString": "mapping(uint256 => bytes32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 474,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "4669:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 481,
									"mutability": "mutable",
									"name": "l2LogsRootHashes",
									"nameLocation": "4780:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "4752:44:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
										"typeString": "mapping(uint256 => bytes32)"
									},
									"typeName": {
										"id": 480,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 478,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4760:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4752:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
											"typeString": "mapping(uint256 => bytes32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 479,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "4771:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 485,
									"mutability": "mutable",
									"name": "priorityQueue",
									"nameLocation": "4890:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "4870:33:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
										"typeString": "struct PriorityQueue.Queue"
									},
									"typeName": {
										"id": 484,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 483,
											"name": "PriorityQueue.Queue",
											"nameLocations": [
												"4870:13:5",
												"4884:5:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 654,
											"src": "4870:19:5"
										},
										"referencedDeclaration": 654,
										"src": "4870:19:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
											"typeString": "struct PriorityQueue.Queue"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 489,
									"mutability": "mutable",
									"name": "allowList",
									"nameLocation": "5019:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "5008:20:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAllowList_$386",
										"typeString": "contract IAllowList"
									},
									"typeName": {
										"id": 488,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 487,
											"name": "IAllowList",
											"nameLocations": [
												"5008:10:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 386,
											"src": "5008:10:5"
										},
										"referencedDeclaration": 386,
										"src": "5008:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAllowList_$386",
											"typeString": "contract IAllowList"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 493,
									"mutability": "mutable",
									"name": "verifierParams",
									"nameLocation": "5170:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "5155:29:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_VerifierParams_$441_storage_ptr",
										"typeString": "struct VerifierParams"
									},
									"typeName": {
										"id": 492,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 491,
											"name": "VerifierParams",
											"nameLocations": [
												"5155:14:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 441,
											"src": "5155:14:5"
										},
										"referencedDeclaration": 441,
										"src": "5155:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_VerifierParams_$441_storage_ptr",
											"typeString": "struct VerifierParams"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 496,
									"mutability": "mutable",
									"name": "l2BootloaderBytecodeHash",
									"nameLocation": "5300:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "5292:32:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 495,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5292:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 499,
									"mutability": "mutable",
									"name": "l2DefaultAccountBytecodeHash",
									"nameLocation": "5456:28:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "5448:36:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 498,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5448:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 502,
									"mutability": "mutable",
									"name": "zkPorterIsAvailable",
									"nameLocation": "5618:19:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "5613:24:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 501,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "5613:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 505,
									"mutability": "mutable",
									"name": "priorityTxMaxGasLimit",
									"nameLocation": "5907:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "5899:29:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 504,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5899:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 509,
									"mutability": "mutable",
									"name": "__DEPRECATED_upgrades",
									"nameLocation": "6010:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "5995:36:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UpgradeStorage_$411_storage_ptr",
										"typeString": "struct UpgradeStorage"
									},
									"typeName": {
										"id": 508,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 507,
											"name": "UpgradeStorage",
											"nameLocations": [
												"5995:14:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 411,
											"src": "5995:14:5"
										},
										"referencedDeclaration": 411,
										"src": "5995:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UpgradeStorage_$411_storage_ptr",
											"typeString": "struct UpgradeStorage"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 516,
									"mutability": "mutable",
									"name": "isEthWithdrawalFinalized",
									"nameLocation": "6382:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "6337:69:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 515,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 511,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6345:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "6337:44:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 514,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 512,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6364:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "6356:24:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 513,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6375:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 519,
									"mutability": "mutable",
									"name": "__DEPRECATED_lastWithdrawalLimitReset",
									"nameLocation": "6484:37:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "6476:45:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 518,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6476:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 522,
									"mutability": "mutable",
									"name": "__DEPRECATED_withdrawnAmountInWindow",
									"nameLocation": "6618:36:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "6610:44:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 521,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6610:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 527,
									"mutability": "mutable",
									"name": "totalDepositedAmountPerUser",
									"nameLocation": "6768:27:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "6740:55:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 526,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 524,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "6748:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "6740:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 525,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6759:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 530,
									"mutability": "mutable",
									"name": "protocolVersion",
									"nameLocation": "6980:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "6972:23:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 529,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6972:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 533,
									"mutability": "mutable",
									"name": "l2SystemContractsUpgradeTxHash",
									"nameLocation": "7125:30:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "7117:38:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 532,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "7117:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 536,
									"mutability": "mutable",
									"name": "l2SystemContractsUpgradeBatchNumber",
									"nameLocation": "7302:35:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "7294:43:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 535,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7294:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 539,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "7474:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "7466:13:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 538,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7466:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 542,
									"mutability": "mutable",
									"name": "pendingAdmin",
									"nameLocation": "7591:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 543,
									"src": "7583:20:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 541,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7583:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "AppStorage",
							"nameLocation": "3507:10:5",
							"nodeType": "StructDefinition",
							"scope": 544,
							"src": "3500:4107:5",
							"visibility": "public"
						}
					],
					"src": "35:7574:5"
				},
				"id": 5
			},
			"contracts/bridges/bridge/zksync/facets/Base.sol": {
				"ast": {
					"absolutePath": "contracts/bridges/bridge/zksync/facets/Base.sol",
					"exportedSymbols": {
						"AllowListed": [
							205
						],
						"AppStorage": [
							543
						],
						"Base": [
							606
						],
						"Context": [
							177
						],
						"IAllowList": [
							386
						],
						"IVerifier": [
							628
						],
						"L2Log": [
							425
						],
						"L2Message": [
							433
						],
						"Ownable": [
							147
						],
						"PriorityOperation": [
							638
						],
						"PriorityQueue": [
							818
						],
						"ReentrancyGuard": [
							259
						],
						"UpgradeState": [
							396
						],
						"UpgradeStorage": [
							411
						],
						"VerifierParams": [
							441
						]
					},
					"id": 607,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 545,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:6"
						},
						{
							"absolutePath": "contracts/bridges/bridge/zksync/Storage.sol",
							"file": "../Storage.sol",
							"id": 546,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 607,
							"sourceUnit": 544,
							"src": "63:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/bridges/bridge/common/ReentrancyGuard.sol",
							"file": "../../common/ReentrancyGuard.sol",
							"id": 547,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 607,
							"sourceUnit": 260,
							"src": "89:42:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/bridges/bridge/common/AllowListed.sol",
							"file": "../../common/AllowListed.sol",
							"id": 548,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 607,
							"sourceUnit": 206,
							"src": "133:38:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 549,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 607,
							"sourceUnit": 148,
							"src": "175:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 551,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"406:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 259,
										"src": "406:15:6"
									},
									"id": 552,
									"nodeType": "InheritanceSpecifier",
									"src": "406:15:6"
								},
								{
									"baseName": {
										"id": 553,
										"name": "AllowListed",
										"nameLocations": [
											"423:11:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 205,
										"src": "423:11:6"
									},
									"id": 554,
									"nodeType": "InheritanceSpecifier",
									"src": "423:11:6"
								}
							],
							"canonicalName": "Base",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 550,
								"nodeType": "StructuredDocumentation",
								"src": "231:158:6",
								"text": "@title Base contract containing functions accessible to the other facets.\n @author Matter Labs\n @custom:security-contact security@matterlabs.dev"
							},
							"fullyImplemented": true,
							"id": 606,
							"linearizedBaseContracts": [
								606,
								205,
								259
							],
							"name": "Base",
							"nameLocation": "398:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 557,
									"mutability": "mutable",
									"name": "s",
									"nameLocation": "462:1:6",
									"nodeType": "VariableDeclaration",
									"scope": 606,
									"src": "442:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AppStorage_$543_storage",
										"typeString": "struct AppStorage"
									},
									"typeName": {
										"id": 556,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 555,
											"name": "AppStorage",
											"nameLocations": [
												"442:10:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 543,
											"src": "442:10:6"
										},
										"referencedDeclaration": 543,
										"src": "442:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AppStorage_$543_storage_ptr",
											"typeString": "struct AppStorage"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "566:90:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 561,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "585:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "589:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "585:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 563,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "599:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AppStorage_$543_storage",
																		"typeString": "struct AppStorage storage ref"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "601:8:6",
																"memberName": "governor",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 450,
																"src": "599:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "585:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "3167",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "611:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cfdf140dd81e5a2c43b69b87a1882a002bc88bc84b708db49b4643f154f48bdc",
																"typeString": "literal_string \"1g\""
															},
															"value": "1g"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cfdf140dd81e5a2c43b69b87a1882a002bc88bc84b708db49b4643f154f48bdc",
																"typeString": "literal_string \"1g\""
															}
														],
														"id": 560,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "577:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "577:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "577:39:6"
											},
											{
												"id": 569,
												"nodeType": "PlaceholderStatement",
												"src": "647:1:6"
											}
										]
									},
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "472:64:6",
										"text": "@notice Checks that the message sender is an active governor"
									},
									"id": 571,
									"name": "onlyGovernor",
									"nameLocation": "551:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "563:2:6"
									},
									"src": "542:114:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "774:118:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 575,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "793:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "797:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "793:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 577,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "807:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AppStorage_$543_storage",
																			"typeString": "struct AppStorage storage ref"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "809:8:6",
																	"memberName": "governor",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 450,
																	"src": "807:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "793:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 580,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "821:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "825:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "821:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 582,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "835:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AppStorage_$543_storage",
																			"typeString": "struct AppStorage storage ref"
																		}
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "837:5:6",
																	"memberName": "admin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 539,
																	"src": "835:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "821:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "793:49:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920627920676f7665726e6f72206f722061646d696e",
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "844:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd0a8805c307d2abafb21ac1a920970fb907b4096fc84dae4053da603430138c",
																"typeString": "literal_string \"Only by governor or admin\""
															},
															"value": "Only by governor or admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd0a8805c307d2abafb21ac1a920970fb907b4096fc84dae4053da603430138c",
																"typeString": "literal_string \"Only by governor or admin\""
															}
														],
														"id": 574,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "785:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "785:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "785:87:6"
											},
											{
												"id": 589,
												"nodeType": "PlaceholderStatement",
												"src": "883:1:6"
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "664:73:6",
										"text": "@notice Checks that the message sender is an active governor or admin"
									},
									"id": 591,
									"name": "onlyGovernorOrAdmin",
									"nameLocation": "752:19:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:6"
									},
									"src": "743:149:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "972:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"expression": {
																	"id": 595,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "991:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AppStorage_$543_storage",
																		"typeString": "struct AppStorage storage ref"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "993:10:6",
																"memberName": "validators",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 458,
																"src": "991:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 599,
															"indexExpression": {
																"expression": {
																	"id": 597,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1004:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1008:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1004:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "991:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "3168",
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1125479f824fc31d0ce674b130e57a9dcfdf2d344ca1ef3fc8bf5bd50f9fcca9",
																"typeString": "literal_string \"1h\""
															},
															"value": "1h"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1125479f824fc31d0ce674b130e57a9dcfdf2d344ca1ef3fc8bf5bd50f9fcca9",
																"typeString": "literal_string \"1h\""
															}
														],
														"id": 594,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "983:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "983:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "983:39:6"
											},
											{
												"id": 603,
												"nodeType": "PlaceholderStatement",
												"src": "1060:1:6"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "900:41:6",
										"text": "@notice Checks if validator is active"
									},
									"id": 605,
									"name": "onlyValidator",
									"nameLocation": "956:13:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:6"
									},
									"src": "947:122:6",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 607,
							"src": "389:683:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:1039:6"
				},
				"id": 6
			},
			"contracts/bridges/bridge/zksync/interfaces/IVerifier.sol": {
				"ast": {
					"absolutePath": "contracts/bridges/bridge/zksync/interfaces/IVerifier.sol",
					"exportedSymbols": {
						"IVerifier": [
							628
						]
					},
					"id": 629,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 608,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVerifier",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 628,
							"linearizedBaseContracts": [
								628
							],
							"name": "IVerifier",
							"nameLocation": "73:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "87d9d023",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verify",
									"nameLocation": "99:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "_publicInputs",
												"nameLocation": "135:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "116:32:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 609,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "116:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 610,
													"nodeType": "ArrayTypeName",
													"src": "116:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "_proof",
												"nameLocation": "178:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "159:25:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 612,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "159:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 613,
													"nodeType": "ArrayTypeName",
													"src": "159:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "_recursiveAggregationInput",
												"nameLocation": "214:26:7",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "195:45:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 615,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "195:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 616,
													"nodeType": "ArrayTypeName",
													"src": "195:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "105:142:7"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "271:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 619,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "271:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "270:6:7"
									},
									"scope": 628,
									"src": "90:187:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9e8945d2",
									"id": 627,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "verificationKeyHash",
									"nameLocation": "294:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:7"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "339:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 624,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:9:7"
									},
									"scope": 628,
									"src": "285:63:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 629,
							"src": "63:288:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:318:7"
				},
				"id": 7
			},
			"contracts/bridges/bridge/zksync/libraries/PriorityQueue.sol": {
				"ast": {
					"absolutePath": "contracts/bridges/bridge/zksync/libraries/PriorityQueue.sol",
					"exportedSymbols": {
						"PriorityOperation": [
							638
						],
						"PriorityQueue": [
							818
						]
					},
					"id": 819,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 630,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:8"
						},
						{
							"canonicalName": "PriorityOperation",
							"documentation": {
								"id": 631,
								"nodeType": "StructuredDocumentation",
								"src": "63:487:8",
								"text": "@notice The structure that contains meta information of the L2 transaction that was requested from L1\n @dev The weird size of fields was selected specifically to minimize the structure storage size\n @param canonicalTxHash Hashed L2 transaction data that is needed to process it\n @param expirationTimestamp Expiration timestamp for this request (must be satisfied before)\n @param layer2Tip Additional payment to the validator as an incentive to perform the operation"
							},
							"id": 638,
							"members": [
								{
									"constant": false,
									"id": 633,
									"mutability": "mutable",
									"name": "canonicalTxHash",
									"nameLocation": "590:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 638,
									"src": "582:23:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 632,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "582:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 635,
									"mutability": "mutable",
									"name": "expirationTimestamp",
									"nameLocation": "619:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 638,
									"src": "612:26:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 634,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "612:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 637,
									"mutability": "mutable",
									"name": "layer2Tip",
									"nameLocation": "653:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 638,
									"src": "645:17:8",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint192",
										"typeString": "uint192"
									},
									"typeName": {
										"id": 636,
										"name": "uint192",
										"nodeType": "ElementaryTypeName",
										"src": "645:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint192",
											"typeString": "uint192"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "PriorityOperation",
							"nameLocation": "557:17:8",
							"nodeType": "StructDefinition",
							"scope": 819,
							"src": "550:116:8",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriorityQueue",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 639,
								"nodeType": "StructuredDocumentation",
								"src": "670:245:8",
								"text": "@author Matter Labs\n @custom:security-contact security@matterlabs.dev\n @dev The library provides the API to interact with the priority queue container\n @dev Order of processing operations from queue - FIFO (Fist in - first out)"
							},
							"fullyImplemented": true,
							"id": 818,
							"linearizedBaseContracts": [
								818
							],
							"name": "PriorityQueue",
							"nameLocation": "923:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 643,
									"libraryName": {
										"id": 640,
										"name": "PriorityQueue",
										"nameLocations": [
											"950:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 818,
										"src": "950:13:8"
									},
									"nodeType": "UsingForDirective",
									"src": "944:30:8",
									"typeName": {
										"id": 642,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 641,
											"name": "Queue",
											"nameLocations": [
												"968:5:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 654,
											"src": "968:5:8"
										},
										"referencedDeclaration": 654,
										"src": "968:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
											"typeString": "struct PriorityQueue.Queue"
										}
									}
								},
								{
									"canonicalName": "PriorityQueue.Queue",
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "982:303:8",
										"text": "@notice Container that stores priority operations\n @param data The inner mapping that saves priority operation by its index\n @param head The pointer to the first unprocessed priority operation, equal to the tail if the queue is empty\n @param tail The pointer to the free slot"
									},
									"id": 654,
									"members": [
										{
											"constant": false,
											"id": 649,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "1353:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 654,
											"src": "1315:42:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriorityOperation_$638_storage_$",
												"typeString": "mapping(uint256 => struct PriorityOperation)"
											},
											"typeName": {
												"id": 648,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "1315:37:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriorityOperation_$638_storage_$",
													"typeString": "mapping(uint256 => struct PriorityOperation)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 647,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 646,
														"name": "PriorityOperation",
														"nameLocations": [
															"1334:17:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 638,
														"src": "1334:17:8"
													},
													"referencedDeclaration": 638,
													"src": "1334:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriorityOperation_$638_storage_ptr",
														"typeString": "struct PriorityOperation"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 651,
											"mutability": "mutable",
											"name": "tail",
											"nameLocation": "1376:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 654,
											"src": "1368:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 650,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1368:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 653,
											"mutability": "mutable",
											"name": "head",
											"nameLocation": "1399:4:8",
											"nodeType": "VariableDeclaration",
											"scope": 654,
											"src": "1391:12:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 652,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1391:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Queue",
									"nameLocation": "1298:5:8",
									"nodeType": "StructDefinition",
									"scope": 818,
									"src": "1291:120:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "1683:37:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 663,
														"name": "_queue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "1701:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
															"typeString": "struct PriorityQueue.Queue storage pointer"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1708:4:8",
													"memberName": "head",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 653,
													"src": "1701:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 662,
												"id": 665,
												"nodeType": "Return",
												"src": "1694:18:8"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "1419:165:8",
										"text": "@notice Returns zero if and only if no operations were processed from the queue\n @return Index of the oldest priority operation that wasn't processed yet"
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFirstUnprocessedPriorityTx",
									"nameLocation": "1599:29:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "_queue",
												"nameLocation": "1643:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1629:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
													"typeString": "struct PriorityQueue.Queue"
												},
												"typeName": {
													"id": 657,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 656,
														"name": "Queue",
														"nameLocations": [
															"1629:5:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 654,
														"src": "1629:5:8"
													},
													"referencedDeclaration": 654,
													"src": "1629:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
														"typeString": "struct PriorityQueue.Queue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1628:22:8"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1674:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:9:8"
									},
									"scope": 818,
									"src": "1590:130:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "1936:37:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 676,
														"name": "_queue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "1954:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
															"typeString": "struct PriorityQueue.Queue storage pointer"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1961:4:8",
													"memberName": "tail",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 651,
													"src": "1954:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 675,
												"id": 678,
												"nodeType": "Return",
												"src": "1947:18:8"
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "1728:119:8",
										"text": "@return The total number of priority operations that were added to the priority queue, including all processed ones"
									},
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalPriorityTxs",
									"nameLocation": "1862:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "_queue",
												"nameLocation": "1896:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1882:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
													"typeString": "struct PriorityQueue.Queue"
												},
												"typeName": {
													"id": 670,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 669,
														"name": "Queue",
														"nameLocations": [
															"1882:5:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 654,
														"src": "1882:5:8"
													},
													"referencedDeclaration": 654,
													"src": "1882:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
														"typeString": "struct PriorityQueue.Queue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1881:22:8"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "1927:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1927:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1926:9:8"
									},
									"scope": 818,
									"src": "1853:120:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 698,
										"nodeType": "Block",
										"src": "2141:60:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 691,
																	"name": "_queue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "2167:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
																		"typeString": "struct PriorityQueue.Queue storage pointer"
																	}
																},
																"id": 692,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2174:4:8",
																"memberName": "tail",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 651,
																"src": "2167:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 693,
																	"name": "_queue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "2181:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
																		"typeString": "struct PriorityQueue.Queue storage pointer"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2188:4:8",
																"memberName": "head",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 653,
																"src": "2181:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2167:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2159:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 689,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2159:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2159:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 688,
												"id": 697,
												"nodeType": "Return",
												"src": "2152:41:8"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1981:83:8",
										"text": "@return The total number of unprocessed priority operations in a priority queue"
									},
									"id": 699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSize",
									"nameLocation": "2079:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "_queue",
												"nameLocation": "2101:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "2087:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
													"typeString": "struct PriorityQueue.Queue"
												},
												"typeName": {
													"id": 683,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 682,
														"name": "Queue",
														"nameLocations": [
															"2087:5:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 654,
														"src": "2087:5:8"
													},
													"referencedDeclaration": 654,
													"src": "2087:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
														"typeString": "struct PriorityQueue.Queue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2086:22:8"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "2132:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2132:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2131:9:8"
									},
									"scope": 818,
									"src": "2070:131:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "2344:52:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 708,
															"name": "_queue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "2362:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
																"typeString": "struct PriorityQueue.Queue storage pointer"
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2369:4:8",
														"memberName": "tail",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "2362:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 710,
															"name": "_queue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "2377:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
																"typeString": "struct PriorityQueue.Queue storage pointer"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2384:4:8",
														"memberName": "head",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 653,
														"src": "2377:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2362:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 707,
												"id": 713,
												"nodeType": "Return",
												"src": "2355:33:8"
											}
										]
									},
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "2209:61:8",
										"text": "@return Whether the priority queue contains no operations"
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isEmpty",
									"nameLocation": "2285:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "_queue",
												"nameLocation": "2307:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "2293:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
													"typeString": "struct PriorityQueue.Queue"
												},
												"typeName": {
													"id": 702,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 701,
														"name": "Queue",
														"nameLocations": [
															"2293:5:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 654,
														"src": "2293:5:8"
													},
													"referencedDeclaration": 654,
													"src": "2293:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
														"typeString": "struct PriorityQueue.Queue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2292:22:8"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "2338:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 705,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2338:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2337:6:8"
									},
									"scope": 818,
									"src": "2276:120:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "2567:200:8",
										"statements": [
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "tail",
														"nameLocation": "2665:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "2657:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 725,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2657:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 729,
												"initialValue": {
													"expression": {
														"id": 727,
														"name": "_queue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "2672:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
															"typeString": "struct PriorityQueue.Queue storage pointer"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2679:4:8",
													"memberName": "tail",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 651,
													"src": "2672:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2657:26:8"
											},
											{
												"expression": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 730,
																"name": "_queue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "2696:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
																	"typeString": "struct PriorityQueue.Queue storage pointer"
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2703:4:8",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 649,
															"src": "2696:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriorityOperation_$638_storage_$",
																"typeString": "mapping(uint256 => struct PriorityOperation storage ref)"
															}
														},
														"id": 734,
														"indexExpression": {
															"id": 732,
															"name": "tail",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "2708:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2696:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriorityOperation_$638_storage",
															"typeString": "struct PriorityOperation storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 735,
														"name": "_operation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "2716:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriorityOperation_$638_memory_ptr",
															"typeString": "struct PriorityOperation memory"
														}
													},
													"src": "2696:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriorityOperation_$638_storage",
														"typeString": "struct PriorityOperation storage ref"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "2696:30:8"
											},
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 738,
															"name": "_queue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "2737:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
																"typeString": "struct PriorityQueue.Queue storage pointer"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2744:4:8",
														"memberName": "tail",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "2737:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 741,
															"name": "tail",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "2751:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2758:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2751:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2737:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "2737:22:8"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "2404:71:8",
										"text": "@notice Add the priority operation to the end of the priority queue"
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pushBack",
									"nameLocation": "2490:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "_queue",
												"nameLocation": "2513:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "2499:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
													"typeString": "struct PriorityQueue.Queue"
												},
												"typeName": {
													"id": 718,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 717,
														"name": "Queue",
														"nameLocations": [
															"2499:5:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 654,
														"src": "2499:5:8"
													},
													"referencedDeclaration": 654,
													"src": "2499:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
														"typeString": "struct PriorityQueue.Queue"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "_operation",
												"nameLocation": "2546:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "2521:35:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PriorityOperation_$638_memory_ptr",
													"typeString": "struct PriorityOperation"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "PriorityOperation",
														"nameLocations": [
															"2521:17:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 638,
														"src": "2521:17:8"
													},
													"referencedDeclaration": 638,
													"src": "2521:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriorityOperation_$638_storage_ptr",
														"typeString": "struct PriorityOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2498:59:8"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2567:0:8"
									},
									"scope": 818,
									"src": "2481:286:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "2934:121:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2953:17:8",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 758,
																		"name": "_queue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 751,
																		"src": "2954:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
																			"typeString": "struct PriorityQueue.Queue storage pointer"
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2961:7:8",
																	"memberName": "isEmpty",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 715,
																	"src": "2954:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Queue_$654_storage_ptr_$returns$_t_bool_$attached_to$_t_struct$_Queue_$654_storage_ptr_$",
																		"typeString": "function (struct PriorityQueue.Queue storage pointer) view returns (bool)"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2954:16:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44",
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2972:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c3fd336b49dcb1c57dd4fbeaf5f898320b0da06a5ef64e798c6497600bb79f2",
																"typeString": "literal_string \"D\""
															},
															"value": "D"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c3fd336b49dcb1c57dd4fbeaf5f898320b0da06a5ef64e798c6497600bb79f2",
																"typeString": "literal_string \"D\""
															}
														],
														"id": 757,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2945:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2945:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "2945:31:8"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 765,
															"name": "_queue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "3023:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
																"typeString": "struct PriorityQueue.Queue storage pointer"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3030:4:8",
														"memberName": "data",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 649,
														"src": "3023:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriorityOperation_$638_storage_$",
															"typeString": "mapping(uint256 => struct PriorityOperation storage ref)"
														}
													},
													"id": 769,
													"indexExpression": {
														"expression": {
															"id": 767,
															"name": "_queue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "3035:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
																"typeString": "struct PriorityQueue.Queue storage pointer"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3042:4:8",
														"memberName": "head",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 653,
														"src": "3035:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3023:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriorityOperation_$638_storage",
														"typeString": "struct PriorityOperation storage ref"
													}
												},
												"functionReturnParameters": 756,
												"id": 770,
												"nodeType": "Return",
												"src": "3016:31:8"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "2775:67:8",
										"text": "@return The first unprocessed priority operation from the queue"
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "front",
									"nameLocation": "2857:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "_queue",
												"nameLocation": "2877:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2863:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
													"typeString": "struct PriorityQueue.Queue"
												},
												"typeName": {
													"id": 750,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 749,
														"name": "Queue",
														"nameLocations": [
															"2863:5:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 654,
														"src": "2863:5:8"
													},
													"referencedDeclaration": 654,
													"src": "2863:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
														"typeString": "struct PriorityQueue.Queue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2862:22:8"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2908:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PriorityOperation_$638_memory_ptr",
													"typeString": "struct PriorityOperation"
												},
												"typeName": {
													"id": 754,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 753,
														"name": "PriorityOperation",
														"nameLocations": [
															"2908:17:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 638,
														"src": "2908:17:8"
													},
													"referencedDeclaration": 638,
													"src": "2908:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriorityOperation_$638_storage_ptr",
														"typeString": "struct PriorityOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2907:26:8"
									},
									"scope": 818,
									"src": "2848:207:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "3320:313:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3339:17:8",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 783,
																		"name": "_queue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 776,
																		"src": "3340:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
																			"typeString": "struct PriorityQueue.Queue storage pointer"
																		}
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3347:7:8",
																	"memberName": "isEmpty",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 715,
																	"src": "3340:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Queue_$654_storage_ptr_$returns$_t_bool_$attached_to$_t_struct$_Queue_$654_storage_ptr_$",
																		"typeString": "function (struct PriorityQueue.Queue storage pointer) view returns (bool)"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3340:16:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3358:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60a73bfb121a98fb6b52dfb29eb0defd76b60065b8cf07902baf28c167d24daf",
																"typeString": "literal_string \"s\""
															},
															"value": "s"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60a73bfb121a98fb6b52dfb29eb0defd76b60065b8cf07902baf28c167d24daf",
																"typeString": "literal_string \"s\""
															}
														],
														"id": 782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3331:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3331:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "3331:31:8"
											},
											{
												"assignments": [
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "head",
														"nameLocation": "3489:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 816,
														"src": "3481:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 790,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3481:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 794,
												"initialValue": {
													"expression": {
														"id": 792,
														"name": "_queue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "3496:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
															"typeString": "struct PriorityQueue.Queue storage pointer"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3503:4:8",
													"memberName": "head",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 653,
													"src": "3496:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3481:26:8"
											},
											{
												"expression": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 795,
														"name": "priorityOperation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "3520:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriorityOperation_$638_memory_ptr",
															"typeString": "struct PriorityOperation memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"expression": {
																"id": 796,
																"name": "_queue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "3540:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
																	"typeString": "struct PriorityQueue.Queue storage pointer"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3547:4:8",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 649,
															"src": "3540:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriorityOperation_$638_storage_$",
																"typeString": "mapping(uint256 => struct PriorityOperation storage ref)"
															}
														},
														"id": 799,
														"indexExpression": {
															"id": 798,
															"name": "head",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3552:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3540:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriorityOperation_$638_storage",
															"typeString": "struct PriorityOperation storage ref"
														}
													},
													"src": "3520:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriorityOperation_$638_memory_ptr",
														"typeString": "struct PriorityOperation memory"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "3520:37:8"
											},
											{
												"expression": {
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3568:24:8",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 802,
																"name": "_queue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "3575:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
																	"typeString": "struct PriorityQueue.Queue storage pointer"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3582:4:8",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 649,
															"src": "3575:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriorityOperation_$638_storage_$",
																"typeString": "mapping(uint256 => struct PriorityOperation storage ref)"
															}
														},
														"id": 805,
														"indexExpression": {
															"id": 804,
															"name": "head",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3587:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3575:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriorityOperation_$638_storage",
															"typeString": "struct PriorityOperation storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "3568:24:8"
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 808,
															"name": "_queue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "3603:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
																"typeString": "struct PriorityQueue.Queue storage pointer"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3610:4:8",
														"memberName": "head",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 653,
														"src": "3603:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 811,
															"name": "head",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3617:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3624:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3617:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3603:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "3603:22:8"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "3063:149:8",
										"text": "@notice Remove the first unprocessed priority operation from the queue\n @return priorityOperation that was popped from the priority queue"
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "popFront",
									"nameLocation": "3227:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "_queue",
												"nameLocation": "3250:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "3236:20:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
													"typeString": "struct PriorityQueue.Queue"
												},
												"typeName": {
													"id": 775,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 774,
														"name": "Queue",
														"nameLocations": [
															"3236:5:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 654,
														"src": "3236:5:8"
													},
													"referencedDeclaration": 654,
													"src": "3236:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Queue_$654_storage_ptr",
														"typeString": "struct PriorityQueue.Queue"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:22:8"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "priorityOperation",
												"nameLocation": "3301:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "3276:42:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PriorityOperation_$638_memory_ptr",
													"typeString": "struct PriorityOperation"
												},
												"typeName": {
													"id": 779,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 778,
														"name": "PriorityOperation",
														"nameLocations": [
															"3276:17:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 638,
														"src": "3276:17:8"
													},
													"referencedDeclaration": 638,
													"src": "3276:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriorityOperation_$638_storage_ptr",
														"typeString": "struct PriorityOperation"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3275:44:8"
									},
									"scope": 818,
									"src": "3218:415:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 819,
							"src": "915:2721:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:3603:8"
				},
				"id": 8
			}
		}
	}
}