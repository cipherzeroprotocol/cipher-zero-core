{
	"id": "effb1955ee92387bde006eefc568be2a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/token/TokenTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\n/**\n * @title TokenTransfer\n * @dev A contract for handling token transfers within the Cipher Zero Protocol\n */\ncontract TokenTransfer is ReentrancyGuard, AccessControl {\n    using SafeERC20 for IERC20;\n    using Address for address payable;\n\n    bytes32 public constant TRANSFER_ADMIN_ROLE = keccak256(\"TRANSFER_ADMIN_ROLE\");\n\n    // Mapping of token address to whether it's supported\n    mapping(address => bool) public supportedTokens;\n\n    // Mapping of user address to token address to spender address to allowance\n    mapping(address => mapping(address => mapping(address => uint256))) private _allowances;\n\n    // Events\n    event TokenTransferred(address indexed from, address indexed to, address indexed token, uint256 amount);\n    event BatchTransferred(address indexed from, address[] to, address indexed token, uint256[] amounts);\n    event AllowanceSet(address indexed owner, address indexed spender, address indexed token, uint256 amount);\n    event TokenAdded(address indexed token);\n    event TokenRemoved(address indexed token);\n\n    // Custom errors\n    error UnsupportedToken(address token);\n    error InsufficientAllowance(address owner, address spender, address token, uint256 requested, uint256 available);\n    error TransferFailed();\n    error InvalidArrayLengths();\n\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(TRANSFER_ADMIN_ROLE, msg.sender);\n    }\n\n    /**\n     * @dev Transfers tokens from the sender to a recipient\n     * @param to Recipient address\n     * @param token Address of the ERC20 token\n     * @param amount Amount of tokens to transfer\n     */\n    function transferToken(address to, address token, uint256 amount) external nonReentrant {\n        _transferToken(msg.sender, to, token, amount);\n    }\n\n    /**\n     * @dev Transfers tokens from one address to another, respecting allowances\n     * @param from Sender address\n     * @param to Recipient address\n     * @param token Address of the ERC20 token\n     * @param amount Amount of tokens to transfer\n     */\n    function transferTokenFrom(address from, address to, address token, uint256 amount) external nonReentrant {\n        uint256 currentAllowance = _allowances[from][token][msg.sender];\n        if (currentAllowance < amount) {\n            revert InsufficientAllowance(from, msg.sender, token, amount, currentAllowance);\n        }\n        unchecked {\n            _allowances[from][token][msg.sender] = currentAllowance - amount;\n        }\n        _transferToken(from, to, token, amount);\n    }\n\n    /**\n     * @dev Performs batch token transfers\n     * @param to Array of recipient addresses\n     * @param token Address of the ERC20 token\n     * @param amounts Array of amounts to transfer\n     */\n    function batchTransferToken(address[] calldata to, address token, uint256[] calldata amounts) external nonReentrant {\n        if (to.length != amounts.length) revert InvalidArrayLengths();\n        \n        uint256 totalAmount = 0;\n        for (uint256 i = 0; i < amounts.length; i++) {\n            totalAmount += amounts[i];\n        }\n\n        IERC20(token).safeTransferFrom(msg.sender, address(this), totalAmount);\n\n        for (uint256 i = 0; i < to.length; i++) {\n            _transferToken(address(this), to[i], token, amounts[i]);\n        }\n\n        emit BatchTransferred(msg.sender, to, token, amounts);\n    }\n\n    /**\n     * @dev Sets allowance for a spender to transfer tokens on behalf of the owner\n     * @param spender Address allowed to spend tokens\n     * @param token Address of the ERC20 token\n     * @param amount Amount of tokens allowed to spend\n     */\n    function setAllowance(address spender, address token, uint256 amount) external {\n        _allowances[msg.sender][token][spender] = amount;\n        emit AllowanceSet(msg.sender, spender, token, amount);\n    }\n\n    /**\n     * @dev Returns the remaining allowance for a spender\n     * @param owner Address of the token owner\n     * @param spender Address of the spender\n     * @param token Address of the ERC20 token\n     * @return The remaining allowance\n     */\n    function allowance(address owner, address spender, address token) external view returns (uint256) {\n        return _allowances[owner][token][spender];\n    }\n\n    /**\n     * @dev Adds a supported token (only TRANSFER_ADMIN_ROLE)\n     * @param token Address of the token to add\n     */\n    function addSupportedToken(address token) external onlyRole(TRANSFER_ADMIN_ROLE) {\n        supportedTokens[token] = true;\n        emit TokenAdded(token);\n    }\n\n    /**\n     * @dev Removes a supported token (only TRANSFER_ADMIN_ROLE)\n     * @param token Address of the token to remove\n     */\n    function removeSupportedToken(address token) external onlyRole(TRANSFER_ADMIN_ROLE) {\n        supportedTokens[token] = false;\n        emit TokenRemoved(token);\n    }\n\n    /**\n     * @dev Internal function to handle token transfers\n     * @param from Sender address\n     * @param to Recipient address\n     * @param token Address of the ERC20 token\n     * @param amount Amount of tokens to transfer\n     */\n    function _transferToken(address from, address to, address token, uint256 amount) private {\n        if (!supportedTokens[token]) revert UnsupportedToken(token);\n\n        if (from == address(this)) {\n            IERC20(token).safeTransfer(to, amount);\n        } else {\n            IERC20(token).safeTransferFrom(from, to, amount);\n        }\n\n        emit TokenTransferred(from, to, token, amount);\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP DUP5 0xF 0xA7 0x25 SLT SGT GASPRICE 0xCB 0xE1 STATICCALL MSIZE 0xDF 0xC4 SWAP2 MSTORE8 TLOAD 0xD1 0xA9 MLOAD SWAP3 SIGNEXTEND GT NUMBER 0xD BASEFEE SWAP11 LOG1 PUSH18 0x2B6A7864736F6C634300081A003300000000 ",
							"sourceMap": "751:5018:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000840fa72512133acbe1fa59dfc491535cd1a951920b11430d489aa1712b6a7864736f6c634300081a0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/token/TokenTransfer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/token/TokenTransfer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1076,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/TokenTransfer.sol": {
				"TokenTransfer": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "requested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "available",
									"type": "uint256"
								}
							],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidArrayLengths",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "UnsupportedToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "AllowanceSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "to",
									"type": "address[]"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "BatchTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "TokenAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "TokenRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokenTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TRANSFER_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "addSupportedToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "to",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "batchTransferToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "removeSupportedToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setAllowance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "supportedTokens",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferTokenFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A contract for handling token transfers within the Cipher Zero Protocol",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"addSupportedToken(address)": {
								"details": "Adds a supported token (only TRANSFER_ADMIN_ROLE)",
								"params": {
									"token": "Address of the token to add"
								}
							},
							"allowance(address,address,address)": {
								"details": "Returns the remaining allowance for a spender",
								"params": {
									"owner": "Address of the token owner",
									"spender": "Address of the spender",
									"token": "Address of the ERC20 token"
								},
								"returns": {
									"_0": "The remaining allowance"
								}
							},
							"batchTransferToken(address[],address,uint256[])": {
								"details": "Performs batch token transfers",
								"params": {
									"amounts": "Array of amounts to transfer",
									"to": "Array of recipient addresses",
									"token": "Address of the ERC20 token"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"removeSupportedToken(address)": {
								"details": "Removes a supported token (only TRANSFER_ADMIN_ROLE)",
								"params": {
									"token": "Address of the token to remove"
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setAllowance(address,address,uint256)": {
								"details": "Sets allowance for a spender to transfer tokens on behalf of the owner",
								"params": {
									"amount": "Amount of tokens allowed to spend",
									"spender": "Address allowed to spend tokens",
									"token": "Address of the ERC20 token"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferToken(address,address,uint256)": {
								"details": "Transfers tokens from the sender to a recipient",
								"params": {
									"amount": "Amount of tokens to transfer",
									"to": "Recipient address",
									"token": "Address of the ERC20 token"
								}
							},
							"transferTokenFrom(address,address,address,uint256)": {
								"details": "Transfers tokens from one address to another, respecting allowances",
								"params": {
									"amount": "Amount of tokens to transfer",
									"from": "Sender address",
									"to": "Recipient address",
									"token": "Address of the ERC20 token"
								}
							}
						},
						"title": "TokenTransfer",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token/TokenTransfer.sol\":465:5840  contract TokenTransfer is ReentrancyGuard, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/token/TokenTransfer.sol\":1648:1774  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1924  _status */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/token/TokenTransfer.sol\":1672:1714  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/token/TokenTransfer.sol\":1683:1701  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/token/TokenTransfer.sol\":1703:1713  msg.sender */\n  caller\n    /* \"contracts/token/TokenTransfer.sol\":1672:1682  _grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/token/TokenTransfer.sol\":1672:1714  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/token/TokenTransfer.sol\":1724:1767  _grantRole(TRANSFER_ADMIN_ROLE, msg.sender) */\n  tag_8\n    /* \"contracts/token/TokenTransfer.sol\":646:678  keccak256(\"TRANSFER_ADMIN_ROLE\") */\n  0x915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c\n    /* \"contracts/token/TokenTransfer.sol\":1756:1766  msg.sender */\n  caller\n    /* \"contracts/token/TokenTransfer.sol\":1724:1734  _grantRole */\n  shl(0x20, tag_7)\n    /* \"contracts/token/TokenTransfer.sol\":1724:1767  _grantRole(TRANSFER_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/token/TokenTransfer.sol\":465:5840  contract TokenTransfer is ReentrancyGuard, AccessControl {... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_14\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_10:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/token/TokenTransfer.sol\":465:5840  contract TokenTransfer is ReentrancyGuard, AccessControl {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/TokenTransfer.sol\":465:5840  contract TokenTransfer is ReentrancyGuard, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xda46098c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe5994905\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf5537ede\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x91d14854\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x927da105\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xcdb33b81\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x68a37ae8\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x68a37ae8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x68c4ac26\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6d69fcaf\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x76319190\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/token/TokenTransfer.sol\":600:678  bytes32 public constant TRANSFER_ADMIN_ROLE = keccak256(\"TRANSFER_ADMIN_ROLE\") */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/TokenTransfer.sol\":743:790  mapping(address => bool) public supportedTokens */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/TokenTransfer.sol\":4731:4890  function addSupportedToken(address token) external onlyRole(TRANSFER_ADMIN_ROLE) {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/token/TokenTransfer.sol\":5028:5193  function removeSupportedToken(address token) external onlyRole(TRANSFER_ADMIN_ROLE) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/TokenTransfer.sol\":4443:4599  function allowance(address owner, address spender, address token) external view returns (uint256) {... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/token/TokenTransfer.sol\":3102:3717  function batchTransferToken(address[] calldata to, address token, uint256[] calldata amounts) external nonReentrant {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/token/TokenTransfer.sol\":3978:4185  function setAllowance(address spender, address token, uint256 amount) external {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/token/TokenTransfer.sol\":2406:2893  function transferTokenFrom(address from, address to, address token, uint256 amount) external nonReentrant {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/token/TokenTransfer.sol\":1988:2138  function transferToken(address to, address token, uint256 amount) external nonReentrant {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_87\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_88\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_89\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_91\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_31\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_93\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_96:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_101\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_102\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_103\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_102:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/TokenTransfer.sol\":600:678  bytes32 public constant TRANSFER_ADMIN_ROLE = keccak256(\"TRANSFER_ADMIN_ROLE\") */\n    tag_42:\n        /* \"contracts/token/TokenTransfer.sol\":646:678  keccak256(\"TRANSFER_ADMIN_ROLE\") */\n      0x915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c\n        /* \"contracts/token/TokenTransfer.sol\":600:678  bytes32 public constant TRANSFER_ADMIN_ROLE = keccak256(\"TRANSFER_ADMIN_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"contracts/token/TokenTransfer.sol\":743:790  mapping(address => bool) public supportedTokens */\n    tag_47:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/token/TokenTransfer.sol\":4731:4890  function addSupportedToken(address token) external onlyRole(TRANSFER_ADMIN_ROLE) {... */\n    tag_51:\n        /* \"contracts/token/TokenTransfer.sol\":646:678  keccak256(\"TRANSFER_ADMIN_ROLE\") */\n      0x915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_105\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/token/TokenTransfer.sol\":4847:4851  true */\n      0x01\n        /* \"contracts/token/TokenTransfer.sol\":4822:4837  supportedTokens */\n      0x02\n        /* \"contracts/token/TokenTransfer.sol\":4822:4844  supportedTokens[token] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":4838:4843  token */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":4822:4844  supportedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":4822:4851  supportedTokens[token] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":4877:4882  token */\n      dup2\n        /* \"contracts/token/TokenTransfer.sol\":4866:4883  TokenAdded(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/token/TokenTransfer.sol\":4731:4890  function addSupportedToken(address token) external onlyRole(TRANSFER_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/TokenTransfer.sol\":5028:5193  function removeSupportedToken(address token) external onlyRole(TRANSFER_ADMIN_ROLE) {... */\n    tag_54:\n        /* \"contracts/token/TokenTransfer.sol\":646:678  keccak256(\"TRANSFER_ADMIN_ROLE\") */\n      0x915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/token/TokenTransfer.sol\":5147:5152  false */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":5122:5137  supportedTokens */\n      0x02\n        /* \"contracts/token/TokenTransfer.sol\":5122:5144  supportedTokens[token] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":5138:5143  token */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":5122:5144  supportedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":5122:5152  supportedTokens[token] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":5180:5185  token */\n      dup2\n        /* \"contracts/token/TokenTransfer.sol\":5167:5186  TokenRemoved(token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/token/TokenTransfer.sol\":5028:5193  function removeSupportedToken(address token) external onlyRole(TRANSFER_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/TokenTransfer.sol\":4443:4599  function allowance(address owner, address spender, address token) external view returns (uint256) {... */\n    tag_62:\n        /* \"contracts/token/TokenTransfer.sol\":4532:4539  uint256 */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":4558:4569  _allowances */\n      0x03\n        /* \"contracts/token/TokenTransfer.sol\":4558:4576  _allowances[owner] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":4570:4575  owner */\n      dup6\n        /* \"contracts/token/TokenTransfer.sol\":4558:4576  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/TokenTransfer.sol\":4558:4583  _allowances[owner][token] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":4577:4582  token */\n      dup4\n        /* \"contracts/token/TokenTransfer.sol\":4558:4583  _allowances[owner][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/TokenTransfer.sol\":4558:4592  _allowances[owner][token][spender] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":4584:4591  spender */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":4558:4592  _allowances[owner][token][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token/TokenTransfer.sol\":4551:4592  return _allowances[owner][token][spender] */\n      swap1\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":4443:4599  function allowance(address owner, address spender, address token) external view returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/token/TokenTransfer.sol\":3102:3717  function batchTransferToken(address[] calldata to, address token, uint256[] calldata amounts) external nonReentrant {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_113\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_114\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/token/TokenTransfer.sol\":3245:3252  amounts */\n      dup2\n      dup2\n        /* \"contracts/token/TokenTransfer.sol\":3245:3259  amounts.length */\n      swap1\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":3232:3234  to */\n      dup6\n      dup6\n        /* \"contracts/token/TokenTransfer.sol\":3232:3241  to.length */\n      swap1\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":3232:3259  to.length != amounts.length */\n      eq\n        /* \"contracts/token/TokenTransfer.sol\":3228:3289  if (to.length != amounts.length) revert InvalidArrayLengths() */\n      tag_116\n      jumpi\n        /* \"contracts/token/TokenTransfer.sol\":3268:3289  InvalidArrayLengths() */\n      mload(0x40)\n      0xa9854bc900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/TokenTransfer.sol\":3228:3289  if (to.length != amounts.length) revert InvalidArrayLengths() */\n    tag_116:\n        /* \"contracts/token/TokenTransfer.sol\":3308:3327  uint256 totalAmount */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":3346:3355  uint256 i */\n      dup1\n        /* \"contracts/token/TokenTransfer.sol\":3341:3436  for (uint256 i = 0; i < amounts.length; i++) {... */\n    tag_117:\n        /* \"contracts/token/TokenTransfer.sol\":3365:3372  amounts */\n      dup4\n      dup4\n        /* \"contracts/token/TokenTransfer.sol\":3365:3379  amounts.length */\n      swap1\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":3361:3362  i */\n      dup2\n        /* \"contracts/token/TokenTransfer.sol\":3361:3379  i < amounts.length */\n      lt\n        /* \"contracts/token/TokenTransfer.sol\":3341:3436  for (uint256 i = 0; i < amounts.length; i++) {... */\n      iszero\n      tag_118\n      jumpi\n        /* \"contracts/token/TokenTransfer.sol\":3415:3422  amounts */\n      dup4\n      dup4\n        /* \"contracts/token/TokenTransfer.sol\":3423:3424  i */\n      dup3\n        /* \"contracts/token/TokenTransfer.sol\":3415:3425  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_120\n      jumpi\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n    tag_120:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/token/TokenTransfer.sol\":3400:3425  totalAmount += amounts[i] */\n      dup3\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      swap2\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":3381:3384  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":3341:3436  for (uint256 i = 0; i < amounts.length; i++) {... */\n      jump(tag_117)\n    tag_118:\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":3446:3516  IERC20(token).safeTransferFrom(msg.sender, address(this), totalAmount) */\n      tag_125\n        /* \"contracts/token/TokenTransfer.sol\":3477:3487  msg.sender */\n      caller\n        /* \"contracts/token/TokenTransfer.sol\":3497:3501  this */\n      address\n        /* \"contracts/token/TokenTransfer.sol\":3504:3515  totalAmount */\n      dup4\n        /* \"contracts/token/TokenTransfer.sol\":3453:3458  token */\n      dup8\n        /* \"contracts/token/TokenTransfer.sol\":3446:3476  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"contracts/token/TokenTransfer.sol\":3446:3516  IERC20(token).safeTransferFrom(msg.sender, address(this), totalAmount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"contracts/token/TokenTransfer.sol\":3532:3541  uint256 i */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":3527:3647  for (uint256 i = 0; i < to.length; i++) {... */\n    tag_127:\n        /* \"contracts/token/TokenTransfer.sol\":3551:3553  to */\n      dup7\n      dup7\n        /* \"contracts/token/TokenTransfer.sol\":3551:3560  to.length */\n      swap1\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":3547:3548  i */\n      dup2\n        /* \"contracts/token/TokenTransfer.sol\":3547:3560  i < to.length */\n      lt\n        /* \"contracts/token/TokenTransfer.sol\":3527:3647  for (uint256 i = 0; i < to.length; i++) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"contracts/token/TokenTransfer.sol\":3581:3636  _transferToken(address(this), to[i], token, amounts[i]) */\n      tag_130\n        /* \"contracts/token/TokenTransfer.sol\":3604:3608  this */\n      address\n        /* \"contracts/token/TokenTransfer.sol\":3611:3613  to */\n      dup9\n      dup9\n        /* \"contracts/token/TokenTransfer.sol\":3614:3615  i */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":3611:3616  to[i] */\n      dup2\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_132\n      tag_122\n      jump\t// in\n    tag_132:\n    tag_131:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_133:\n        /* \"contracts/token/TokenTransfer.sol\":3618:3623  token */\n      dup8\n        /* \"contracts/token/TokenTransfer.sol\":3625:3632  amounts */\n      dup8\n      dup8\n        /* \"contracts/token/TokenTransfer.sol\":3633:3634  i */\n      dup7\n        /* \"contracts/token/TokenTransfer.sol\":3625:3635  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_135\n      tag_122\n      jump\t// in\n    tag_135:\n    tag_134:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/token/TokenTransfer.sol\":3581:3595  _transferToken */\n      tag_136\n        /* \"contracts/token/TokenTransfer.sol\":3581:3636  _transferToken(address(this), to[i], token, amounts[i]) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/token/TokenTransfer.sol\":3562:3565  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":3527:3647  for (uint256 i = 0; i < to.length; i++) {... */\n      jump(tag_127)\n    tag_128:\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":3695:3700  token */\n      dup4\n        /* \"contracts/token/TokenTransfer.sol\":3662:3710  BatchTransferred(msg.sender, to, token, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/TokenTransfer.sol\":3679:3689  msg.sender */\n      caller\n        /* \"contracts/token/TokenTransfer.sol\":3662:3710  BatchTransferred(msg.sender, to, token, amounts) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6f48f5cfe672b48c8d014ecf4ecb7cdd8a66519dc4e331f0c7e95f1f2183a810\n        /* \"contracts/token/TokenTransfer.sol\":3691:3693  to */\n      dup9\n      dup9\n        /* \"contracts/token/TokenTransfer.sol\":3702:3709  amounts */\n      dup8\n      dup8\n        /* \"contracts/token/TokenTransfer.sol\":3662:3710  BatchTransferred(msg.sender, to, token, amounts) */\n      mload(0x40)\n      tag_137\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/token/TokenTransfer.sol\":3218:3717  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_139\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_140\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/token/TokenTransfer.sol\":3102:3717  function batchTransferToken(address[] calldata to, address token, uint256[] calldata amounts) external nonReentrant {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_31\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_143\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_94\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_103\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_145:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/TokenTransfer.sol\":3978:4185  function setAllowance(address spender, address token, uint256 amount) external {... */\n    tag_78:\n        /* \"contracts/token/TokenTransfer.sol\":4109:4115  amount */\n      dup1\n        /* \"contracts/token/TokenTransfer.sol\":4067:4078  _allowances */\n      0x03\n        /* \"contracts/token/TokenTransfer.sol\":4067:4090  _allowances[msg.sender] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":4079:4089  msg.sender */\n      caller\n        /* \"contracts/token/TokenTransfer.sol\":4067:4090  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/TokenTransfer.sol\":4067:4097  _allowances[msg.sender][token] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":4091:4096  token */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":4067:4097  _allowances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/TokenTransfer.sol\":4067:4106  _allowances[msg.sender][token][spender] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":4098:4105  spender */\n      dup6\n        /* \"contracts/token/TokenTransfer.sol\":4067:4106  _allowances[msg.sender][token][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/TokenTransfer.sol\":4067:4115  _allowances[msg.sender][token][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":4164:4169  token */\n      dup2\n        /* \"contracts/token/TokenTransfer.sol\":4130:4178  AllowanceSet(msg.sender, spender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/TokenTransfer.sol\":4155:4162  spender */\n      dup4\n        /* \"contracts/token/TokenTransfer.sol\":4130:4178  AllowanceSet(msg.sender, spender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/TokenTransfer.sol\":4143:4153  msg.sender */\n      caller\n        /* \"contracts/token/TokenTransfer.sol\":4130:4178  AllowanceSet(msg.sender, spender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8a35f50fa7149c607bf92648069a0d9593c88f1e12f1abd0a0481a4a959b0681\n        /* \"contracts/token/TokenTransfer.sol\":4171:4177  amount */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":4130:4178  AllowanceSet(msg.sender, spender, token, amount) */\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/token/TokenTransfer.sol\":3978:4185  function setAllowance(address spender, address token, uint256 amount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/TokenTransfer.sol\":2406:2893  function transferTokenFrom(address from, address to, address token, uint256 amount) external nonReentrant {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_149\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_114\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/token/TokenTransfer.sol\":2522:2546  uint256 currentAllowance */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":2549:2560  _allowances */\n      0x03\n        /* \"contracts/token/TokenTransfer.sol\":2549:2566  _allowances[from] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":2561:2565  from */\n      dup7\n        /* \"contracts/token/TokenTransfer.sol\":2549:2566  _allowances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/TokenTransfer.sol\":2549:2573  _allowances[from][token] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":2567:2572  token */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":2549:2573  _allowances[from][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/TokenTransfer.sol\":2549:2585  _allowances[from][token][msg.sender] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":2574:2584  msg.sender */\n      caller\n        /* \"contracts/token/TokenTransfer.sol\":2549:2585  _allowances[from][token][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/token/TokenTransfer.sol\":2522:2585  uint256 currentAllowance = _allowances[from][token][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":2618:2624  amount */\n      dup2\n        /* \"contracts/token/TokenTransfer.sol\":2599:2615  currentAllowance */\n      dup2\n        /* \"contracts/token/TokenTransfer.sol\":2599:2624  currentAllowance < amount */\n      lt\n        /* \"contracts/token/TokenTransfer.sol\":2595:2730  if (currentAllowance < amount) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"contracts/token/TokenTransfer.sol\":2669:2673  from */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":2675:2685  msg.sender */\n      caller\n        /* \"contracts/token/TokenTransfer.sol\":2687:2692  token */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":2694:2700  amount */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":2702:2718  currentAllowance */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":2647:2719  InsufficientAllowance(from, msg.sender, token, amount, currentAllowance) */\n      mload(0x40)\n      0x51750bc700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/TokenTransfer.sol\":2595:2730  if (currentAllowance < amount) {... */\n    tag_151:\n        /* \"contracts/token/TokenTransfer.sol\":2821:2827  amount */\n      dup2\n        /* \"contracts/token/TokenTransfer.sol\":2802:2818  currentAllowance */\n      dup2\n        /* \"contracts/token/TokenTransfer.sol\":2802:2827  currentAllowance - amount */\n      sub\n        /* \"contracts/token/TokenTransfer.sol\":2763:2774  _allowances */\n      0x03\n        /* \"contracts/token/TokenTransfer.sol\":2763:2780  _allowances[from] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":2775:2779  from */\n      dup8\n        /* \"contracts/token/TokenTransfer.sol\":2763:2780  _allowances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/TokenTransfer.sol\":2763:2787  _allowances[from][token] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":2781:2786  token */\n      dup6\n        /* \"contracts/token/TokenTransfer.sol\":2763:2787  _allowances[from][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/TokenTransfer.sol\":2763:2799  _allowances[from][token][msg.sender] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":2788:2798  msg.sender */\n      caller\n        /* \"contracts/token/TokenTransfer.sol\":2763:2799  _allowances[from][token][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/token/TokenTransfer.sol\":2763:2827  _allowances[from][token][msg.sender] = currentAllowance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/token/TokenTransfer.sol\":2847:2886  _transferToken(from, to, token, amount) */\n      tag_154\n        /* \"contracts/token/TokenTransfer.sol\":2862:2866  from */\n      dup6\n        /* \"contracts/token/TokenTransfer.sol\":2868:2870  to */\n      dup6\n        /* \"contracts/token/TokenTransfer.sol\":2872:2877  token */\n      dup6\n        /* \"contracts/token/TokenTransfer.sol\":2879:2885  amount */\n      dup6\n        /* \"contracts/token/TokenTransfer.sol\":2847:2861  _transferToken */\n      tag_136\n        /* \"contracts/token/TokenTransfer.sol\":2847:2886  _transferToken(from, to, token, amount) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/token/TokenTransfer.sol\":2512:2893  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_140\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/token/TokenTransfer.sol\":2406:2893  function transferTokenFrom(address from, address to, address token, uint256 amount) external nonReentrant {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/TokenTransfer.sol\":1988:2138  function transferToken(address to, address token, uint256 amount) external nonReentrant {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_157\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_114\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_157:\n        /* \"contracts/token/TokenTransfer.sol\":2086:2131  _transferToken(msg.sender, to, token, amount) */\n      tag_159\n        /* \"contracts/token/TokenTransfer.sol\":2101:2111  msg.sender */\n      caller\n        /* \"contracts/token/TokenTransfer.sol\":2113:2115  to */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":2117:2122  token */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":2124:2130  amount */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":2086:2100  _transferToken */\n      tag_136\n        /* \"contracts/token/TokenTransfer.sol\":2086:2131  _transferToken(msg.sender, to, token, amount) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_160\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_140\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/token/TokenTransfer.sol\":1988:2138  function transferToken(address to, address token, uint256 amount) external nonReentrant {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_165\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_57\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_166)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_166:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_57\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_100\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_172)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_172:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2558:2576  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2721  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2714:2731  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_181\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/token/TokenTransfer.sol\":5437:5838  function _transferToken(address from, address to, address token, uint256 amount) private {... */\n    tag_136:\n        /* \"contracts/token/TokenTransfer.sol\":5541:5556  supportedTokens */\n      0x02\n        /* \"contracts/token/TokenTransfer.sol\":5541:5563  supportedTokens[token] */\n      0x00\n        /* \"contracts/token/TokenTransfer.sol\":5557:5562  token */\n      dup4\n        /* \"contracts/token/TokenTransfer.sol\":5541:5563  supportedTokens[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/token/TokenTransfer.sol\":5536:5595  if (!supportedTokens[token]) revert UnsupportedToken(token) */\n      tag_185\n      jumpi\n        /* \"contracts/token/TokenTransfer.sol\":5589:5594  token */\n      dup2\n        /* \"contracts/token/TokenTransfer.sol\":5572:5595  UnsupportedToken(token) */\n      mload(0x40)\n      0xbf16aab600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/token/TokenTransfer.sol\":5536:5595  if (!supportedTokens[token]) revert UnsupportedToken(token) */\n    tag_185:\n        /* \"contracts/token/TokenTransfer.sol\":5626:5630  this */\n      address\n        /* \"contracts/token/TokenTransfer.sol\":5610:5631  from == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/TokenTransfer.sol\":5610:5614  from */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":5610:5631  from == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/token/TokenTransfer.sol\":5606:5775  if (from == address(this)) {... */\n      tag_188\n      jumpi\n        /* \"contracts/token/TokenTransfer.sol\":5647:5685  IERC20(token).safeTransfer(to, amount) */\n      tag_189\n        /* \"contracts/token/TokenTransfer.sol\":5674:5676  to */\n      dup4\n        /* \"contracts/token/TokenTransfer.sol\":5678:5684  amount */\n      dup3\n        /* \"contracts/token/TokenTransfer.sol\":5654:5659  token */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":5647:5673  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_190\n      swap1\n        /* \"contracts/token/TokenTransfer.sol\":5647:5685  IERC20(token).safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"contracts/token/TokenTransfer.sol\":5606:5775  if (from == address(this)) {... */\n      jump(tag_191)\n    tag_188:\n        /* \"contracts/token/TokenTransfer.sol\":5716:5764  IERC20(token).safeTransferFrom(from, to, amount) */\n      tag_192\n        /* \"contracts/token/TokenTransfer.sol\":5747:5751  from */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":5753:5755  to */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":5757:5763  amount */\n      dup4\n        /* \"contracts/token/TokenTransfer.sol\":5723:5728  token */\n      dup6\n        /* \"contracts/token/TokenTransfer.sol\":5716:5746  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"contracts/token/TokenTransfer.sol\":5716:5764  IERC20(token).safeTransferFrom(from, to, amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_192:\n        /* \"contracts/token/TokenTransfer.sol\":5606:5775  if (from == address(this)) {... */\n    tag_191:\n        /* \"contracts/token/TokenTransfer.sol\":5817:5822  token */\n      dup2\n        /* \"contracts/token/TokenTransfer.sol\":5790:5831  TokenTransferred(from, to, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/TokenTransfer.sol\":5813:5815  to */\n      dup4\n        /* \"contracts/token/TokenTransfer.sol\":5790:5831  TokenTransferred(from, to, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/token/TokenTransfer.sol\":5807:5811  from */\n      dup6\n        /* \"contracts/token/TokenTransfer.sol\":5790:5831  TokenTransferred(from, to, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9af266b6ca4909f988dc948fb50ad15153abbe525351881bad4fa858be96515c\n        /* \"contracts/token/TokenTransfer.sol\":5824:5830  amount */\n      dup5\n        /* \"contracts/token/TokenTransfer.sol\":5790:5831  TokenTransferred(from, to, token, amount) */\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/token/TokenTransfer.sol\":5437:5838  function _transferToken(address from, address to, address token, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_196\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_57\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_202\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_203\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_210\n      swap3\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_213\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_214\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_222\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_221)\n    tag_222:\n      0x60\n      swap2\n      pop\n    tag_221:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_223\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_224\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_224:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_227\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_228\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_229)\n    tag_226:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_230\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_230:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_225)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_225:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_237:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_238:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_239:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_240:\n        /* \"#utility.yul\":561:584   */\n      tag_286\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_239\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_287:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_241:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_289\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_240\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_24:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_292\n      tag_237\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":833:952   */\n    tag_291:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_293\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_241\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_242:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_243:\n        /* \"#utility.yul\":1268:1289   */\n      tag_296\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_242\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_27:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_298\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_243\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_244:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_245:\n        /* \"#utility.yul\":1674:1698   */\n      tag_301\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_244\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_302:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_246:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_304\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_245\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_30:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_307\n      tag_237\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1950:2069   */\n    tag_306:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_308\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_246\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_247:\n        /* \"#utility.yul\":2296:2320   */\n      tag_310\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_244\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_33:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_312\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_247\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_248:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2789   */\n    tag_249:\n        /* \"#utility.yul\":2730:2737   */\n      0x00\n        /* \"#utility.yul\":2759:2783   */\n      tag_315\n        /* \"#utility.yul\":2777:2782   */\n      dup3\n        /* \"#utility.yul\":2759:2783   */\n      tag_248\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2748:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2917   */\n    tag_250:\n        /* \"#utility.yul\":2868:2892   */\n      tag_317\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2868:2892   */\n      tag_249\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2893   */\n      eq\n        /* \"#utility.yul\":2848:2911   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2904:2905   */\n      dup1\n        /* \"#utility.yul\":2897:2909   */\n      revert\n        /* \"#utility.yul\":2848:2911   */\n    tag_318:\n        /* \"#utility.yul\":2795:2917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3062   */\n    tag_251:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":2994:3014   */\n      calldataload\n        /* \"#utility.yul\":2985:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3056   */\n      tag_320\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3023:3056   */\n      tag_250\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":2923:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3542   */\n    tag_36:\n        /* \"#utility.yul\":3136:3142   */\n      0x00\n        /* \"#utility.yul\":3144:3150   */\n      dup1\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3181:3190   */\n      dup4\n        /* \"#utility.yul\":3172:3179   */\n      dup6\n        /* \"#utility.yul\":3168:3191   */\n      sub\n        /* \"#utility.yul\":3164:3196   */\n      slt\n        /* \"#utility.yul\":3161:3280   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":3199:3278   */\n      tag_323\n      tag_237\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3161:3280   */\n    tag_322:\n        /* \"#utility.yul\":3319:3320   */\n      0x00\n        /* \"#utility.yul\":3344:3397   */\n      tag_324\n        /* \"#utility.yul\":3389:3396   */\n      dup6\n        /* \"#utility.yul\":3380:3386   */\n      dup3\n        /* \"#utility.yul\":3369:3378   */\n      dup7\n        /* \"#utility.yul\":3365:3387   */\n      add\n        /* \"#utility.yul\":3344:3397   */\n      tag_246\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3334:3397   */\n      swap3\n      pop\n        /* \"#utility.yul\":3290:3407   */\n      pop\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"#utility.yul\":3472:3525   */\n      tag_325\n        /* \"#utility.yul\":3517:3524   */\n      dup6\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup7\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_251\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3535   */\n      pop\n        /* \"#utility.yul\":3068:3542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3877   */\n    tag_46:\n        /* \"#utility.yul\":3607:3613   */\n      0x00\n        /* \"#utility.yul\":3656:3658   */\n      0x20\n        /* \"#utility.yul\":3644:3653   */\n      dup3\n        /* \"#utility.yul\":3635:3642   */\n      dup5\n        /* \"#utility.yul\":3631:3654   */\n      sub\n        /* \"#utility.yul\":3627:3659   */\n      slt\n        /* \"#utility.yul\":3624:3743   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":3662:3741   */\n      tag_328\n      tag_237\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3624:3743   */\n    tag_327:\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3807:3860   */\n      tag_329\n        /* \"#utility.yul\":3852:3859   */\n      dup5\n        /* \"#utility.yul\":3843:3849   */\n      dup3\n        /* \"#utility.yul\":3832:3841   */\n      dup6\n        /* \"#utility.yul\":3828:3850   */\n      add\n        /* \"#utility.yul\":3807:3860   */\n      tag_251\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3797:3860   */\n      swap2\n      pop\n        /* \"#utility.yul\":3753:3870   */\n      pop\n        /* \"#utility.yul\":3548:3877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3883:4502   */\n    tag_61:\n        /* \"#utility.yul\":3960:3966   */\n      0x00\n        /* \"#utility.yul\":3968:3974   */\n      dup1\n        /* \"#utility.yul\":3976:3982   */\n      0x00\n        /* \"#utility.yul\":4025:4027   */\n      0x60\n        /* \"#utility.yul\":4013:4022   */\n      dup5\n        /* \"#utility.yul\":4004:4011   */\n      dup7\n        /* \"#utility.yul\":4000:4023   */\n      sub\n        /* \"#utility.yul\":3996:4028   */\n      slt\n        /* \"#utility.yul\":3993:4112   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":4031:4110   */\n      tag_332\n      tag_237\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3993:4112   */\n    tag_331:\n        /* \"#utility.yul\":4151:4152   */\n      0x00\n        /* \"#utility.yul\":4176:4229   */\n      tag_333\n        /* \"#utility.yul\":4221:4228   */\n      dup7\n        /* \"#utility.yul\":4212:4218   */\n      dup3\n        /* \"#utility.yul\":4201:4210   */\n      dup8\n        /* \"#utility.yul\":4197:4219   */\n      add\n        /* \"#utility.yul\":4176:4229   */\n      tag_251\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":4166:4229   */\n      swap4\n      pop\n        /* \"#utility.yul\":4122:4239   */\n      pop\n        /* \"#utility.yul\":4278:4280   */\n      0x20\n        /* \"#utility.yul\":4304:4357   */\n      tag_334\n        /* \"#utility.yul\":4349:4356   */\n      dup7\n        /* \"#utility.yul\":4340:4346   */\n      dup3\n        /* \"#utility.yul\":4329:4338   */\n      dup8\n        /* \"#utility.yul\":4325:4347   */\n      add\n        /* \"#utility.yul\":4304:4357   */\n      tag_251\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4294:4357   */\n      swap3\n      pop\n        /* \"#utility.yul\":4249:4367   */\n      pop\n        /* \"#utility.yul\":4406:4408   */\n      0x40\n        /* \"#utility.yul\":4432:4485   */\n      tag_335\n        /* \"#utility.yul\":4477:4484   */\n      dup7\n        /* \"#utility.yul\":4468:4474   */\n      dup3\n        /* \"#utility.yul\":4457:4466   */\n      dup8\n        /* \"#utility.yul\":4453:4475   */\n      add\n        /* \"#utility.yul\":4432:4485   */\n      tag_251\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":4422:4485   */\n      swap2\n      pop\n        /* \"#utility.yul\":4377:4495   */\n      pop\n        /* \"#utility.yul\":3883:4502   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4508:4585   */\n    tag_252:\n        /* \"#utility.yul\":4545:4552   */\n      0x00\n        /* \"#utility.yul\":4574:4579   */\n      dup2\n        /* \"#utility.yul\":4563:4579   */\n      swap1\n      pop\n        /* \"#utility.yul\":4508:4585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:4709   */\n    tag_253:\n        /* \"#utility.yul\":4678:4702   */\n      tag_338\n        /* \"#utility.yul\":4696:4701   */\n      dup2\n        /* \"#utility.yul\":4678:4702   */\n      tag_252\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4673:4676   */\n      dup3\n        /* \"#utility.yul\":4666:4703   */\n      mstore\n        /* \"#utility.yul\":4591:4709   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4715:4937   */\n    tag_64:\n        /* \"#utility.yul\":4808:4812   */\n      0x00\n        /* \"#utility.yul\":4846:4848   */\n      0x20\n        /* \"#utility.yul\":4835:4844   */\n      dup3\n        /* \"#utility.yul\":4831:4849   */\n      add\n        /* \"#utility.yul\":4823:4849   */\n      swap1\n      pop\n        /* \"#utility.yul\":4859:4930   */\n      tag_340\n        /* \"#utility.yul\":4927:4928   */\n      0x00\n        /* \"#utility.yul\":4916:4925   */\n      dup4\n        /* \"#utility.yul\":4912:4929   */\n      add\n        /* \"#utility.yul\":4903:4909   */\n      dup5\n        /* \"#utility.yul\":4859:4930   */\n      tag_253\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4715:4937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4943:5060   */\n    tag_254:\n        /* \"#utility.yul\":5052:5053   */\n      0x00\n        /* \"#utility.yul\":5049:5050   */\n      dup1\n        /* \"#utility.yul\":5042:5054   */\n      revert\n        /* \"#utility.yul\":5066:5183   */\n    tag_255:\n        /* \"#utility.yul\":5175:5176   */\n      0x00\n        /* \"#utility.yul\":5172:5173   */\n      dup1\n        /* \"#utility.yul\":5165:5177   */\n      revert\n        /* \"#utility.yul\":5189:5306   */\n    tag_256:\n        /* \"#utility.yul\":5298:5299   */\n      0x00\n        /* \"#utility.yul\":5295:5296   */\n      dup1\n        /* \"#utility.yul\":5288:5300   */\n      revert\n        /* \"#utility.yul\":5329:5897   */\n    tag_257:\n        /* \"#utility.yul\":5402:5410   */\n      0x00\n        /* \"#utility.yul\":5412:5418   */\n      dup1\n        /* \"#utility.yul\":5462:5465   */\n      dup4\n        /* \"#utility.yul\":5455:5459   */\n      0x1f\n        /* \"#utility.yul\":5447:5453   */\n      dup5\n        /* \"#utility.yul\":5443:5460   */\n      add\n        /* \"#utility.yul\":5439:5466   */\n      slt\n        /* \"#utility.yul\":5429:5551   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":5470:5549   */\n      tag_346\n      tag_254\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5429:5551   */\n    tag_345:\n        /* \"#utility.yul\":5583:5589   */\n      dup3\n        /* \"#utility.yul\":5570:5590   */\n      calldataload\n        /* \"#utility.yul\":5560:5590   */\n      swap1\n      pop\n        /* \"#utility.yul\":5613:5631   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5605:5611   */\n      dup2\n        /* \"#utility.yul\":5602:5632   */\n      gt\n        /* \"#utility.yul\":5599:5716   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":5635:5714   */\n      tag_348\n      tag_255\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":5599:5716   */\n    tag_347:\n        /* \"#utility.yul\":5749:5753   */\n      0x20\n        /* \"#utility.yul\":5741:5747   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5725:5754   */\n      swap2\n      pop\n        /* \"#utility.yul\":5803:5806   */\n      dup4\n        /* \"#utility.yul\":5795:5799   */\n      0x20\n        /* \"#utility.yul\":5787:5793   */\n      dup3\n        /* \"#utility.yul\":5783:5800   */\n      mul\n        /* \"#utility.yul\":5773:5781   */\n      dup4\n        /* \"#utility.yul\":5769:5801   */\n      add\n        /* \"#utility.yul\":5766:5807   */\n      gt\n        /* \"#utility.yul\":5763:5891   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":5810:5889   */\n      tag_350\n      tag_256\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5763:5891   */\n    tag_349:\n        /* \"#utility.yul\":5329:5897   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5920:6488   */\n    tag_258:\n        /* \"#utility.yul\":5993:6001   */\n      0x00\n        /* \"#utility.yul\":6003:6009   */\n      dup1\n        /* \"#utility.yul\":6053:6056   */\n      dup4\n        /* \"#utility.yul\":6046:6050   */\n      0x1f\n        /* \"#utility.yul\":6038:6044   */\n      dup5\n        /* \"#utility.yul\":6034:6051   */\n      add\n        /* \"#utility.yul\":6030:6057   */\n      slt\n        /* \"#utility.yul\":6020:6142   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":6061:6140   */\n      tag_353\n      tag_254\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":6020:6142   */\n    tag_352:\n        /* \"#utility.yul\":6174:6180   */\n      dup3\n        /* \"#utility.yul\":6161:6181   */\n      calldataload\n        /* \"#utility.yul\":6151:6181   */\n      swap1\n      pop\n        /* \"#utility.yul\":6204:6222   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6196:6202   */\n      dup2\n        /* \"#utility.yul\":6193:6223   */\n      gt\n        /* \"#utility.yul\":6190:6307   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":6226:6305   */\n      tag_355\n      tag_255\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":6190:6307   */\n    tag_354:\n        /* \"#utility.yul\":6340:6344   */\n      0x20\n        /* \"#utility.yul\":6332:6338   */\n      dup4\n        /* \"#utility.yul\":6328:6345   */\n      add\n        /* \"#utility.yul\":6316:6345   */\n      swap2\n      pop\n        /* \"#utility.yul\":6394:6397   */\n      dup4\n        /* \"#utility.yul\":6386:6390   */\n      0x20\n        /* \"#utility.yul\":6378:6384   */\n      dup3\n        /* \"#utility.yul\":6374:6391   */\n      mul\n        /* \"#utility.yul\":6364:6372   */\n      dup4\n        /* \"#utility.yul\":6360:6392   */\n      add\n        /* \"#utility.yul\":6357:6398   */\n      gt\n        /* \"#utility.yul\":6354:6482   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":6401:6480   */\n      tag_357\n      tag_256\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":6354:6482   */\n    tag_356:\n        /* \"#utility.yul\":5920:6488   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6494:7573   */\n    tag_70:\n        /* \"#utility.yul\":6625:6631   */\n      0x00\n        /* \"#utility.yul\":6633:6639   */\n      dup1\n        /* \"#utility.yul\":6641:6647   */\n      0x00\n        /* \"#utility.yul\":6649:6655   */\n      dup1\n        /* \"#utility.yul\":6657:6663   */\n      0x00\n        /* \"#utility.yul\":6706:6708   */\n      0x60\n        /* \"#utility.yul\":6694:6703   */\n      dup7\n        /* \"#utility.yul\":6685:6692   */\n      dup9\n        /* \"#utility.yul\":6681:6704   */\n      sub\n        /* \"#utility.yul\":6677:6709   */\n      slt\n        /* \"#utility.yul\":6674:6793   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":6712:6791   */\n      tag_360\n      tag_237\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":6674:6793   */\n    tag_359:\n        /* \"#utility.yul\":6860:6861   */\n      0x00\n        /* \"#utility.yul\":6849:6858   */\n      dup7\n        /* \"#utility.yul\":6845:6862   */\n      add\n        /* \"#utility.yul\":6832:6863   */\n      calldataload\n        /* \"#utility.yul\":6890:6908   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6882:6888   */\n      dup2\n        /* \"#utility.yul\":6879:6909   */\n      gt\n        /* \"#utility.yul\":6876:6993   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":6912:6991   */\n      tag_362\n      tag_238\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":6876:6993   */\n    tag_361:\n        /* \"#utility.yul\":7025:7105   */\n      tag_363\n        /* \"#utility.yul\":7097:7104   */\n      dup9\n        /* \"#utility.yul\":7088:7094   */\n      dup3\n        /* \"#utility.yul\":7077:7086   */\n      dup10\n        /* \"#utility.yul\":7073:7095   */\n      add\n        /* \"#utility.yul\":7025:7105   */\n      tag_257\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":7007:7105   */\n      swap6\n      pop\n      swap6\n      pop\n        /* \"#utility.yul\":6803:7115   */\n      pop\n        /* \"#utility.yul\":7154:7156   */\n      0x20\n        /* \"#utility.yul\":7180:7233   */\n      tag_364\n        /* \"#utility.yul\":7225:7232   */\n      dup9\n        /* \"#utility.yul\":7216:7222   */\n      dup3\n        /* \"#utility.yul\":7205:7214   */\n      dup10\n        /* \"#utility.yul\":7201:7223   */\n      add\n        /* \"#utility.yul\":7180:7233   */\n      tag_251\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":7170:7233   */\n      swap4\n      pop\n        /* \"#utility.yul\":7125:7243   */\n      pop\n        /* \"#utility.yul\":7310:7312   */\n      0x40\n        /* \"#utility.yul\":7299:7308   */\n      dup7\n        /* \"#utility.yul\":7295:7313   */\n      add\n        /* \"#utility.yul\":7282:7314   */\n      calldataload\n        /* \"#utility.yul\":7341:7359   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7333:7339   */\n      dup2\n        /* \"#utility.yul\":7330:7360   */\n      gt\n        /* \"#utility.yul\":7327:7444   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":7363:7442   */\n      tag_366\n      tag_238\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":7327:7444   */\n    tag_365:\n        /* \"#utility.yul\":7476:7556   */\n      tag_367\n        /* \"#utility.yul\":7548:7555   */\n      dup9\n        /* \"#utility.yul\":7539:7545   */\n      dup3\n        /* \"#utility.yul\":7528:7537   */\n      dup10\n        /* \"#utility.yul\":7524:7546   */\n      add\n        /* \"#utility.yul\":7476:7556   */\n      tag_258\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":7458:7556   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":7253:7566   */\n      pop\n        /* \"#utility.yul\":6494:7573   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7579:7701   */\n    tag_259:\n        /* \"#utility.yul\":7652:7676   */\n      tag_369\n        /* \"#utility.yul\":7670:7675   */\n      dup2\n        /* \"#utility.yul\":7652:7676   */\n      tag_252\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":7645:7650   */\n      dup2\n        /* \"#utility.yul\":7642:7677   */\n      eq\n        /* \"#utility.yul\":7632:7695   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":7691:7692   */\n      0x00\n        /* \"#utility.yul\":7688:7689   */\n      dup1\n        /* \"#utility.yul\":7681:7693   */\n      revert\n        /* \"#utility.yul\":7632:7695   */\n    tag_370:\n        /* \"#utility.yul\":7579:7701   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7707:7846   */\n    tag_260:\n        /* \"#utility.yul\":7753:7758   */\n      0x00\n        /* \"#utility.yul\":7791:7797   */\n      dup2\n        /* \"#utility.yul\":7778:7798   */\n      calldataload\n        /* \"#utility.yul\":7769:7798   */\n      swap1\n      pop\n        /* \"#utility.yul\":7807:7840   */\n      tag_372\n        /* \"#utility.yul\":7834:7839   */\n      dup2\n        /* \"#utility.yul\":7807:7840   */\n      tag_259\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7707:7846   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7852:8471   */\n    tag_77:\n        /* \"#utility.yul\":7929:7935   */\n      0x00\n        /* \"#utility.yul\":7937:7943   */\n      dup1\n        /* \"#utility.yul\":7945:7951   */\n      0x00\n        /* \"#utility.yul\":7994:7996   */\n      0x60\n        /* \"#utility.yul\":7982:7991   */\n      dup5\n        /* \"#utility.yul\":7973:7980   */\n      dup7\n        /* \"#utility.yul\":7969:7992   */\n      sub\n        /* \"#utility.yul\":7965:7997   */\n      slt\n        /* \"#utility.yul\":7962:8081   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":8000:8079   */\n      tag_375\n      tag_237\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":7962:8081   */\n    tag_374:\n        /* \"#utility.yul\":8120:8121   */\n      0x00\n        /* \"#utility.yul\":8145:8198   */\n      tag_376\n        /* \"#utility.yul\":8190:8197   */\n      dup7\n        /* \"#utility.yul\":8181:8187   */\n      dup3\n        /* \"#utility.yul\":8170:8179   */\n      dup8\n        /* \"#utility.yul\":8166:8188   */\n      add\n        /* \"#utility.yul\":8145:8198   */\n      tag_251\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":8135:8198   */\n      swap4\n      pop\n        /* \"#utility.yul\":8091:8208   */\n      pop\n        /* \"#utility.yul\":8247:8249   */\n      0x20\n        /* \"#utility.yul\":8273:8326   */\n      tag_377\n        /* \"#utility.yul\":8318:8325   */\n      dup7\n        /* \"#utility.yul\":8309:8315   */\n      dup3\n        /* \"#utility.yul\":8298:8307   */\n      dup8\n        /* \"#utility.yul\":8294:8316   */\n      add\n        /* \"#utility.yul\":8273:8326   */\n      tag_251\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":8263:8326   */\n      swap3\n      pop\n        /* \"#utility.yul\":8218:8336   */\n      pop\n        /* \"#utility.yul\":8375:8377   */\n      0x40\n        /* \"#utility.yul\":8401:8454   */\n      tag_378\n        /* \"#utility.yul\":8446:8453   */\n      dup7\n        /* \"#utility.yul\":8437:8443   */\n      dup3\n        /* \"#utility.yul\":8426:8435   */\n      dup8\n        /* \"#utility.yul\":8422:8444   */\n      add\n        /* \"#utility.yul\":8401:8454   */\n      tag_260\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":8391:8454   */\n      swap2\n      pop\n        /* \"#utility.yul\":8346:8464   */\n      pop\n        /* \"#utility.yul\":7852:8471   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8477:9242   */\n    tag_81:\n        /* \"#utility.yul\":8563:8569   */\n      0x00\n        /* \"#utility.yul\":8571:8577   */\n      dup1\n        /* \"#utility.yul\":8579:8585   */\n      0x00\n        /* \"#utility.yul\":8587:8593   */\n      dup1\n        /* \"#utility.yul\":8636:8639   */\n      0x80\n        /* \"#utility.yul\":8624:8633   */\n      dup6\n        /* \"#utility.yul\":8615:8622   */\n      dup8\n        /* \"#utility.yul\":8611:8634   */\n      sub\n        /* \"#utility.yul\":8607:8640   */\n      slt\n        /* \"#utility.yul\":8604:8724   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":8643:8722   */\n      tag_381\n      tag_237\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":8604:8724   */\n    tag_380:\n        /* \"#utility.yul\":8763:8764   */\n      0x00\n        /* \"#utility.yul\":8788:8841   */\n      tag_382\n        /* \"#utility.yul\":8833:8840   */\n      dup8\n        /* \"#utility.yul\":8824:8830   */\n      dup3\n        /* \"#utility.yul\":8813:8822   */\n      dup9\n        /* \"#utility.yul\":8809:8831   */\n      add\n        /* \"#utility.yul\":8788:8841   */\n      tag_251\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":8778:8841   */\n      swap5\n      pop\n        /* \"#utility.yul\":8734:8851   */\n      pop\n        /* \"#utility.yul\":8890:8892   */\n      0x20\n        /* \"#utility.yul\":8916:8969   */\n      tag_383\n        /* \"#utility.yul\":8961:8968   */\n      dup8\n        /* \"#utility.yul\":8952:8958   */\n      dup3\n        /* \"#utility.yul\":8941:8950   */\n      dup9\n        /* \"#utility.yul\":8937:8959   */\n      add\n        /* \"#utility.yul\":8916:8969   */\n      tag_251\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8906:8969   */\n      swap4\n      pop\n        /* \"#utility.yul\":8861:8979   */\n      pop\n        /* \"#utility.yul\":9018:9020   */\n      0x40\n        /* \"#utility.yul\":9044:9097   */\n      tag_384\n        /* \"#utility.yul\":9089:9096   */\n      dup8\n        /* \"#utility.yul\":9080:9086   */\n      dup3\n        /* \"#utility.yul\":9069:9078   */\n      dup9\n        /* \"#utility.yul\":9065:9087   */\n      add\n        /* \"#utility.yul\":9044:9097   */\n      tag_251\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":9034:9097   */\n      swap3\n      pop\n        /* \"#utility.yul\":8989:9107   */\n      pop\n        /* \"#utility.yul\":9146:9148   */\n      0x60\n        /* \"#utility.yul\":9172:9225   */\n      tag_385\n        /* \"#utility.yul\":9217:9224   */\n      dup8\n        /* \"#utility.yul\":9208:9214   */\n      dup3\n        /* \"#utility.yul\":9197:9206   */\n      dup9\n        /* \"#utility.yul\":9193:9215   */\n      add\n        /* \"#utility.yul\":9172:9225   */\n      tag_260\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":9162:9225   */\n      swap2\n      pop\n        /* \"#utility.yul\":9117:9235   */\n      pop\n        /* \"#utility.yul\":8477:9242   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9248:9428   */\n    tag_122:\n        /* \"#utility.yul\":9296:9373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9293:9294   */\n      0x00\n        /* \"#utility.yul\":9286:9374   */\n      mstore\n        /* \"#utility.yul\":9393:9397   */\n      0x32\n        /* \"#utility.yul\":9390:9391   */\n      0x04\n        /* \"#utility.yul\":9383:9398   */\n      mstore\n        /* \"#utility.yul\":9417:9421   */\n      0x24\n        /* \"#utility.yul\":9414:9415   */\n      0x00\n        /* \"#utility.yul\":9407:9422   */\n      revert\n        /* \"#utility.yul\":9434:9614   */\n    tag_261:\n        /* \"#utility.yul\":9482:9559   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9479:9480   */\n      0x00\n        /* \"#utility.yul\":9472:9560   */\n      mstore\n        /* \"#utility.yul\":9579:9583   */\n      0x11\n        /* \"#utility.yul\":9576:9577   */\n      0x04\n        /* \"#utility.yul\":9569:9584   */\n      mstore\n        /* \"#utility.yul\":9603:9607   */\n      0x24\n        /* \"#utility.yul\":9600:9601   */\n      0x00\n        /* \"#utility.yul\":9593:9608   */\n      revert\n        /* \"#utility.yul\":9620:9811   */\n    tag_124:\n        /* \"#utility.yul\":9660:9663   */\n      0x00\n        /* \"#utility.yul\":9679:9699   */\n      tag_389\n        /* \"#utility.yul\":9697:9698   */\n      dup3\n        /* \"#utility.yul\":9679:9699   */\n      tag_252\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9674:9699   */\n      swap2\n      pop\n        /* \"#utility.yul\":9713:9733   */\n      tag_390\n        /* \"#utility.yul\":9731:9732   */\n      dup4\n        /* \"#utility.yul\":9713:9733   */\n      tag_252\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":9708:9733   */\n      swap3\n      pop\n        /* \"#utility.yul\":9756:9757   */\n      dup3\n        /* \"#utility.yul\":9753:9754   */\n      dup3\n        /* \"#utility.yul\":9749:9758   */\n      add\n        /* \"#utility.yul\":9742:9758   */\n      swap1\n      pop\n        /* \"#utility.yul\":9777:9780   */\n      dup1\n        /* \"#utility.yul\":9774:9775   */\n      dup3\n        /* \"#utility.yul\":9771:9781   */\n      gt\n        /* \"#utility.yul\":9768:9804   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":9784:9802   */\n      tag_392\n      tag_261\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":9768:9804   */\n    tag_391:\n        /* \"#utility.yul\":9620:9811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9817:10001   */\n    tag_262:\n        /* \"#utility.yul\":9916:9927   */\n      0x00\n        /* \"#utility.yul\":9950:9956   */\n      dup3\n        /* \"#utility.yul\":9945:9948   */\n      dup3\n        /* \"#utility.yul\":9938:9957   */\n      mstore\n        /* \"#utility.yul\":9990:9994   */\n      0x20\n        /* \"#utility.yul\":9985:9988   */\n      dup3\n        /* \"#utility.yul\":9981:9995   */\n      add\n        /* \"#utility.yul\":9966:9995   */\n      swap1\n      pop\n        /* \"#utility.yul\":9817:10001   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10007:10109   */\n    tag_263:\n        /* \"#utility.yul\":10076:10080   */\n      0x00\n        /* \"#utility.yul\":10099:10102   */\n      dup2\n        /* \"#utility.yul\":10091:10102   */\n      swap1\n      pop\n        /* \"#utility.yul\":10007:10109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10115:10223   */\n    tag_264:\n        /* \"#utility.yul\":10192:10216   */\n      tag_396\n        /* \"#utility.yul\":10210:10215   */\n      dup2\n        /* \"#utility.yul\":10192:10216   */\n      tag_249\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":10187:10190   */\n      dup3\n        /* \"#utility.yul\":10180:10217   */\n      mstore\n        /* \"#utility.yul\":10115:10223   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10229:10408   */\n    tag_265:\n        /* \"#utility.yul\":10298:10308   */\n      0x00\n        /* \"#utility.yul\":10319:10365   */\n      tag_398\n        /* \"#utility.yul\":10361:10364   */\n      dup4\n        /* \"#utility.yul\":10353:10359   */\n      dup4\n        /* \"#utility.yul\":10319:10365   */\n      tag_264\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":10397:10401   */\n      0x20\n        /* \"#utility.yul\":10392:10395   */\n      dup4\n        /* \"#utility.yul\":10388:10402   */\n      add\n        /* \"#utility.yul\":10374:10402   */\n      swap1\n      pop\n        /* \"#utility.yul\":10229:10408   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10414:10536   */\n    tag_266:\n        /* \"#utility.yul\":10466:10471   */\n      0x00\n        /* \"#utility.yul\":10491:10530   */\n      tag_400\n        /* \"#utility.yul\":10526:10528   */\n      0x20\n        /* \"#utility.yul\":10521:10524   */\n      dup5\n        /* \"#utility.yul\":10517:10529   */\n      add\n        /* \"#utility.yul\":10512:10515   */\n      dup5\n        /* \"#utility.yul\":10491:10530   */\n      tag_251\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":10482:10530   */\n      swap1\n      pop\n        /* \"#utility.yul\":10414:10536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10542:10657   */\n    tag_267:\n        /* \"#utility.yul\":10614:10618   */\n      0x00\n        /* \"#utility.yul\":10646:10650   */\n      0x20\n        /* \"#utility.yul\":10641:10644   */\n      dup3\n        /* \"#utility.yul\":10637:10651   */\n      add\n        /* \"#utility.yul\":10629:10651   */\n      swap1\n      pop\n        /* \"#utility.yul\":10542:10657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10693:11392   */\n    tag_268:\n        /* \"#utility.yul\":10822:10825   */\n      0x00\n        /* \"#utility.yul\":10845:10931   */\n      tag_403\n        /* \"#utility.yul\":10924:10930   */\n      dup4\n        /* \"#utility.yul\":10919:10922   */\n      dup6\n        /* \"#utility.yul\":10845:10931   */\n      tag_262\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":10838:10931   */\n      swap4\n      pop\n        /* \"#utility.yul\":10955:11013   */\n      tag_404\n        /* \"#utility.yul\":11007:11012   */\n      dup3\n        /* \"#utility.yul\":10955:11013   */\n      tag_263\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":11036:11043   */\n      dup1\n        /* \"#utility.yul\":11067:11068   */\n      0x00\n        /* \"#utility.yul\":11052:11367   */\n    tag_405:\n        /* \"#utility.yul\":11077:11083   */\n      dup6\n        /* \"#utility.yul\":11074:11075   */\n      dup2\n        /* \"#utility.yul\":11071:11084   */\n      lt\n        /* \"#utility.yul\":11052:11367   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":11147:11189   */\n      tag_408\n        /* \"#utility.yul\":11182:11188   */\n      dup3\n        /* \"#utility.yul\":11173:11180   */\n      dup5\n        /* \"#utility.yul\":11147:11189   */\n      tag_266\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":11209:11272   */\n      tag_409\n        /* \"#utility.yul\":11268:11271   */\n      dup9\n        /* \"#utility.yul\":11253:11266   */\n      dup3\n        /* \"#utility.yul\":11209:11272   */\n      tag_265\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":11202:11272   */\n      swap8\n      pop\n        /* \"#utility.yul\":11295:11357   */\n      tag_410\n        /* \"#utility.yul\":11350:11356   */\n      dup4\n        /* \"#utility.yul\":11295:11357   */\n      tag_267\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":11285:11357   */\n      swap3\n      pop\n        /* \"#utility.yul\":11112:11367   */\n      pop\n        /* \"#utility.yul\":11099:11100   */\n      0x01\n        /* \"#utility.yul\":11096:11097   */\n      dup2\n        /* \"#utility.yul\":11092:11101   */\n      add\n        /* \"#utility.yul\":11087:11101   */\n      swap1\n      pop\n        /* \"#utility.yul\":11052:11367   */\n      jump(tag_405)\n    tag_407:\n        /* \"#utility.yul\":11056:11070   */\n      pop\n        /* \"#utility.yul\":11383:11386   */\n      dup6\n        /* \"#utility.yul\":11376:11386   */\n      swap3\n      pop\n        /* \"#utility.yul\":10827:11392   */\n      pop\n      pop\n        /* \"#utility.yul\":10693:11392   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11398:11582   */\n    tag_269:\n        /* \"#utility.yul\":11497:11508   */\n      0x00\n        /* \"#utility.yul\":11531:11537   */\n      dup3\n        /* \"#utility.yul\":11526:11529   */\n      dup3\n        /* \"#utility.yul\":11519:11538   */\n      mstore\n        /* \"#utility.yul\":11571:11575   */\n      0x20\n        /* \"#utility.yul\":11566:11569   */\n      dup3\n        /* \"#utility.yul\":11562:11576   */\n      add\n        /* \"#utility.yul\":11547:11576   */\n      swap1\n      pop\n        /* \"#utility.yul\":11398:11582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11588:11705   */\n    tag_270:\n        /* \"#utility.yul\":11697:11698   */\n      0x00\n        /* \"#utility.yul\":11694:11695   */\n      dup1\n        /* \"#utility.yul\":11687:11699   */\n      revert\n        /* \"#utility.yul\":11711:11810   */\n    tag_271:\n        /* \"#utility.yul\":11796:11802   */\n      dup3\n        /* \"#utility.yul\":11791:11794   */\n      dup2\n        /* \"#utility.yul\":11786:11789   */\n      dup4\n        /* \"#utility.yul\":11773:11803   */\n      calldatacopy\n        /* \"#utility.yul\":11711:11810   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11846:12383   */\n    tag_272:\n        /* \"#utility.yul\":11974:11977   */\n      0x00\n        /* \"#utility.yul\":11995:12081   */\n      tag_415\n        /* \"#utility.yul\":12074:12080   */\n      dup4\n        /* \"#utility.yul\":12069:12072   */\n      dup6\n        /* \"#utility.yul\":11995:12081   */\n      tag_269\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":11988:12081   */\n      swap4\n      pop\n        /* \"#utility.yul\":12105:12171   */\n      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12097:12103   */\n      dup4\n        /* \"#utility.yul\":12094:12172   */\n      gt\n        /* \"#utility.yul\":12091:12256   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":12175:12254   */\n      tag_417\n      tag_270\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":12091:12256   */\n    tag_416:\n        /* \"#utility.yul\":12287:12291   */\n      0x20\n        /* \"#utility.yul\":12279:12285   */\n      dup4\n        /* \"#utility.yul\":12275:12292   */\n      mul\n        /* \"#utility.yul\":12265:12292   */\n      swap3\n      pop\n        /* \"#utility.yul\":12302:12345   */\n      tag_418\n        /* \"#utility.yul\":12338:12344   */\n      dup4\n        /* \"#utility.yul\":12333:12336   */\n      dup6\n        /* \"#utility.yul\":12326:12331   */\n      dup5\n        /* \"#utility.yul\":12302:12345   */\n      tag_271\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":12370:12376   */\n      dup3\n        /* \"#utility.yul\":12365:12368   */\n      dup5\n        /* \"#utility.yul\":12361:12377   */\n      add\n        /* \"#utility.yul\":12354:12377   */\n      swap1\n      pop\n        /* \"#utility.yul\":11846:12383   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12389:13063   */\n    tag_138:\n        /* \"#utility.yul\":12630:12634   */\n      0x00\n        /* \"#utility.yul\":12668:12670   */\n      0x40\n        /* \"#utility.yul\":12657:12666   */\n      dup3\n        /* \"#utility.yul\":12653:12671   */\n      add\n        /* \"#utility.yul\":12645:12671   */\n      swap1\n      pop\n        /* \"#utility.yul\":12717:12726   */\n      dup2\n        /* \"#utility.yul\":12711:12715   */\n      dup2\n        /* \"#utility.yul\":12707:12727   */\n      sub\n        /* \"#utility.yul\":12703:12704   */\n      0x00\n        /* \"#utility.yul\":12692:12701   */\n      dup4\n        /* \"#utility.yul\":12688:12705   */\n      add\n        /* \"#utility.yul\":12681:12728   */\n      mstore\n        /* \"#utility.yul\":12745:12863   */\n      tag_420\n        /* \"#utility.yul\":12858:12862   */\n      dup2\n        /* \"#utility.yul\":12849:12855   */\n      dup7\n        /* \"#utility.yul\":12841:12847   */\n      dup9\n        /* \"#utility.yul\":12745:12863   */\n      tag_268\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":12737:12863   */\n      swap1\n      pop\n        /* \"#utility.yul\":12910:12919   */\n      dup2\n        /* \"#utility.yul\":12904:12908   */\n      dup2\n        /* \"#utility.yul\":12900:12920   */\n      sub\n        /* \"#utility.yul\":12895:12897   */\n      0x20\n        /* \"#utility.yul\":12884:12893   */\n      dup4\n        /* \"#utility.yul\":12880:12898   */\n      add\n        /* \"#utility.yul\":12873:12921   */\n      mstore\n        /* \"#utility.yul\":12938:13056   */\n      tag_421\n        /* \"#utility.yul\":13051:13055   */\n      dup2\n        /* \"#utility.yul\":13042:13048   */\n      dup5\n        /* \"#utility.yul\":13034:13040   */\n      dup7\n        /* \"#utility.yul\":12938:13056   */\n      tag_272\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":12930:13056   */\n      swap1\n      pop\n        /* \"#utility.yul\":12389:13063   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13069:13187   */\n    tag_273:\n        /* \"#utility.yul\":13156:13180   */\n      tag_423\n        /* \"#utility.yul\":13174:13179   */\n      dup2\n        /* \"#utility.yul\":13156:13180   */\n      tag_249\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":13151:13154   */\n      dup3\n        /* \"#utility.yul\":13144:13181   */\n      mstore\n        /* \"#utility.yul\":13069:13187   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13193:13857   */\n    tag_153:\n        /* \"#utility.yul\":13398:13402   */\n      0x00\n        /* \"#utility.yul\":13436:13439   */\n      0xa0\n        /* \"#utility.yul\":13425:13434   */\n      dup3\n        /* \"#utility.yul\":13421:13440   */\n      add\n        /* \"#utility.yul\":13413:13440   */\n      swap1\n      pop\n        /* \"#utility.yul\":13450:13521   */\n      tag_425\n        /* \"#utility.yul\":13518:13519   */\n      0x00\n        /* \"#utility.yul\":13507:13516   */\n      dup4\n        /* \"#utility.yul\":13503:13520   */\n      add\n        /* \"#utility.yul\":13494:13500   */\n      dup9\n        /* \"#utility.yul\":13450:13521   */\n      tag_273\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":13531:13603   */\n      tag_426\n        /* \"#utility.yul\":13599:13601   */\n      0x20\n        /* \"#utility.yul\":13588:13597   */\n      dup4\n        /* \"#utility.yul\":13584:13602   */\n      add\n        /* \"#utility.yul\":13575:13581   */\n      dup8\n        /* \"#utility.yul\":13531:13603   */\n      tag_273\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":13613:13685   */\n      tag_427\n        /* \"#utility.yul\":13681:13683   */\n      0x40\n        /* \"#utility.yul\":13670:13679   */\n      dup4\n        /* \"#utility.yul\":13666:13684   */\n      add\n        /* \"#utility.yul\":13657:13663   */\n      dup7\n        /* \"#utility.yul\":13613:13685   */\n      tag_273\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":13695:13767   */\n      tag_428\n        /* \"#utility.yul\":13763:13765   */\n      0x60\n        /* \"#utility.yul\":13752:13761   */\n      dup4\n        /* \"#utility.yul\":13748:13766   */\n      add\n        /* \"#utility.yul\":13739:13745   */\n      dup6\n        /* \"#utility.yul\":13695:13767   */\n      tag_253\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":13777:13850   */\n      tag_429\n        /* \"#utility.yul\":13845:13848   */\n      0x80\n        /* \"#utility.yul\":13834:13843   */\n      dup4\n        /* \"#utility.yul\":13830:13849   */\n      add\n        /* \"#utility.yul\":13821:13827   */\n      dup5\n        /* \"#utility.yul\":13777:13850   */\n      tag_253\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":13193:13857   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13863:14305   */\n    tag_182:\n        /* \"#utility.yul\":14012:14016   */\n      0x00\n        /* \"#utility.yul\":14050:14052   */\n      0x60\n        /* \"#utility.yul\":14039:14048   */\n      dup3\n        /* \"#utility.yul\":14035:14053   */\n      add\n        /* \"#utility.yul\":14027:14053   */\n      swap1\n      pop\n        /* \"#utility.yul\":14063:14134   */\n      tag_431\n        /* \"#utility.yul\":14131:14132   */\n      0x00\n        /* \"#utility.yul\":14120:14129   */\n      dup4\n        /* \"#utility.yul\":14116:14133   */\n      add\n        /* \"#utility.yul\":14107:14113   */\n      dup7\n        /* \"#utility.yul\":14063:14134   */\n      tag_273\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":14144:14216   */\n      tag_432\n        /* \"#utility.yul\":14212:14214   */\n      0x20\n        /* \"#utility.yul\":14201:14210   */\n      dup4\n        /* \"#utility.yul\":14197:14215   */\n      add\n        /* \"#utility.yul\":14188:14194   */\n      dup6\n        /* \"#utility.yul\":14144:14216   */\n      tag_273\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":14226:14298   */\n      tag_433\n        /* \"#utility.yul\":14294:14296   */\n      0x40\n        /* \"#utility.yul\":14283:14292   */\n      dup4\n        /* \"#utility.yul\":14279:14297   */\n      add\n        /* \"#utility.yul\":14270:14276   */\n      dup5\n        /* \"#utility.yul\":14226:14298   */\n      tag_253\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":13863:14305   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14311:14533   */\n    tag_187:\n        /* \"#utility.yul\":14404:14408   */\n      0x00\n        /* \"#utility.yul\":14442:14444   */\n      0x20\n        /* \"#utility.yul\":14431:14440   */\n      dup3\n        /* \"#utility.yul\":14427:14445   */\n      add\n        /* \"#utility.yul\":14419:14445   */\n      swap1\n      pop\n        /* \"#utility.yul\":14455:14526   */\n      tag_435\n        /* \"#utility.yul\":14523:14524   */\n      0x00\n        /* \"#utility.yul\":14512:14521   */\n      dup4\n        /* \"#utility.yul\":14508:14525   */\n      add\n        /* \"#utility.yul\":14499:14505   */\n      dup5\n        /* \"#utility.yul\":14455:14526   */\n      tag_273\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":14311:14533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14539:14871   */\n    tag_199:\n        /* \"#utility.yul\":14660:14664   */\n      0x00\n        /* \"#utility.yul\":14698:14700   */\n      0x40\n        /* \"#utility.yul\":14687:14696   */\n      dup3\n        /* \"#utility.yul\":14683:14701   */\n      add\n        /* \"#utility.yul\":14675:14701   */\n      swap1\n      pop\n        /* \"#utility.yul\":14711:14782   */\n      tag_437\n        /* \"#utility.yul\":14779:14780   */\n      0x00\n        /* \"#utility.yul\":14768:14777   */\n      dup4\n        /* \"#utility.yul\":14764:14781   */\n      add\n        /* \"#utility.yul\":14755:14761   */\n      dup6\n        /* \"#utility.yul\":14711:14782   */\n      tag_273\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":14792:14864   */\n      tag_438\n        /* \"#utility.yul\":14860:14862   */\n      0x20\n        /* \"#utility.yul\":14849:14858   */\n      dup4\n        /* \"#utility.yul\":14845:14863   */\n      add\n        /* \"#utility.yul\":14836:14842   */\n      dup5\n        /* \"#utility.yul\":14792:14864   */\n      tag_247\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":14539:14871   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14877:14993   */\n    tag_274:\n        /* \"#utility.yul\":14947:14968   */\n      tag_440\n        /* \"#utility.yul\":14962:14967   */\n      dup2\n        /* \"#utility.yul\":14947:14968   */\n      tag_242\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":14940:14945   */\n      dup2\n        /* \"#utility.yul\":14937:14969   */\n      eq\n        /* \"#utility.yul\":14927:14987   */\n      tag_441\n      jumpi\n        /* \"#utility.yul\":14983:14984   */\n      0x00\n        /* \"#utility.yul\":14980:14981   */\n      dup1\n        /* \"#utility.yul\":14973:14985   */\n      revert\n        /* \"#utility.yul\":14927:14987   */\n    tag_441:\n        /* \"#utility.yul\":14877:14993   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14999:15136   */\n    tag_275:\n        /* \"#utility.yul\":15053:15058   */\n      0x00\n        /* \"#utility.yul\":15084:15090   */\n      dup2\n        /* \"#utility.yul\":15078:15091   */\n      mload\n        /* \"#utility.yul\":15069:15091   */\n      swap1\n      pop\n        /* \"#utility.yul\":15100:15130   */\n      tag_443\n        /* \"#utility.yul\":15124:15129   */\n      dup2\n        /* \"#utility.yul\":15100:15130   */\n      tag_274\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":14999:15136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15142:15487   */\n    tag_205:\n        /* \"#utility.yul\":15209:15215   */\n      0x00\n        /* \"#utility.yul\":15258:15260   */\n      0x20\n        /* \"#utility.yul\":15246:15255   */\n      dup3\n        /* \"#utility.yul\":15237:15244   */\n      dup5\n        /* \"#utility.yul\":15233:15256   */\n      sub\n        /* \"#utility.yul\":15229:15261   */\n      slt\n        /* \"#utility.yul\":15226:15345   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":15264:15343   */\n      tag_446\n      tag_237\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":15226:15345   */\n    tag_445:\n        /* \"#utility.yul\":15384:15385   */\n      0x00\n        /* \"#utility.yul\":15409:15470   */\n      tag_447\n        /* \"#utility.yul\":15462:15469   */\n      dup5\n        /* \"#utility.yul\":15453:15459   */\n      dup3\n        /* \"#utility.yul\":15442:15451   */\n      dup6\n        /* \"#utility.yul\":15438:15460   */\n      add\n        /* \"#utility.yul\":15409:15470   */\n      tag_275\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":15399:15470   */\n      swap2\n      pop\n        /* \"#utility.yul\":15355:15480   */\n      pop\n        /* \"#utility.yul\":15142:15487   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15493:15825   */\n    tag_211:\n        /* \"#utility.yul\":15614:15618   */\n      0x00\n        /* \"#utility.yul\":15652:15654   */\n      0x40\n        /* \"#utility.yul\":15641:15650   */\n      dup3\n        /* \"#utility.yul\":15637:15655   */\n      add\n        /* \"#utility.yul\":15629:15655   */\n      swap1\n      pop\n        /* \"#utility.yul\":15665:15736   */\n      tag_449\n        /* \"#utility.yul\":15733:15734   */\n      0x00\n        /* \"#utility.yul\":15722:15731   */\n      dup4\n        /* \"#utility.yul\":15718:15735   */\n      add\n        /* \"#utility.yul\":15709:15715   */\n      dup6\n        /* \"#utility.yul\":15665:15736   */\n      tag_273\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":15746:15818   */\n      tag_450\n        /* \"#utility.yul\":15814:15816   */\n      0x20\n        /* \"#utility.yul\":15803:15812   */\n      dup4\n        /* \"#utility.yul\":15799:15817   */\n      add\n        /* \"#utility.yul\":15790:15796   */\n      dup5\n        /* \"#utility.yul\":15746:15818   */\n      tag_253\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":15493:15825   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15831:15929   */\n    tag_276:\n        /* \"#utility.yul\":15882:15888   */\n      0x00\n        /* \"#utility.yul\":15916:15921   */\n      dup2\n        /* \"#utility.yul\":15910:15922   */\n      mload\n        /* \"#utility.yul\":15900:15922   */\n      swap1\n      pop\n        /* \"#utility.yul\":15831:15929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15935:16082   */\n    tag_277:\n        /* \"#utility.yul\":16036:16047   */\n      0x00\n        /* \"#utility.yul\":16073:16076   */\n      dup2\n        /* \"#utility.yul\":16058:16076   */\n      swap1\n      pop\n        /* \"#utility.yul\":15935:16082   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16088:16227   */\n    tag_278:\n        /* \"#utility.yul\":16177:16183   */\n      dup3\n        /* \"#utility.yul\":16172:16175   */\n      dup2\n        /* \"#utility.yul\":16167:16170   */\n      dup4\n        /* \"#utility.yul\":16161:16184   */\n      mcopy\n        /* \"#utility.yul\":16218:16219   */\n      0x00\n        /* \"#utility.yul\":16209:16215   */\n      dup4\n        /* \"#utility.yul\":16204:16207   */\n      dup4\n        /* \"#utility.yul\":16200:16216   */\n      add\n        /* \"#utility.yul\":16193:16220   */\n      mstore\n        /* \"#utility.yul\":16088:16227   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16233:16619   */\n    tag_279:\n        /* \"#utility.yul\":16337:16340   */\n      0x00\n        /* \"#utility.yul\":16365:16403   */\n      tag_455\n        /* \"#utility.yul\":16397:16402   */\n      dup3\n        /* \"#utility.yul\":16365:16403   */\n      tag_276\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":16419:16507   */\n      tag_456\n        /* \"#utility.yul\":16500:16506   */\n      dup2\n        /* \"#utility.yul\":16495:16498   */\n      dup6\n        /* \"#utility.yul\":16419:16507   */\n      tag_277\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":16412:16507   */\n      swap4\n      pop\n        /* \"#utility.yul\":16516:16581   */\n      tag_457\n        /* \"#utility.yul\":16574:16580   */\n      dup2\n        /* \"#utility.yul\":16569:16572   */\n      dup6\n        /* \"#utility.yul\":16562:16566   */\n      0x20\n        /* \"#utility.yul\":16555:16560   */\n      dup7\n        /* \"#utility.yul\":16551:16567   */\n      add\n        /* \"#utility.yul\":16516:16581   */\n      tag_278\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":16606:16612   */\n      dup1\n        /* \"#utility.yul\":16601:16604   */\n      dup5\n        /* \"#utility.yul\":16597:16613   */\n      add\n        /* \"#utility.yul\":16590:16613   */\n      swap2\n      pop\n        /* \"#utility.yul\":16341:16619   */\n      pop\n        /* \"#utility.yul\":16233:16619   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16625:16896   */\n    tag_219:\n        /* \"#utility.yul\":16755:16758   */\n      0x00\n        /* \"#utility.yul\":16777:16870   */\n      tag_459\n        /* \"#utility.yul\":16866:16869   */\n      dup3\n        /* \"#utility.yul\":16857:16863   */\n      dup5\n        /* \"#utility.yul\":16777:16870   */\n      tag_279\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":16770:16870   */\n      swap2\n      pop\n        /* \"#utility.yul\":16887:16890   */\n      dup2\n        /* \"#utility.yul\":16880:16890   */\n      swap1\n      pop\n        /* \"#utility.yul\":16625:16896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200efc558f3c32cadfd595e15860d561b374780583cb2e340dea351c92cdc69aef64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1087": {
									"entryPoint": null,
									"id": 1087,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1282": {
									"entryPoint": null,
									"id": 1282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 96,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1047": {
									"entryPoint": 441,
									"id": 1047,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 341,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060015f819055506100295f801b3361006060201b60201c565b5061005a7f915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c3361006060201b60201c565b506101c0565b5f610071838361015560201b60201c565b61014b576001805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506100e86101b960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061014f565b5f90505b92915050565b5f60015f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b611cb2806101cd5f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c806391d1485411610095578063d547741f11610064578063d547741f146102ba578063da46098c146102d6578063e5994905146102f2578063f5537ede1461030e576100fe565b806391d1485414610220578063927da10514610250578063a217fddf14610280578063cdb33b811461029e576100fe565b806368a37ae8116100d157806368a37ae81461019a57806368c4ac26146101b85780636d69fcaf146101e85780637631919014610204576100fe565b806301ffc9a714610102578063248a9ca3146101325780632f2ff15d1461016257806336568abe1461017e575b5f80fd5b61011c6004803603810190610117919061147c565b61032a565b60405161012991906114c1565b60405180910390f35b61014c6004803603810190610147919061150d565b6103a3565b6040516101599190611547565b60405180910390f35b61017c600480360381019061017791906115ba565b6103c0565b005b610198600480360381019061019391906115ba565b6103e2565b005b6101a261045d565b6040516101af9190611547565b60405180910390f35b6101d260048036038101906101cd91906115f8565b610481565b6040516101df91906114c1565b60405180910390f35b61020260048036038101906101fd91906115f8565b61049e565b005b61021e600480360381019061021991906115f8565b610564565b005b61023a600480360381019061023591906115ba565b610629565b60405161024791906114c1565b60405180910390f35b61026a60048036038101906102659190611623565b61068d565b604051610277919061168b565b60405180910390f35b61028861074b565b6040516102959190611547565b60405180910390f35b6102b860048036038101906102b3919061175a565b610751565b005b6102d460048036038101906102cf91906115ba565b6108ea565b005b6102f060048036038101906102eb9190611815565b61090c565b005b61030c60048036038101906103079190611865565b610a45565b005b61032860048036038101906103239190611815565b610c26565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061039c575061039b82610c47565b5b9050919050565b5f60015f8381526020019081526020015f20600101549050919050565b6103c9826103a3565b6103d281610cb0565b6103dc8383610cc4565b50505050565b6103ea610dad565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461044e576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104588282610db4565b505050565b7f915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c81565b6002602052805f5260405f205f915054906101000a900460ff1681565b7f915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c6104c881610cb0565b600160025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a460405160405180910390a25050565b7f915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c61058e81610cb0565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd360405160405180910390a25050565b5f60015f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490509392505050565b5f801b81565b610759610e9e565b818190508585905014610798576040517fa9854bc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f805b838390508110156107da578383828181106107b9576107b86118c9565b5b90506020020135826107cb9190611923565b9150808060010191505061079b565b506108083330838773ffffffffffffffffffffffffffffffffffffffff16610ee2909392919063ffffffff16565b5f5b8686905081101561086e576108613088888481811061082c5761082b6118c9565b5b905060200201602081019061084191906115f8565b87878786818110610855576108546118c9565b5b90506020020135610f64565b808060010191505061080a565b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6f48f5cfe672b48c8d014ecf4ecb7cdd8a66519dc4e331f0c7e95f1f2183a810888887876040516108d29493929190611a8a565b60405180910390a3506108e3611102565b5050505050565b6108f3826103a3565b6108fc81610cb0565b6109068383610db4565b50505050565b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8a35f50fa7149c607bf92648069a0d9593c88f1e12f1abd0a0481a4a959b068184604051610a38919061168b565b60405180910390a4505050565b610a4d610e9e565b5f60035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610b515784338484846040517f51750bc7000000000000000000000000000000000000000000000000000000008152600401610b48959493929190611ad2565b60405180910390fd5b81810360035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610c1785858585610f64565b50610c20611102565b50505050565b610c2e610e9e565b610c3a33848484610f64565b610c42611102565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610cc181610cbc610dad565b61110b565b50565b5f610ccf8383610629565b610da3576001805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610d40610dad565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610da7565b5f90505b92915050565b5f33905090565b5f610dbf8383610629565b15610e94575f60015f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610e31610dad565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610e98565b5f90505b92915050565b60025f5403610ed9576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b610f5e848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610f1793929190611b23565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061115c565b50505050565b60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610fef57816040517fbf16aab6000000000000000000000000000000000000000000000000000000008152600401610fe69190611b58565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036110525761104d83828473ffffffffffffffffffffffffffffffffffffffff166111f19092919063ffffffff16565b611080565b61107f8484838573ffffffffffffffffffffffffffffffffffffffff16610ee2909392919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f9af266b6ca4909f988dc948fb50ad15153abbe525351881bad4fa858be96515c846040516110f4919061168b565b60405180910390a450505050565b60015f81905550565b6111158282610629565b6111585780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161114f929190611b71565b60405180910390fd5b5050565b5f611186828473ffffffffffffffffffffffffffffffffffffffff1661127090919063ffffffff16565b90505f8151141580156111aa5750808060200190518101906111a89190611bc2565b155b156111ec57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016111e39190611b58565b60405180910390fd5b505050565b61126b838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611224929190611bed565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061115c565b505050565b606061127d83835f611285565b905092915050565b6060814710156112cc57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016112c39190611b58565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516112f49190611c66565b5f6040518083038185875af1925050503d805f811461132e576040519150601f19603f3d011682016040523d82523d5f602084013e611333565b606091505b509150915061134386838361134e565b925050509392505050565b6060826113635761135e826113db565b6113d3565b5f825114801561138957505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156113cb57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016113c29190611b58565b60405180910390fd5b8190506113d4565b5b9392505050565b5f815111156113ed5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61145b81611427565b8114611465575f80fd5b50565b5f8135905061147681611452565b92915050565b5f602082840312156114915761149061141f565b5b5f61149e84828501611468565b91505092915050565b5f8115159050919050565b6114bb816114a7565b82525050565b5f6020820190506114d45f8301846114b2565b92915050565b5f819050919050565b6114ec816114da565b81146114f6575f80fd5b50565b5f81359050611507816114e3565b92915050565b5f602082840312156115225761152161141f565b5b5f61152f848285016114f9565b91505092915050565b611541816114da565b82525050565b5f60208201905061155a5f830184611538565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61158982611560565b9050919050565b6115998161157f565b81146115a3575f80fd5b50565b5f813590506115b481611590565b92915050565b5f80604083850312156115d0576115cf61141f565b5b5f6115dd858286016114f9565b92505060206115ee858286016115a6565b9150509250929050565b5f6020828403121561160d5761160c61141f565b5b5f61161a848285016115a6565b91505092915050565b5f805f6060848603121561163a5761163961141f565b5b5f611647868287016115a6565b9350506020611658868287016115a6565b9250506040611669868287016115a6565b9150509250925092565b5f819050919050565b61168581611673565b82525050565b5f60208201905061169e5f83018461167c565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126116c5576116c46116a4565b5b8235905067ffffffffffffffff8111156116e2576116e16116a8565b5b6020830191508360208202830111156116fe576116fd6116ac565b5b9250929050565b5f8083601f84011261171a576117196116a4565b5b8235905067ffffffffffffffff811115611737576117366116a8565b5b602083019150836020820283011115611753576117526116ac565b5b9250929050565b5f805f805f606086880312156117735761177261141f565b5b5f86013567ffffffffffffffff8111156117905761178f611423565b5b61179c888289016116b0565b955095505060206117af888289016115a6565b935050604086013567ffffffffffffffff8111156117d0576117cf611423565b5b6117dc88828901611705565b92509250509295509295909350565b6117f481611673565b81146117fe575f80fd5b50565b5f8135905061180f816117eb565b92915050565b5f805f6060848603121561182c5761182b61141f565b5b5f611839868287016115a6565b935050602061184a868287016115a6565b925050604061185b86828701611801565b9150509250925092565b5f805f806080858703121561187d5761187c61141f565b5b5f61188a878288016115a6565b945050602061189b878288016115a6565b93505060406118ac878288016115a6565b92505060606118bd87828801611801565b91505092959194509250565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61192d82611673565b915061193883611673565b92508282019050808211156119505761194f6118f6565b5b92915050565b5f82825260208201905092915050565b5f819050919050565b6119788161157f565b82525050565b5f611989838361196f565b60208301905092915050565b5f6119a360208401846115a6565b905092915050565b5f602082019050919050565b5f6119c28385611956565b93506119cd82611966565b805f5b85811015611a05576119e28284611995565b6119ec888261197e565b97506119f7836119ab565b9250506001810190506119d0565b5085925050509392505050565b5f82825260208201905092915050565b5f80fd5b82818337505050565b5f611a3a8385611a12565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611a6d57611a6c611a22565b5b602083029250611a7e838584611a26565b82840190509392505050565b5f6040820190508181035f830152611aa38186886119b7565b90508181036020830152611ab8818486611a2f565b905095945050505050565b611acc8161157f565b82525050565b5f60a082019050611ae55f830188611ac3565b611af26020830187611ac3565b611aff6040830186611ac3565b611b0c606083018561167c565b611b19608083018461167c565b9695505050505050565b5f606082019050611b365f830186611ac3565b611b436020830185611ac3565b611b50604083018461167c565b949350505050565b5f602082019050611b6b5f830184611ac3565b92915050565b5f604082019050611b845f830185611ac3565b611b916020830184611538565b9392505050565b611ba1816114a7565b8114611bab575f80fd5b50565b5f81519050611bbc81611b98565b92915050565b5f60208284031215611bd757611bd661141f565b5b5f611be484828501611bae565b91505092915050565b5f604082019050611c005f830185611ac3565b611c0d602083018461167c565b9392505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f611c4082611c14565b611c4a8185611c1e565b9350611c5a818560208601611c28565b80840191505092915050565b5f611c718284611c36565b91508190509291505056fea26469706673582212200efc558f3c32cadfd595e15860d561b374780583cb2e340dea351c92cdc69aef64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH2 0x29 PUSH0 DUP1 SHL CALLER PUSH2 0x60 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x5A PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C CALLER PUSH2 0x60 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1C0 JUMP JUMPDEST PUSH0 PUSH2 0x71 DUP4 DUP4 PUSH2 0x155 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x14B JUMPI PUSH1 0x1 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE8 PUSH2 0x1B9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x14F JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1CB2 DUP1 PUSH2 0x1CD PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xDA46098C EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xE5994905 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xF5537EDE EQ PUSH2 0x30E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x927DA105 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xCDB33B81 EQ PUSH2 0x29E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x68A37AE8 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x68A37AE8 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x68C4AC26 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x6D69FCAF EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x76319190 EQ PUSH2 0x204 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x17E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x32A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A2 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x1865 JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x328 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0xC26 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x39C JUMPI POP PUSH2 0x39B DUP3 PUSH2 0xC47 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C9 DUP3 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x3D2 DUP2 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x3DC DUP4 DUP4 PUSH2 0xCC4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3EA PUSH2 0xDAD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x44E JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x458 DUP3 DUP3 PUSH2 0xDB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C PUSH2 0x4C8 DUP2 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x784C8F4DBF0FFEDD6E72C76501C545A70F8B203B30A26CE542BF92BA87C248A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C PUSH2 0x58E DUP2 PUSH2 0xCB0 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C910B69FE65A61F7531B9C5042B2329CA7179C77290AA7E2EB3AFA3C8511FD3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x759 PUSH2 0xE9E JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9854BC900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x7DA JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x7B9 JUMPI PUSH2 0x7B8 PUSH2 0x18C9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x79B JUMP JUMPDEST POP PUSH2 0x808 CALLER ADDRESS DUP4 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0x86E JUMPI PUSH2 0x861 ADDRESS DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x82C JUMPI PUSH2 0x82B PUSH2 0x18C9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x841 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST DUP8 DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x855 JUMPI PUSH2 0x854 PUSH2 0x18C9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xF64 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x80A JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6F48F5CFE672B48C8D014ECF4ECB7CDD8A66519DC4E331F0C7E95F1F2183A810 DUP9 DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x8D2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x8E3 PUSH2 0x1102 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8F3 DUP3 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x8FC DUP2 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x906 DUP4 DUP4 PUSH2 0xDB4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8A35F50FA7149C607BF92648069A0D9593C88F1E12F1ABD0A0481A4A959B0681 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA38 SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xE9E JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB51 JUMPI DUP5 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x51750BC700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC17 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF64 JUMP JUMPDEST POP PUSH2 0xC20 PUSH2 0x1102 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC2E PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xC3A CALLER DUP5 DUP5 DUP5 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0xC42 PUSH2 0x1102 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC1 DUP2 PUSH2 0xCBC PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x110B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xCCF DUP4 DUP4 PUSH2 0x629 JUMP JUMPDEST PUSH2 0xDA3 JUMPI PUSH1 0x1 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD40 PUSH2 0xDAD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xDA7 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xDBF DUP4 DUP4 PUSH2 0x629 JUMP JUMPDEST ISZERO PUSH2 0xE94 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE31 PUSH2 0xDAD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xE98 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xED9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xF5E DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF17 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x115C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFEF JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE6 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1052 JUMPI PUSH2 0x104D DUP4 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11F1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH2 0x107F DUP5 DUP5 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9AF266B6CA4909F988DC948FB50AD15153ABBE525351881BAD4FA858BE96515C DUP5 PUSH1 0x40 MLOAD PUSH2 0x10F4 SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1115 DUP3 DUP3 PUSH2 0x629 JUMP JUMPDEST PUSH2 0x1158 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114F SWAP3 SWAP2 SWAP1 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1186 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x11AA JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x11A8 SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x11EC JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E3 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x126B DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1224 SWAP3 SWAP2 SWAP1 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x115C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x127D DUP4 DUP4 PUSH0 PUSH2 0x1285 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x12CC JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C3 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x132E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1333 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1343 DUP7 DUP4 DUP4 PUSH2 0x134E JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1363 JUMPI PUSH2 0x135E DUP3 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0x13D3 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1389 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x13CB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C2 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x13D4 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x13ED JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145B DUP2 PUSH2 0x1427 JUMP JUMPDEST DUP2 EQ PUSH2 0x1465 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1476 DUP2 PUSH2 0x1452 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1491 JUMPI PUSH2 0x1490 PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x149E DUP5 DUP3 DUP6 ADD PUSH2 0x1468 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BB DUP2 PUSH2 0x14A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D4 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EC DUP2 PUSH2 0x14DA JUMP JUMPDEST DUP2 EQ PUSH2 0x14F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1507 DUP2 PUSH2 0x14E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1522 JUMPI PUSH2 0x1521 PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x152F DUP5 DUP3 DUP6 ADD PUSH2 0x14F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1541 DUP2 PUSH2 0x14DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155A PUSH0 DUP4 ADD DUP5 PUSH2 0x1538 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1589 DUP3 PUSH2 0x1560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1599 DUP2 PUSH2 0x157F JUMP JUMPDEST DUP2 EQ PUSH2 0x15A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15B4 DUP2 PUSH2 0x1590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D0 JUMPI PUSH2 0x15CF PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15DD DUP6 DUP3 DUP7 ADD PUSH2 0x14F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15EE DUP6 DUP3 DUP7 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x160D JUMPI PUSH2 0x160C PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x161A DUP5 DUP3 DUP6 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1647 DUP7 DUP3 DUP8 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1658 DUP7 DUP3 DUP8 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1669 DUP7 DUP3 DUP8 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1685 DUP2 PUSH2 0x1673 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x169E PUSH0 DUP4 ADD DUP5 PUSH2 0x167C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x16C5 JUMPI PUSH2 0x16C4 PUSH2 0x16A4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E2 JUMPI PUSH2 0x16E1 PUSH2 0x16A8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x16FE JUMPI PUSH2 0x16FD PUSH2 0x16AC JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x171A JUMPI PUSH2 0x1719 PUSH2 0x16A4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1737 JUMPI PUSH2 0x1736 PUSH2 0x16A8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1753 JUMPI PUSH2 0x1752 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1773 JUMPI PUSH2 0x1772 PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1790 JUMPI PUSH2 0x178F PUSH2 0x1423 JUMP JUMPDEST JUMPDEST PUSH2 0x179C DUP9 DUP3 DUP10 ADD PUSH2 0x16B0 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x17AF DUP9 DUP3 DUP10 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17D0 JUMPI PUSH2 0x17CF PUSH2 0x1423 JUMP JUMPDEST JUMPDEST PUSH2 0x17DC DUP9 DUP3 DUP10 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x17F4 DUP2 PUSH2 0x1673 JUMP JUMPDEST DUP2 EQ PUSH2 0x17FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180F DUP2 PUSH2 0x17EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x182C JUMPI PUSH2 0x182B PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1839 DUP7 DUP3 DUP8 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x184A DUP7 DUP3 DUP8 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x185B DUP7 DUP3 DUP8 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x187D JUMPI PUSH2 0x187C PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x188A DUP8 DUP3 DUP9 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x189B DUP8 DUP3 DUP9 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18AC DUP8 DUP3 DUP9 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x18BD DUP8 DUP3 DUP9 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x192D DUP3 PUSH2 0x1673 JUMP JUMPDEST SWAP2 POP PUSH2 0x1938 DUP4 PUSH2 0x1673 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1950 JUMPI PUSH2 0x194F PUSH2 0x18F6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1978 DUP2 PUSH2 0x157F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1989 DUP4 DUP4 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19A3 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19C2 DUP4 DUP6 PUSH2 0x1956 JUMP JUMPDEST SWAP4 POP PUSH2 0x19CD DUP3 PUSH2 0x1966 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1A05 JUMPI PUSH2 0x19E2 DUP3 DUP5 PUSH2 0x1995 JUMP JUMPDEST PUSH2 0x19EC DUP9 DUP3 PUSH2 0x197E JUMP JUMPDEST SWAP8 POP PUSH2 0x19F7 DUP4 PUSH2 0x19AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x19D0 JUMP JUMPDEST POP DUP6 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3A DUP4 DUP6 PUSH2 0x1A12 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1A6D JUMPI PUSH2 0x1A6C PUSH2 0x1A22 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0x1A7E DUP4 DUP6 DUP5 PUSH2 0x1A26 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AA3 DUP2 DUP7 DUP9 PUSH2 0x19B7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1AB8 DUP2 DUP5 DUP7 PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1ACC DUP2 PUSH2 0x157F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1AE5 PUSH0 DUP4 ADD DUP9 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x1AF2 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x1AFF PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x1B0C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x167C JUMP JUMPDEST PUSH2 0x1B19 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x167C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B36 PUSH0 DUP4 ADD DUP7 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x1B43 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x1B50 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x167C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6B PUSH0 DUP4 ADD DUP5 PUSH2 0x1AC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B84 PUSH0 DUP4 ADD DUP6 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x1B91 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1538 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1BA1 DUP2 PUSH2 0x14A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BAB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BBC DUP2 PUSH2 0x1B98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BD7 JUMPI PUSH2 0x1BD6 PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BE4 DUP5 DUP3 DUP6 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C00 PUSH0 DUP4 ADD DUP6 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x1C0D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x167C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C40 DUP3 PUSH2 0x1C14 JUMP JUMPDEST PUSH2 0x1C4A DUP2 DUP6 PUSH2 0x1C1E JUMP JUMPDEST SWAP4 POP PUSH2 0x1C5A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C28 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C71 DUP3 DUP5 PUSH2 0x1C36 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xFC SSTORE DUP16 EXTCODECOPY ORIGIN 0xCA 0xDF 0xD5 SWAP6 0xE1 PC PUSH1 0xD5 PUSH2 0xB374 PUSH25 0x583CB2E340DEA351C92CDC69AEF64736F6C634300081A0033 ",
							"sourceMap": "465:5375:10:-:0;;;1648:126;;;;;;;;;;1713:1:7;1917:7;:21;;;;1672:42:10;2232:4:0;1683:18:10;;1703:10;1672;;;:42;;:::i;:::-;;1724:43;646:32;1756:10;1724;;;:43;;:::i;:::-;;465:5375;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;465:5375:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 1867,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TRANSFER_ADMIN_ROLE_1194": {
									"entryPoint": 1117,
									"id": 1194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_732": {
									"entryPoint": 4444,
									"id": 732,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 4363,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 3248,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 3268,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1047": {
									"entryPoint": 3501,
									"id": 1047,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1122": {
									"entryPoint": 4354,
									"id": 1122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1114": {
									"entryPoint": 3742,
									"id": 1114,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1034": {
									"entryPoint": 5083,
									"id": 1034,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 3508,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_transferToken_1605": {
									"entryPoint": 3940,
									"id": 1605,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@addSupportedToken_1530": {
									"entryPoint": 1182,
									"id": 1530,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_1510": {
									"entryPoint": 1677,
									"id": 1510,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@batchTransferToken_1459": {
									"entryPoint": 1873,
									"id": 1459,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@functionCallWithValue_902": {
									"entryPoint": 4741,
									"id": 902,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_856": {
									"entryPoint": 4720,
									"id": 856,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 931,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 960,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1577,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@removeSupportedToken_1550": {
									"entryPoint": 1380,
									"id": 1550,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_189": {
									"entryPoint": 994,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 2282,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_569": {
									"entryPoint": 3810,
									"id": 569,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_542": {
									"entryPoint": 4593,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setAllowance_1489": {
									"entryPoint": 2316,
									"id": 1489,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportedTokens_1198": {
									"entryPoint": 1153,
									"id": 1198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1157": {
									"entryPoint": 3143,
									"id": 1157,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 810,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferTokenFrom_1364": {
									"entryPoint": 2629,
									"id": 1364,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@transferToken_1303": {
									"entryPoint": 3110,
									"id": 1303,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_994": {
									"entryPoint": 4942,
									"id": 994,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 5808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 5893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 5667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256": {
									"entryPoint": 6245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_addresst_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 5978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 6526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 6511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6583,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6703,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6866,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6947,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 7025,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7149,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6794,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 6502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 6571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"calldata_access_t_address": {
									"entryPoint": 6549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 6694,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7208,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 6390,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 5800,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5796,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5804,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec": {
									"entryPoint": 6690,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:16899:11",
										"nodeType": "YulBlock",
										"src": "0:16899:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "378:105:11",
													"nodeType": "YulBlock",
													"src": "378:105:11",
													"statements": [
														{
															"nativeSrc": "388:89:11",
															"nodeType": "YulAssignment",
															"src": "388:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:11",
																		"nodeType": "YulLiteral",
																		"src": "410:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:11"
																},
																"nativeSrc": "399:78:11",
																"nodeType": "YulFunctionCall",
																"src": "399:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:11",
														"nodeType": "YulTypedName",
														"src": "360:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:11",
														"nodeType": "YulTypedName",
														"src": "370:7:11",
														"type": ""
													}
												],
												"src": "334:149:11"
											},
											{
												"body": {
													"nativeSrc": "531:78:11",
													"nodeType": "YulBlock",
													"src": "531:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:11",
																"nodeType": "YulBlock",
																"src": "587:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:11",
																					"nodeType": "YulLiteral",
																					"src": "596:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:11"
																			},
																			"nativeSrc": "589:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:11"
																		},
																		"nativeSrc": "589:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:11"
																				},
																				"nativeSrc": "561:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:11"
																		},
																		"nativeSrc": "551:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																},
																"nativeSrc": "544:42:11",
																"nodeType": "YulFunctionCall",
																"src": "544:42:11"
															},
															"nativeSrc": "541:62:11",
															"nodeType": "YulIf",
															"src": "541:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:11",
														"nodeType": "YulTypedName",
														"src": "524:5:11",
														"type": ""
													}
												],
												"src": "489:120:11"
											},
											{
												"body": {
													"nativeSrc": "666:86:11",
													"nodeType": "YulBlock",
													"src": "666:86:11",
													"statements": [
														{
															"nativeSrc": "676:29:11",
															"nodeType": "YulAssignment",
															"src": "676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:11"
																},
																"nativeSrc": "685:20:11",
																"nodeType": "YulFunctionCall",
																"src": "685:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:11"
																},
																"nativeSrc": "714:32:11",
																"nodeType": "YulFunctionCall",
																"src": "714:32:11"
															},
															"nativeSrc": "714:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:11",
														"nodeType": "YulTypedName",
														"src": "644:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:11",
														"nodeType": "YulTypedName",
														"src": "652:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:11",
														"nodeType": "YulTypedName",
														"src": "660:5:11",
														"type": ""
													}
												],
												"src": "615:137:11"
											},
											{
												"body": {
													"nativeSrc": "823:262:11",
													"nodeType": "YulBlock",
													"src": "823:262:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:11",
																"nodeType": "YulBlock",
																"src": "869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:11"
																			},
																			"nativeSrc": "871:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:11"
																		},
																		"nativeSrc": "871:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nativeSrc": "840:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:11",
																		"nodeType": "YulLiteral",
																		"src": "865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:11"
																},
																"nativeSrc": "836:32:11",
																"nodeType": "YulFunctionCall",
																"src": "836:32:11"
															},
															"nativeSrc": "833:119:11",
															"nodeType": "YulIf",
															"src": "833:119:11"
														},
														{
															"nativeSrc": "962:116:11",
															"nodeType": "YulBlock",
															"src": "962:116:11",
															"statements": [
																{
																	"nativeSrc": "977:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:11",
																		"nodeType": "YulLiteral",
																		"src": "991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:11",
																			"nodeType": "YulTypedName",
																			"src": "981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:11",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:11"
																				},
																				"nativeSrc": "1036:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:11"
																		},
																		"nativeSrc": "1016:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:11",
														"nodeType": "YulTypedName",
														"src": "793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:11",
														"nodeType": "YulTypedName",
														"src": "804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:11",
														"nodeType": "YulTypedName",
														"src": "816:6:11",
														"type": ""
													}
												],
												"src": "758:327:11"
											},
											{
												"body": {
													"nativeSrc": "1133:48:11",
													"nodeType": "YulBlock",
													"src": "1133:48:11",
													"statements": [
														{
															"nativeSrc": "1143:32:11",
															"nodeType": "YulAssignment",
															"src": "1143:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:11"
																		},
																		"nativeSrc": "1161:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:11"
																},
																"nativeSrc": "1154:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:11",
														"nodeType": "YulTypedName",
														"src": "1115:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:11",
														"nodeType": "YulTypedName",
														"src": "1125:7:11",
														"type": ""
													}
												],
												"src": "1091:90:11"
											},
											{
												"body": {
													"nativeSrc": "1246:50:11",
													"nodeType": "YulBlock",
													"src": "1246:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:11"
																		},
																		"nativeSrc": "1268:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																},
																"nativeSrc": "1256:34:11",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:11"
															},
															"nativeSrc": "1256:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:11",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:11",
														"nodeType": "YulTypedName",
														"src": "1241:3:11",
														"type": ""
													}
												],
												"src": "1187:109:11"
											},
											{
												"body": {
													"nativeSrc": "1394:118:11",
													"nodeType": "YulBlock",
													"src": "1394:118:11",
													"statements": [
														{
															"nativeSrc": "1404:26:11",
															"nodeType": "YulAssignment",
															"src": "1404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:11"
																},
																"nativeSrc": "1412:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nativeSrc": "1487:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:11"
																},
																"nativeSrc": "1440:65:11",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:11"
															},
															"nativeSrc": "1440:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:11",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:11",
														"nodeType": "YulTypedName",
														"src": "1378:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:11",
														"nodeType": "YulTypedName",
														"src": "1389:4:11",
														"type": ""
													}
												],
												"src": "1302:210:11"
											},
											{
												"body": {
													"nativeSrc": "1563:32:11",
													"nodeType": "YulBlock",
													"src": "1563:32:11",
													"statements": [
														{
															"nativeSrc": "1573:16:11",
															"nodeType": "YulAssignment",
															"src": "1573:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:11",
																"nodeType": "YulIdentifier",
																"src": "1584:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:11",
														"nodeType": "YulTypedName",
														"src": "1545:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:11",
														"nodeType": "YulTypedName",
														"src": "1555:7:11",
														"type": ""
													}
												],
												"src": "1518:77:11"
											},
											{
												"body": {
													"nativeSrc": "1644:79:11",
													"nodeType": "YulBlock",
													"src": "1644:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:11",
																"nodeType": "YulBlock",
																"src": "1701:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:11"
																			},
																			"nativeSrc": "1703:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:11"
																		},
																		"nativeSrc": "1703:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:11"
																				},
																				"nativeSrc": "1674:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:11"
																		},
																		"nativeSrc": "1664:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:11"
																},
																"nativeSrc": "1657:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:11"
															},
															"nativeSrc": "1654:63:11",
															"nodeType": "YulIf",
															"src": "1654:63:11"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:11",
														"nodeType": "YulTypedName",
														"src": "1637:5:11",
														"type": ""
													}
												],
												"src": "1601:122:11"
											},
											{
												"body": {
													"nativeSrc": "1781:87:11",
													"nodeType": "YulBlock",
													"src": "1781:87:11",
													"statements": [
														{
															"nativeSrc": "1791:29:11",
															"nodeType": "YulAssignment",
															"src": "1791:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:11"
																},
																"nativeSrc": "1800:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:11"
																},
																"nativeSrc": "1829:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:11"
															},
															"nativeSrc": "1829:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:11"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:11",
														"nodeType": "YulTypedName",
														"src": "1759:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:11",
														"nodeType": "YulTypedName",
														"src": "1767:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:11",
														"nodeType": "YulTypedName",
														"src": "1775:5:11",
														"type": ""
													}
												],
												"src": "1729:139:11"
											},
											{
												"body": {
													"nativeSrc": "1940:263:11",
													"nodeType": "YulBlock",
													"src": "1940:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:11",
																"nodeType": "YulBlock",
																"src": "1986:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:11"
																			},
																			"nativeSrc": "1988:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:11"
																		},
																		"nativeSrc": "1988:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:11"
																		},
																		"nativeSrc": "1957:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:11"
																},
																"nativeSrc": "1953:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:11"
															},
															"nativeSrc": "1950:119:11",
															"nodeType": "YulIf",
															"src": "1950:119:11"
														},
														{
															"nativeSrc": "2079:117:11",
															"nodeType": "YulBlock",
															"src": "2079:117:11",
															"statements": [
																{
																	"nativeSrc": "2094:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:11"
																				},
																				"nativeSrc": "2154:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2133:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:11"
																		},
																		"nativeSrc": "2133:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1874:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:11",
														"nodeType": "YulTypedName",
														"src": "1910:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:11",
														"nodeType": "YulTypedName",
														"src": "1921:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:11",
														"nodeType": "YulTypedName",
														"src": "1933:6:11",
														"type": ""
													}
												],
												"src": "1874:329:11"
											},
											{
												"body": {
													"nativeSrc": "2274:53:11",
													"nodeType": "YulBlock",
													"src": "2274:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2291:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2314:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2296:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:11"
																		},
																		"nativeSrc": "2296:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2284:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:11"
																},
																"nativeSrc": "2284:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2284:37:11"
															},
															"nativeSrc": "2284:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:11"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2209:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2262:5:11",
														"nodeType": "YulTypedName",
														"src": "2262:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2269:3:11",
														"nodeType": "YulTypedName",
														"src": "2269:3:11",
														"type": ""
													}
												],
												"src": "2209:118:11"
											},
											{
												"body": {
													"nativeSrc": "2431:124:11",
													"nodeType": "YulBlock",
													"src": "2431:124:11",
													"statements": [
														{
															"nativeSrc": "2441:26:11",
															"nodeType": "YulAssignment",
															"src": "2441:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2453:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2464:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2449:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:11"
																},
																"nativeSrc": "2449:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2449:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2441:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2521:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2534:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2545:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2530:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:11"
																		},
																		"nativeSrc": "2530:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2477:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:11"
																},
																"nativeSrc": "2477:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2477:71:11"
															},
															"nativeSrc": "2477:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2333:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:11",
														"nodeType": "YulTypedName",
														"src": "2403:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2415:6:11",
														"nodeType": "YulTypedName",
														"src": "2415:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2426:4:11",
														"nodeType": "YulTypedName",
														"src": "2426:4:11",
														"type": ""
													}
												],
												"src": "2333:222:11"
											},
											{
												"body": {
													"nativeSrc": "2606:81:11",
													"nodeType": "YulBlock",
													"src": "2606:81:11",
													"statements": [
														{
															"nativeSrc": "2616:65:11",
															"nodeType": "YulAssignment",
															"src": "2616:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2631:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2638:42:11",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2627:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:11"
																},
																"nativeSrc": "2627:54:11",
																"nodeType": "YulFunctionCall",
																"src": "2627:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2561:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:11",
														"nodeType": "YulTypedName",
														"src": "2588:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:11",
														"nodeType": "YulTypedName",
														"src": "2598:7:11",
														"type": ""
													}
												],
												"src": "2561:126:11"
											},
											{
												"body": {
													"nativeSrc": "2738:51:11",
													"nodeType": "YulBlock",
													"src": "2738:51:11",
													"statements": [
														{
															"nativeSrc": "2748:35:11",
															"nodeType": "YulAssignment",
															"src": "2748:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2777:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2759:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:11"
																},
																"nativeSrc": "2759:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2759:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2748:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2748:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2693:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2720:5:11",
														"nodeType": "YulTypedName",
														"src": "2720:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2730:7:11",
														"nodeType": "YulTypedName",
														"src": "2730:7:11",
														"type": ""
													}
												],
												"src": "2693:96:11"
											},
											{
												"body": {
													"nativeSrc": "2838:79:11",
													"nodeType": "YulBlock",
													"src": "2838:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2895:16:11",
																"nodeType": "YulBlock",
																"src": "2895:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2904:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2907:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2907:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2897:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:11"
																			},
																			"nativeSrc": "2897:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2897:12:11"
																		},
																		"nativeSrc": "2897:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2861:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2886:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2868:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:11"
																				},
																				"nativeSrc": "2868:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2858:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2858:2:11"
																		},
																		"nativeSrc": "2858:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2851:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:11"
																},
																"nativeSrc": "2851:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2851:43:11"
															},
															"nativeSrc": "2848:63:11",
															"nodeType": "YulIf",
															"src": "2848:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2795:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2831:5:11",
														"nodeType": "YulTypedName",
														"src": "2831:5:11",
														"type": ""
													}
												],
												"src": "2795:122:11"
											},
											{
												"body": {
													"nativeSrc": "2975:87:11",
													"nodeType": "YulBlock",
													"src": "2975:87:11",
													"statements": [
														{
															"nativeSrc": "2985:29:11",
															"nodeType": "YulAssignment",
															"src": "2985:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3007:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2994:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:11"
																},
																"nativeSrc": "2994:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2994:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2985:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3050:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3023:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3023:26:11"
																},
																"nativeSrc": "3023:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3023:33:11"
															},
															"nativeSrc": "3023:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3023:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2923:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2953:6:11",
														"nodeType": "YulTypedName",
														"src": "2953:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2961:3:11",
														"nodeType": "YulTypedName",
														"src": "2961:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2969:5:11",
														"nodeType": "YulTypedName",
														"src": "2969:5:11",
														"type": ""
													}
												],
												"src": "2923:139:11"
											},
											{
												"body": {
													"nativeSrc": "3151:391:11",
													"nodeType": "YulBlock",
													"src": "3151:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3197:83:11",
																"nodeType": "YulBlock",
																"src": "3197:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3199:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3199:77:11"
																			},
																			"nativeSrc": "3199:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:79:11"
																		},
																		"nativeSrc": "3199:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3172:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3172:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3181:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3168:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:11"
																		},
																		"nativeSrc": "3168:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3193:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3193:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3164:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:11"
																},
																"nativeSrc": "3164:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3164:32:11"
															},
															"nativeSrc": "3161:119:11",
															"nodeType": "YulIf",
															"src": "3161:119:11"
														},
														{
															"nativeSrc": "3290:117:11",
															"nodeType": "YulBlock",
															"src": "3290:117:11",
															"statements": [
																{
																	"nativeSrc": "3305:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3305:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3319:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3309:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3309:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3334:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3334:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3369:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3369:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3380:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3380:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3365:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3365:3:11"
																				},
																				"nativeSrc": "3365:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3365:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3389:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3344:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3344:20:11"
																		},
																		"nativeSrc": "3344:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3344:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3334:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3417:118:11",
															"nodeType": "YulBlock",
															"src": "3417:118:11",
															"statements": [
																{
																	"nativeSrc": "3432:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3432:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3446:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3436:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3436:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:11"
																				},
																				"nativeSrc": "3493:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3472:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:11"
																		},
																		"nativeSrc": "3472:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3462:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3068:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3113:9:11",
														"nodeType": "YulTypedName",
														"src": "3113:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3124:7:11",
														"nodeType": "YulTypedName",
														"src": "3124:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3136:6:11",
														"nodeType": "YulTypedName",
														"src": "3136:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3144:6:11",
														"nodeType": "YulTypedName",
														"src": "3144:6:11",
														"type": ""
													}
												],
												"src": "3068:474:11"
											},
											{
												"body": {
													"nativeSrc": "3614:263:11",
													"nodeType": "YulBlock",
													"src": "3614:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3660:83:11",
																"nodeType": "YulBlock",
																"src": "3660:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3662:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3662:77:11"
																			},
																			"nativeSrc": "3662:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3662:79:11"
																		},
																		"nativeSrc": "3662:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3662:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3635:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3635:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3644:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3644:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3631:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3631:3:11"
																		},
																		"nativeSrc": "3631:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3631:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3656:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3656:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3627:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:11"
																},
																"nativeSrc": "3627:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3627:32:11"
															},
															"nativeSrc": "3624:119:11",
															"nodeType": "YulIf",
															"src": "3624:119:11"
														},
														{
															"nativeSrc": "3753:117:11",
															"nodeType": "YulBlock",
															"src": "3753:117:11",
															"statements": [
																{
																	"nativeSrc": "3768:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3768:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3782:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3782:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3772:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3772:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3797:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3797:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3832:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3832:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3843:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3843:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3828:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3828:3:11"
																				},
																				"nativeSrc": "3828:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3828:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3852:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3852:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3807:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3807:20:11"
																		},
																		"nativeSrc": "3807:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3797:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3797:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3548:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3584:9:11",
														"nodeType": "YulTypedName",
														"src": "3584:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3595:7:11",
														"nodeType": "YulTypedName",
														"src": "3595:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3607:6:11",
														"nodeType": "YulTypedName",
														"src": "3607:6:11",
														"type": ""
													}
												],
												"src": "3548:329:11"
											},
											{
												"body": {
													"nativeSrc": "3983:519:11",
													"nodeType": "YulBlock",
													"src": "3983:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4029:83:11",
																"nodeType": "YulBlock",
																"src": "4029:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4031:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4031:77:11"
																			},
																			"nativeSrc": "4031:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4031:79:11"
																		},
																		"nativeSrc": "4031:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4031:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4004:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4004:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4013:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4013:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4000:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:11"
																		},
																		"nativeSrc": "4000:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4000:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4025:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4025:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3996:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3996:3:11"
																},
																"nativeSrc": "3996:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3996:32:11"
															},
															"nativeSrc": "3993:119:11",
															"nodeType": "YulIf",
															"src": "3993:119:11"
														},
														{
															"nativeSrc": "4122:117:11",
															"nodeType": "YulBlock",
															"src": "4122:117:11",
															"statements": [
																{
																	"nativeSrc": "4137:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4137:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4151:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4151:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4141:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4141:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4166:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4166:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4201:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4201:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4212:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4212:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4197:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4197:3:11"
																				},
																				"nativeSrc": "4197:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4197:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4221:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4221:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4176:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4176:20:11"
																		},
																		"nativeSrc": "4176:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4176:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4166:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4166:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4249:118:11",
															"nodeType": "YulBlock",
															"src": "4249:118:11",
															"statements": [
																{
																	"nativeSrc": "4264:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4264:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4278:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4278:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4268:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4268:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4294:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4294:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4329:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4329:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4340:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4340:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4325:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4325:3:11"
																				},
																				"nativeSrc": "4325:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4325:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4349:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4349:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4304:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4304:20:11"
																		},
																		"nativeSrc": "4304:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4304:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4294:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4294:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4377:118:11",
															"nodeType": "YulBlock",
															"src": "4377:118:11",
															"statements": [
																{
																	"nativeSrc": "4392:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4392:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4406:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4406:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4396:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4396:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4422:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4422:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4457:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4457:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4468:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4468:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4453:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4453:3:11"
																				},
																				"nativeSrc": "4453:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4453:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4477:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4477:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4432:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4432:20:11"
																		},
																		"nativeSrc": "4432:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4432:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4422:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4422:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nativeSrc": "3883:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3937:9:11",
														"nodeType": "YulTypedName",
														"src": "3937:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3948:7:11",
														"nodeType": "YulTypedName",
														"src": "3948:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3960:6:11",
														"nodeType": "YulTypedName",
														"src": "3960:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3968:6:11",
														"nodeType": "YulTypedName",
														"src": "3968:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3976:6:11",
														"nodeType": "YulTypedName",
														"src": "3976:6:11",
														"type": ""
													}
												],
												"src": "3883:619:11"
											},
											{
												"body": {
													"nativeSrc": "4553:32:11",
													"nodeType": "YulBlock",
													"src": "4553:32:11",
													"statements": [
														{
															"nativeSrc": "4563:16:11",
															"nodeType": "YulAssignment",
															"src": "4563:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "4574:5:11",
																"nodeType": "YulIdentifier",
																"src": "4574:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4563:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4563:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4508:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4535:5:11",
														"nodeType": "YulTypedName",
														"src": "4535:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4545:7:11",
														"nodeType": "YulTypedName",
														"src": "4545:7:11",
														"type": ""
													}
												],
												"src": "4508:77:11"
											},
											{
												"body": {
													"nativeSrc": "4656:53:11",
													"nodeType": "YulBlock",
													"src": "4656:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4673:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4673:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4696:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4696:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4678:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "4678:17:11"
																		},
																		"nativeSrc": "4678:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4678:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4666:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4666:6:11"
																},
																"nativeSrc": "4666:37:11",
																"nodeType": "YulFunctionCall",
																"src": "4666:37:11"
															},
															"nativeSrc": "4666:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "4666:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4591:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4644:5:11",
														"nodeType": "YulTypedName",
														"src": "4644:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4651:3:11",
														"nodeType": "YulTypedName",
														"src": "4651:3:11",
														"type": ""
													}
												],
												"src": "4591:118:11"
											},
											{
												"body": {
													"nativeSrc": "4813:124:11",
													"nodeType": "YulBlock",
													"src": "4813:124:11",
													"statements": [
														{
															"nativeSrc": "4823:26:11",
															"nodeType": "YulAssignment",
															"src": "4823:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4835:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4835:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4846:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4846:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4831:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4831:3:11"
																},
																"nativeSrc": "4831:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4831:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4823:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4823:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4903:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4903:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4916:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4916:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4927:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4927:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4912:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4912:3:11"
																		},
																		"nativeSrc": "4912:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4912:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4859:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4859:43:11"
																},
																"nativeSrc": "4859:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4859:71:11"
															},
															"nativeSrc": "4859:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4859:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4715:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4785:9:11",
														"nodeType": "YulTypedName",
														"src": "4785:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4797:6:11",
														"nodeType": "YulTypedName",
														"src": "4797:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4808:4:11",
														"nodeType": "YulTypedName",
														"src": "4808:4:11",
														"type": ""
													}
												],
												"src": "4715:222:11"
											},
											{
												"body": {
													"nativeSrc": "5032:28:11",
													"nodeType": "YulBlock",
													"src": "5032:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5049:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5049:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5052:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5052:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5042:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5042:6:11"
																},
																"nativeSrc": "5042:12:11",
																"nodeType": "YulFunctionCall",
																"src": "5042:12:11"
															},
															"nativeSrc": "5042:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "5042:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4943:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "4943:117:11"
											},
											{
												"body": {
													"nativeSrc": "5155:28:11",
													"nodeType": "YulBlock",
													"src": "5155:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5172:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5172:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5175:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5175:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5165:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5165:6:11"
																},
																"nativeSrc": "5165:12:11",
																"nodeType": "YulFunctionCall",
																"src": "5165:12:11"
															},
															"nativeSrc": "5165:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "5165:12:11"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "5066:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "5066:117:11"
											},
											{
												"body": {
													"nativeSrc": "5278:28:11",
													"nodeType": "YulBlock",
													"src": "5278:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5295:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5295:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5298:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5298:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5288:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5288:6:11"
																},
																"nativeSrc": "5288:12:11",
																"nodeType": "YulFunctionCall",
																"src": "5288:12:11"
															},
															"nativeSrc": "5288:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "5288:12:11"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5189:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "5189:117:11"
											},
											{
												"body": {
													"nativeSrc": "5419:478:11",
													"nodeType": "YulBlock",
													"src": "5419:478:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5468:83:11",
																"nodeType": "YulBlock",
																"src": "5468:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5470:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5470:77:11"
																			},
																			"nativeSrc": "5470:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5470:79:11"
																		},
																		"nativeSrc": "5470:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5470:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5447:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5447:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5455:4:11",
																						"nodeType": "YulLiteral",
																						"src": "5455:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5443:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5443:3:11"
																				},
																				"nativeSrc": "5443:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5443:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5462:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5462:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5439:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5439:3:11"
																		},
																		"nativeSrc": "5439:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5432:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5432:6:11"
																},
																"nativeSrc": "5432:35:11",
																"nodeType": "YulFunctionCall",
																"src": "5432:35:11"
															},
															"nativeSrc": "5429:122:11",
															"nodeType": "YulIf",
															"src": "5429:122:11"
														},
														{
															"nativeSrc": "5560:30:11",
															"nodeType": "YulAssignment",
															"src": "5560:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5583:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5583:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5570:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5570:12:11"
																},
																"nativeSrc": "5570:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5570:20:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5560:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5560:6:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5633:83:11",
																"nodeType": "YulBlock",
																"src": "5633:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "5635:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5635:77:11"
																			},
																			"nativeSrc": "5635:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5635:79:11"
																		},
																		"nativeSrc": "5635:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5635:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5605:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5605:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5613:18:11",
																		"nodeType": "YulLiteral",
																		"src": "5613:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5602:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5602:2:11"
																},
																"nativeSrc": "5602:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5602:30:11"
															},
															"nativeSrc": "5599:117:11",
															"nodeType": "YulIf",
															"src": "5599:117:11"
														},
														{
															"nativeSrc": "5725:29:11",
															"nodeType": "YulAssignment",
															"src": "5725:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5741:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5741:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5749:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5749:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5737:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5737:3:11"
																},
																"nativeSrc": "5737:17:11",
																"nodeType": "YulFunctionCall",
																"src": "5737:17:11"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "5725:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "5725:8:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5808:83:11",
																"nodeType": "YulBlock",
																"src": "5808:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "5810:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5810:77:11"
																			},
																			"nativeSrc": "5810:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5810:79:11"
																		},
																		"nativeSrc": "5810:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5810:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "5773:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "5773:8:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "5787:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5787:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5795:4:11",
																						"nodeType": "YulLiteral",
																						"src": "5795:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5783:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5783:3:11"
																				},
																				"nativeSrc": "5783:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5783:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5769:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5769:3:11"
																		},
																		"nativeSrc": "5769:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5769:32:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5803:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5803:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5766:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5766:2:11"
																},
																"nativeSrc": "5766:41:11",
																"nodeType": "YulFunctionCall",
																"src": "5766:41:11"
															},
															"nativeSrc": "5763:128:11",
															"nodeType": "YulIf",
															"src": "5763:128:11"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "5329:568:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5386:6:11",
														"nodeType": "YulTypedName",
														"src": "5386:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5394:3:11",
														"nodeType": "YulTypedName",
														"src": "5394:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "5402:8:11",
														"nodeType": "YulTypedName",
														"src": "5402:8:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5412:6:11",
														"nodeType": "YulTypedName",
														"src": "5412:6:11",
														"type": ""
													}
												],
												"src": "5329:568:11"
											},
											{
												"body": {
													"nativeSrc": "6010:478:11",
													"nodeType": "YulBlock",
													"src": "6010:478:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6059:83:11",
																"nodeType": "YulBlock",
																"src": "6059:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6061:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6061:77:11"
																			},
																			"nativeSrc": "6061:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6061:79:11"
																		},
																		"nativeSrc": "6061:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6061:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6038:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6038:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6046:4:11",
																						"nodeType": "YulLiteral",
																						"src": "6046:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6034:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6034:3:11"
																				},
																				"nativeSrc": "6034:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6034:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6053:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6053:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6030:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6030:3:11"
																		},
																		"nativeSrc": "6030:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6030:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6023:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6023:6:11"
																},
																"nativeSrc": "6023:35:11",
																"nodeType": "YulFunctionCall",
																"src": "6023:35:11"
															},
															"nativeSrc": "6020:122:11",
															"nodeType": "YulIf",
															"src": "6020:122:11"
														},
														{
															"nativeSrc": "6151:30:11",
															"nodeType": "YulAssignment",
															"src": "6151:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6174:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6174:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6161:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6161:12:11"
																},
																"nativeSrc": "6161:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6161:20:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6151:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6151:6:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6224:83:11",
																"nodeType": "YulBlock",
																"src": "6224:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "6226:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6226:77:11"
																			},
																			"nativeSrc": "6226:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6226:79:11"
																		},
																		"nativeSrc": "6226:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6226:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6196:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6196:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6204:18:11",
																		"nodeType": "YulLiteral",
																		"src": "6204:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6193:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6193:2:11"
																},
																"nativeSrc": "6193:30:11",
																"nodeType": "YulFunctionCall",
																"src": "6193:30:11"
															},
															"nativeSrc": "6190:117:11",
															"nodeType": "YulIf",
															"src": "6190:117:11"
														},
														{
															"nativeSrc": "6316:29:11",
															"nodeType": "YulAssignment",
															"src": "6316:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6332:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6332:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6340:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6340:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6328:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6328:3:11"
																},
																"nativeSrc": "6328:17:11",
																"nodeType": "YulFunctionCall",
																"src": "6328:17:11"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "6316:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "6316:8:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6399:83:11",
																"nodeType": "YulBlock",
																"src": "6399:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6401:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6401:77:11"
																			},
																			"nativeSrc": "6401:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6401:79:11"
																		},
																		"nativeSrc": "6401:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6401:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "6364:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "6364:8:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "6378:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6378:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6386:4:11",
																						"nodeType": "YulLiteral",
																						"src": "6386:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6374:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6374:3:11"
																				},
																				"nativeSrc": "6374:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6374:17:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6360:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6360:3:11"
																		},
																		"nativeSrc": "6360:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6360:32:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6394:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6394:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6357:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6357:2:11"
																},
																"nativeSrc": "6357:41:11",
																"nodeType": "YulFunctionCall",
																"src": "6357:41:11"
															},
															"nativeSrc": "6354:128:11",
															"nodeType": "YulIf",
															"src": "6354:128:11"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "5920:568:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5977:6:11",
														"nodeType": "YulTypedName",
														"src": "5977:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5985:3:11",
														"nodeType": "YulTypedName",
														"src": "5985:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "5993:8:11",
														"nodeType": "YulTypedName",
														"src": "5993:8:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6003:6:11",
														"nodeType": "YulTypedName",
														"src": "6003:6:11",
														"type": ""
													}
												],
												"src": "5920:568:11"
											},
											{
												"body": {
													"nativeSrc": "6664:909:11",
													"nodeType": "YulBlock",
													"src": "6664:909:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6710:83:11",
																"nodeType": "YulBlock",
																"src": "6710:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6712:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6712:77:11"
																			},
																			"nativeSrc": "6712:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6712:79:11"
																		},
																		"nativeSrc": "6712:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6712:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6685:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6685:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6694:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6694:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6681:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6681:3:11"
																		},
																		"nativeSrc": "6681:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6681:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6706:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6706:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6677:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6677:3:11"
																},
																"nativeSrc": "6677:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6677:32:11"
															},
															"nativeSrc": "6674:119:11",
															"nodeType": "YulIf",
															"src": "6674:119:11"
														},
														{
															"nativeSrc": "6803:312:11",
															"nodeType": "YulBlock",
															"src": "6803:312:11",
															"statements": [
																{
																	"nativeSrc": "6818:45:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6818:45:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6849:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6849:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6860:1:11",
																						"nodeType": "YulLiteral",
																						"src": "6860:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6845:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6845:3:11"
																				},
																				"nativeSrc": "6845:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6845:17:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6832:12:11",
																			"nodeType": "YulIdentifier",
																			"src": "6832:12:11"
																		},
																		"nativeSrc": "6832:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6832:31:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6822:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6822:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6910:83:11",
																		"nodeType": "YulBlock",
																		"src": "6910:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6912:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "6912:77:11"
																					},
																					"nativeSrc": "6912:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6912:79:11"
																				},
																				"nativeSrc": "6912:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "6912:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6882:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6882:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6890:18:11",
																				"nodeType": "YulLiteral",
																				"src": "6890:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6879:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6879:2:11"
																		},
																		"nativeSrc": "6879:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6879:30:11"
																	},
																	"nativeSrc": "6876:117:11",
																	"nodeType": "YulIf",
																	"src": "6876:117:11"
																},
																{
																	"nativeSrc": "7007:98:11",
																	"nodeType": "YulAssignment",
																	"src": "7007:98:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7077:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7077:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7088:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7088:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7073:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7073:3:11"
																				},
																				"nativeSrc": "7073:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7073:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7097:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7097:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "7025:47:11",
																			"nodeType": "YulIdentifier",
																			"src": "7025:47:11"
																		},
																		"nativeSrc": "7025:80:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7025:80:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7007:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7007:6:11"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "7015:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7015:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7125:118:11",
															"nodeType": "YulBlock",
															"src": "7125:118:11",
															"statements": [
																{
																	"nativeSrc": "7140:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7140:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7154:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7154:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7144:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7144:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7170:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7170:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7205:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7205:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7216:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7216:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7201:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7201:3:11"
																				},
																				"nativeSrc": "7201:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7201:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7225:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7225:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7180:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7180:20:11"
																		},
																		"nativeSrc": "7180:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7180:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7170:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7170:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7253:313:11",
															"nodeType": "YulBlock",
															"src": "7253:313:11",
															"statements": [
																{
																	"nativeSrc": "7268:46:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7268:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7299:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7299:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7310:2:11",
																						"nodeType": "YulLiteral",
																						"src": "7310:2:11",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7295:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7295:3:11"
																				},
																				"nativeSrc": "7295:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7295:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7282:12:11",
																			"nodeType": "YulIdentifier",
																			"src": "7282:12:11"
																		},
																		"nativeSrc": "7282:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7282:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7272:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7272:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7361:83:11",
																		"nodeType": "YulBlock",
																		"src": "7361:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7363:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "7363:77:11"
																					},
																					"nativeSrc": "7363:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7363:79:11"
																				},
																				"nativeSrc": "7363:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "7363:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7333:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7333:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7341:18:11",
																				"nodeType": "YulLiteral",
																				"src": "7341:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7330:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7330:2:11"
																		},
																		"nativeSrc": "7330:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7330:30:11"
																	},
																	"nativeSrc": "7327:117:11",
																	"nodeType": "YulIf",
																	"src": "7327:117:11"
																},
																{
																	"nativeSrc": "7458:98:11",
																	"nodeType": "YulAssignment",
																	"src": "7458:98:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7528:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7528:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7539:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7539:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7524:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7524:3:11"
																				},
																				"nativeSrc": "7524:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7524:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7548:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7548:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "7476:47:11",
																			"nodeType": "YulIdentifier",
																			"src": "7476:47:11"
																		},
																		"nativeSrc": "7476:80:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7476:80:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "7458:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7458:6:11"
																		},
																		{
																			"name": "value4",
																			"nativeSrc": "7466:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7466:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_addresst_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "6494:1079:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6602:9:11",
														"nodeType": "YulTypedName",
														"src": "6602:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6613:7:11",
														"nodeType": "YulTypedName",
														"src": "6613:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6625:6:11",
														"nodeType": "YulTypedName",
														"src": "6625:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6633:6:11",
														"nodeType": "YulTypedName",
														"src": "6633:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6641:6:11",
														"nodeType": "YulTypedName",
														"src": "6641:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6649:6:11",
														"nodeType": "YulTypedName",
														"src": "6649:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6657:6:11",
														"nodeType": "YulTypedName",
														"src": "6657:6:11",
														"type": ""
													}
												],
												"src": "6494:1079:11"
											},
											{
												"body": {
													"nativeSrc": "7622:79:11",
													"nodeType": "YulBlock",
													"src": "7622:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7679:16:11",
																"nodeType": "YulBlock",
																"src": "7679:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7688:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7688:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7691:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7691:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7681:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7681:6:11"
																			},
																			"nativeSrc": "7681:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7681:12:11"
																		},
																		"nativeSrc": "7681:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7681:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7645:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7645:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7670:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "7670:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "7652:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "7652:17:11"
																				},
																				"nativeSrc": "7652:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7652:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7642:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7642:2:11"
																		},
																		"nativeSrc": "7642:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7642:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7635:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7635:6:11"
																},
																"nativeSrc": "7635:43:11",
																"nodeType": "YulFunctionCall",
																"src": "7635:43:11"
															},
															"nativeSrc": "7632:63:11",
															"nodeType": "YulIf",
															"src": "7632:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "7579:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7615:5:11",
														"nodeType": "YulTypedName",
														"src": "7615:5:11",
														"type": ""
													}
												],
												"src": "7579:122:11"
											},
											{
												"body": {
													"nativeSrc": "7759:87:11",
													"nodeType": "YulBlock",
													"src": "7759:87:11",
													"statements": [
														{
															"nativeSrc": "7769:29:11",
															"nodeType": "YulAssignment",
															"src": "7769:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7791:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7791:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7778:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "7778:12:11"
																},
																"nativeSrc": "7778:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7778:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7769:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7834:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7834:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7807:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "7807:26:11"
																},
																"nativeSrc": "7807:33:11",
																"nodeType": "YulFunctionCall",
																"src": "7807:33:11"
															},
															"nativeSrc": "7807:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "7807:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "7707:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7737:6:11",
														"nodeType": "YulTypedName",
														"src": "7737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7745:3:11",
														"nodeType": "YulTypedName",
														"src": "7745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7753:5:11",
														"nodeType": "YulTypedName",
														"src": "7753:5:11",
														"type": ""
													}
												],
												"src": "7707:139:11"
											},
											{
												"body": {
													"nativeSrc": "7952:519:11",
													"nodeType": "YulBlock",
													"src": "7952:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7998:83:11",
																"nodeType": "YulBlock",
																"src": "7998:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8000:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8000:77:11"
																			},
																			"nativeSrc": "8000:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8000:79:11"
																		},
																		"nativeSrc": "8000:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8000:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7973:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7973:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7982:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7982:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7969:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7969:3:11"
																		},
																		"nativeSrc": "7969:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7969:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7994:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7994:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7965:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7965:3:11"
																},
																"nativeSrc": "7965:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7965:32:11"
															},
															"nativeSrc": "7962:119:11",
															"nodeType": "YulIf",
															"src": "7962:119:11"
														},
														{
															"nativeSrc": "8091:117:11",
															"nodeType": "YulBlock",
															"src": "8091:117:11",
															"statements": [
																{
																	"nativeSrc": "8106:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8106:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8120:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8120:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8110:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8110:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8135:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8135:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8170:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8170:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8181:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8181:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8166:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8166:3:11"
																				},
																				"nativeSrc": "8166:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8166:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8190:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8190:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8145:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8145:20:11"
																		},
																		"nativeSrc": "8145:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8145:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8135:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8135:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8218:118:11",
															"nodeType": "YulBlock",
															"src": "8218:118:11",
															"statements": [
																{
																	"nativeSrc": "8233:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8233:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8247:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8247:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8237:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8237:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8263:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8263:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8298:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8298:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8309:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8309:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8294:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8294:3:11"
																				},
																				"nativeSrc": "8294:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8294:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8318:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8318:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8273:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8273:20:11"
																		},
																		"nativeSrc": "8273:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8273:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8263:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8263:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8346:118:11",
															"nodeType": "YulBlock",
															"src": "8346:118:11",
															"statements": [
																{
																	"nativeSrc": "8361:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8361:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8375:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8375:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8365:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8365:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8391:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8391:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8426:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8426:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8437:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8437:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8422:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8422:3:11"
																				},
																				"nativeSrc": "8422:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8422:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8446:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8446:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8401:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8401:20:11"
																		},
																		"nativeSrc": "8401:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8401:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8391:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8391:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "7852:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7906:9:11",
														"nodeType": "YulTypedName",
														"src": "7906:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7917:7:11",
														"nodeType": "YulTypedName",
														"src": "7917:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7929:6:11",
														"nodeType": "YulTypedName",
														"src": "7929:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7937:6:11",
														"nodeType": "YulTypedName",
														"src": "7937:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7945:6:11",
														"nodeType": "YulTypedName",
														"src": "7945:6:11",
														"type": ""
													}
												],
												"src": "7852:619:11"
											},
											{
												"body": {
													"nativeSrc": "8594:648:11",
													"nodeType": "YulBlock",
													"src": "8594:648:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8641:83:11",
																"nodeType": "YulBlock",
																"src": "8641:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8643:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "8643:77:11"
																			},
																			"nativeSrc": "8643:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8643:79:11"
																		},
																		"nativeSrc": "8643:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8643:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8615:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8615:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8624:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8624:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8611:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8611:3:11"
																		},
																		"nativeSrc": "8611:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8611:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8636:3:11",
																		"nodeType": "YulLiteral",
																		"src": "8636:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8607:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8607:3:11"
																},
																"nativeSrc": "8607:33:11",
																"nodeType": "YulFunctionCall",
																"src": "8607:33:11"
															},
															"nativeSrc": "8604:120:11",
															"nodeType": "YulIf",
															"src": "8604:120:11"
														},
														{
															"nativeSrc": "8734:117:11",
															"nodeType": "YulBlock",
															"src": "8734:117:11",
															"statements": [
																{
																	"nativeSrc": "8749:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8749:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8763:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8763:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8753:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8753:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8778:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8778:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8813:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8813:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8824:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8824:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8809:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8809:3:11"
																				},
																				"nativeSrc": "8809:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8809:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8833:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8833:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8788:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8788:20:11"
																		},
																		"nativeSrc": "8788:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8788:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8778:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8778:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8861:118:11",
															"nodeType": "YulBlock",
															"src": "8861:118:11",
															"statements": [
																{
																	"nativeSrc": "8876:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8876:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8890:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8890:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8880:6:11",
																			"nodeType": "YulTypedName",
																			"src": "8880:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8906:63:11",
																	"nodeType": "YulAssignment",
																	"src": "8906:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8941:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "8941:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8952:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8952:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8937:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "8937:3:11"
																				},
																				"nativeSrc": "8937:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8937:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8961:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "8961:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8916:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "8916:20:11"
																		},
																		"nativeSrc": "8916:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8916:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8906:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "8906:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8989:118:11",
															"nodeType": "YulBlock",
															"src": "8989:118:11",
															"statements": [
																{
																	"nativeSrc": "9004:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9004:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9018:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9018:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9008:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9008:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9034:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9034:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9069:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9069:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9080:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9080:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9065:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9065:3:11"
																				},
																				"nativeSrc": "9065:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9065:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9089:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9089:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9044:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9044:20:11"
																		},
																		"nativeSrc": "9044:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9044:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9034:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9034:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9117:118:11",
															"nodeType": "YulBlock",
															"src": "9117:118:11",
															"statements": [
																{
																	"nativeSrc": "9132:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9132:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9146:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9146:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9136:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9136:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9162:63:11",
																	"nodeType": "YulAssignment",
																	"src": "9162:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9197:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "9197:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9208:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9208:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9193:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9193:3:11"
																				},
																				"nativeSrc": "9193:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9193:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9217:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9217:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9172:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "9172:20:11"
																		},
																		"nativeSrc": "9172:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9172:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9162:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9162:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256",
												"nativeSrc": "8477:765:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8540:9:11",
														"nodeType": "YulTypedName",
														"src": "8540:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8551:7:11",
														"nodeType": "YulTypedName",
														"src": "8551:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8563:6:11",
														"nodeType": "YulTypedName",
														"src": "8563:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8571:6:11",
														"nodeType": "YulTypedName",
														"src": "8571:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8579:6:11",
														"nodeType": "YulTypedName",
														"src": "8579:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8587:6:11",
														"nodeType": "YulTypedName",
														"src": "8587:6:11",
														"type": ""
													}
												],
												"src": "8477:765:11"
											},
											{
												"body": {
													"nativeSrc": "9276:152:11",
													"nodeType": "YulBlock",
													"src": "9276:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9293:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9293:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9296:77:11",
																		"nodeType": "YulLiteral",
																		"src": "9296:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9286:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9286:6:11"
																},
																"nativeSrc": "9286:88:11",
																"nodeType": "YulFunctionCall",
																"src": "9286:88:11"
															},
															"nativeSrc": "9286:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "9286:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9390:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9390:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9393:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9393:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9383:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9383:6:11"
																},
																"nativeSrc": "9383:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9383:15:11"
															},
															"nativeSrc": "9383:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9383:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9414:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9414:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9417:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9417:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9407:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9407:6:11"
																},
																"nativeSrc": "9407:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9407:15:11"
															},
															"nativeSrc": "9407:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9407:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9248:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "9248:180:11"
											},
											{
												"body": {
													"nativeSrc": "9462:152:11",
													"nodeType": "YulBlock",
													"src": "9462:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9479:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9479:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9482:77:11",
																		"nodeType": "YulLiteral",
																		"src": "9482:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9472:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9472:6:11"
																},
																"nativeSrc": "9472:88:11",
																"nodeType": "YulFunctionCall",
																"src": "9472:88:11"
															},
															"nativeSrc": "9472:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "9472:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9576:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9576:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9579:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9579:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9569:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9569:6:11"
																},
																"nativeSrc": "9569:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9569:15:11"
															},
															"nativeSrc": "9569:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9569:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9600:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9600:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9603:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9603:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9593:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9593:6:11"
																},
																"nativeSrc": "9593:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9593:15:11"
															},
															"nativeSrc": "9593:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9593:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9434:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "9434:180:11"
											},
											{
												"body": {
													"nativeSrc": "9664:147:11",
													"nodeType": "YulBlock",
													"src": "9664:147:11",
													"statements": [
														{
															"nativeSrc": "9674:25:11",
															"nodeType": "YulAssignment",
															"src": "9674:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9697:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9697:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9679:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9679:17:11"
																},
																"nativeSrc": "9679:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9679:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9674:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9674:1:11"
																}
															]
														},
														{
															"nativeSrc": "9708:25:11",
															"nodeType": "YulAssignment",
															"src": "9708:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9731:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9731:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9713:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9713:17:11"
																},
																"nativeSrc": "9713:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9713:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9708:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9708:1:11"
																}
															]
														},
														{
															"nativeSrc": "9742:16:11",
															"nodeType": "YulAssignment",
															"src": "9742:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9753:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9753:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9756:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9756:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9749:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9749:3:11"
																},
																"nativeSrc": "9749:9:11",
																"nodeType": "YulFunctionCall",
																"src": "9749:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9742:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9742:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9782:22:11",
																"nodeType": "YulBlock",
																"src": "9782:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9784:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "9784:16:11"
																			},
																			"nativeSrc": "9784:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9784:18:11"
																		},
																		"nativeSrc": "9784:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9784:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9774:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9774:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9777:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9777:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9771:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "9771:2:11"
																},
																"nativeSrc": "9771:10:11",
																"nodeType": "YulFunctionCall",
																"src": "9771:10:11"
															},
															"nativeSrc": "9768:36:11",
															"nodeType": "YulIf",
															"src": "9768:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9620:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9651:1:11",
														"nodeType": "YulTypedName",
														"src": "9651:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9654:1:11",
														"nodeType": "YulTypedName",
														"src": "9654:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9660:3:11",
														"nodeType": "YulTypedName",
														"src": "9660:3:11",
														"type": ""
													}
												],
												"src": "9620:191:11"
											},
											{
												"body": {
													"nativeSrc": "9928:73:11",
													"nodeType": "YulBlock",
													"src": "9928:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9945:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9945:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9950:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9950:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9938:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9938:6:11"
																},
																"nativeSrc": "9938:19:11",
																"nodeType": "YulFunctionCall",
																"src": "9938:19:11"
															},
															"nativeSrc": "9938:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "9938:19:11"
														},
														{
															"nativeSrc": "9966:29:11",
															"nodeType": "YulAssignment",
															"src": "9966:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9985:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9985:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9990:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9990:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9981:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9981:3:11"
																},
																"nativeSrc": "9981:14:11",
																"nodeType": "YulFunctionCall",
																"src": "9981:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9966:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "9966:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "9817:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9900:3:11",
														"nodeType": "YulTypedName",
														"src": "9900:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9905:6:11",
														"nodeType": "YulTypedName",
														"src": "9905:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9916:11:11",
														"nodeType": "YulTypedName",
														"src": "9916:11:11",
														"type": ""
													}
												],
												"src": "9817:184:11"
											},
											{
												"body": {
													"nativeSrc": "10081:28:11",
													"nodeType": "YulBlock",
													"src": "10081:28:11",
													"statements": [
														{
															"nativeSrc": "10091:11:11",
															"nodeType": "YulAssignment",
															"src": "10091:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "10099:3:11",
																"nodeType": "YulIdentifier",
																"src": "10099:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "10091:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10091:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "10007:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "10068:3:11",
														"nodeType": "YulTypedName",
														"src": "10068:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "10076:4:11",
														"nodeType": "YulTypedName",
														"src": "10076:4:11",
														"type": ""
													}
												],
												"src": "10007:102:11"
											},
											{
												"body": {
													"nativeSrc": "10170:53:11",
													"nodeType": "YulBlock",
													"src": "10170:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10187:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10187:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10210:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "10210:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10192:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "10192:17:11"
																		},
																		"nativeSrc": "10192:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10192:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10180:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10180:6:11"
																},
																"nativeSrc": "10180:37:11",
																"nodeType": "YulFunctionCall",
																"src": "10180:37:11"
															},
															"nativeSrc": "10180:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "10180:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "10115:108:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10158:5:11",
														"nodeType": "YulTypedName",
														"src": "10158:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10165:3:11",
														"nodeType": "YulTypedName",
														"src": "10165:3:11",
														"type": ""
													}
												],
												"src": "10115:108:11"
											},
											{
												"body": {
													"nativeSrc": "10309:99:11",
													"nodeType": "YulBlock",
													"src": "10309:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10353:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10353:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10361:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10361:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "10319:33:11",
																	"nodeType": "YulIdentifier",
																	"src": "10319:33:11"
																},
																"nativeSrc": "10319:46:11",
																"nodeType": "YulFunctionCall",
																"src": "10319:46:11"
															},
															"nativeSrc": "10319:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "10319:46:11"
														},
														{
															"nativeSrc": "10374:28:11",
															"nodeType": "YulAssignment",
															"src": "10374:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10392:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10392:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10397:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10397:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10388:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10388:3:11"
																},
																"nativeSrc": "10388:14:11",
																"nodeType": "YulFunctionCall",
																"src": "10388:14:11"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "10374:10:11",
																	"nodeType": "YulIdentifier",
																	"src": "10374:10:11"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "10229:179:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "10282:6:11",
														"nodeType": "YulTypedName",
														"src": "10282:6:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10290:3:11",
														"nodeType": "YulTypedName",
														"src": "10290:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "10298:10:11",
														"nodeType": "YulTypedName",
														"src": "10298:10:11",
														"type": ""
													}
												],
												"src": "10229:179:11"
											},
											{
												"body": {
													"nativeSrc": "10472:64:11",
													"nodeType": "YulBlock",
													"src": "10472:64:11",
													"statements": [
														{
															"nativeSrc": "10482:48:11",
															"nodeType": "YulAssignment",
															"src": "10482:48:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "10512:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10512:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "10521:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "10521:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10526:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10526:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10517:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10517:3:11"
																		},
																		"nativeSrc": "10517:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10517:12:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nativeSrc": "10491:20:11",
																	"nodeType": "YulIdentifier",
																	"src": "10491:20:11"
																},
																"nativeSrc": "10491:39:11",
																"nodeType": "YulFunctionCall",
																"src": "10491:39:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10482:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "10482:5:11"
																}
															]
														}
													]
												},
												"name": "calldata_access_t_address",
												"nativeSrc": "10414:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "baseRef",
														"nativeSrc": "10449:7:11",
														"nodeType": "YulTypedName",
														"src": "10449:7:11",
														"type": ""
													},
													{
														"name": "ptr",
														"nativeSrc": "10458:3:11",
														"nodeType": "YulTypedName",
														"src": "10458:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10466:5:11",
														"nodeType": "YulTypedName",
														"src": "10466:5:11",
														"type": ""
													}
												],
												"src": "10414:122:11"
											},
											{
												"body": {
													"nativeSrc": "10619:38:11",
													"nodeType": "YulBlock",
													"src": "10619:38:11",
													"statements": [
														{
															"nativeSrc": "10629:22:11",
															"nodeType": "YulAssignment",
															"src": "10629:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "10641:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10641:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10646:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10646:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10637:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10637:3:11"
																},
																"nativeSrc": "10637:14:11",
																"nodeType": "YulFunctionCall",
																"src": "10637:14:11"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "10629:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10629:4:11"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "10542:115:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "10606:3:11",
														"nodeType": "YulTypedName",
														"src": "10606:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "10614:4:11",
														"nodeType": "YulTypedName",
														"src": "10614:4:11",
														"type": ""
													}
												],
												"src": "10542:115:11"
											},
											{
												"body": {
													"nativeSrc": "10827:565:11",
													"nodeType": "YulBlock",
													"src": "10827:565:11",
													"statements": [
														{
															"nativeSrc": "10838:93:11",
															"nodeType": "YulAssignment",
															"src": "10838:93:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10919:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10919:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10924:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10924:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "10845:73:11",
																	"nodeType": "YulIdentifier",
																	"src": "10845:73:11"
																},
																"nativeSrc": "10845:86:11",
																"nodeType": "YulFunctionCall",
																"src": "10845:86:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10838:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10838:3:11"
																}
															]
														},
														{
															"nativeSrc": "10940:73:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10940:73:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11007:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "11007:5:11"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_calldata_ptr",
																	"nativeSrc": "10955:51:11",
																	"nodeType": "YulIdentifier",
																	"src": "10955:51:11"
																},
																"nativeSrc": "10955:58:11",
																"nodeType": "YulFunctionCall",
																"src": "10955:58:11"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "10944:7:11",
																	"nodeType": "YulTypedName",
																	"src": "10944:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11022:21:11",
															"nodeType": "YulVariableDeclaration",
															"src": "11022:21:11",
															"value": {
																"name": "baseRef",
																"nativeSrc": "11036:7:11",
																"nodeType": "YulIdentifier",
																"src": "11036:7:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "11026:6:11",
																	"nodeType": "YulTypedName",
																	"src": "11026:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11112:255:11",
																"nodeType": "YulBlock",
																"src": "11112:255:11",
																"statements": [
																	{
																		"nativeSrc": "11126:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11126:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "baseRef",
																					"nativeSrc": "11173:7:11",
																					"nodeType": "YulIdentifier",
																					"src": "11173:7:11"
																				},
																				{
																					"name": "srcPtr",
																					"nativeSrc": "11182:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "11182:6:11"
																				}
																			],
																			"functionName": {
																				"name": "calldata_access_t_address",
																				"nativeSrc": "11147:25:11",
																				"nodeType": "YulIdentifier",
																				"src": "11147:25:11"
																			},
																			"nativeSrc": "11147:42:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11147:42:11"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "11130:13:11",
																				"nodeType": "YulTypedName",
																				"src": "11130:13:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11202:70:11",
																		"nodeType": "YulAssignment",
																		"src": "11202:70:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "11253:13:11",
																					"nodeType": "YulIdentifier",
																					"src": "11253:13:11"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "11268:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11268:3:11"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "11209:43:11",
																				"nodeType": "YulIdentifier",
																				"src": "11209:43:11"
																			},
																			"nativeSrc": "11209:63:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11209:63:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "11202:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "11202:3:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11285:72:11",
																		"nodeType": "YulAssignment",
																		"src": "11285:72:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "11350:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "11350:6:11"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_calldata_ptr",
																				"nativeSrc": "11295:54:11",
																				"nodeType": "YulIdentifier",
																				"src": "11295:54:11"
																			},
																			"nativeSrc": "11295:62:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11295:62:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "11285:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11285:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "11074:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11074:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11077:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11077:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11071:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "11071:2:11"
																},
																"nativeSrc": "11071:13:11",
																"nodeType": "YulFunctionCall",
																"src": "11071:13:11"
															},
															"nativeSrc": "11052:315:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11085:18:11",
																"nodeType": "YulBlock",
																"src": "11085:18:11",
																"statements": [
																	{
																		"nativeSrc": "11087:14:11",
																		"nodeType": "YulAssignment",
																		"src": "11087:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "11096:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "11096:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11099:1:11",
																					"nodeType": "YulLiteral",
																					"src": "11099:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11092:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "11092:3:11"
																			},
																			"nativeSrc": "11092:9:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11092:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "11087:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "11087:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11056:14:11",
																"nodeType": "YulBlock",
																"src": "11056:14:11",
																"statements": [
																	{
																		"nativeSrc": "11058:10:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11058:10:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11067:1:11",
																			"nodeType": "YulLiteral",
																			"src": "11067:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "11062:1:11",
																				"nodeType": "YulTypedName",
																				"src": "11062:1:11",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "11052:315:11"
														},
														{
															"nativeSrc": "11376:10:11",
															"nodeType": "YulAssignment",
															"src": "11376:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "11383:3:11",
																"nodeType": "YulIdentifier",
																"src": "11383:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11376:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11376:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "10693:699:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10798:5:11",
														"nodeType": "YulTypedName",
														"src": "10798:5:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10805:6:11",
														"nodeType": "YulTypedName",
														"src": "10805:6:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10813:3:11",
														"nodeType": "YulTypedName",
														"src": "10813:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10822:3:11",
														"nodeType": "YulTypedName",
														"src": "10822:3:11",
														"type": ""
													}
												],
												"src": "10693:699:11"
											},
											{
												"body": {
													"nativeSrc": "11509:73:11",
													"nodeType": "YulBlock",
													"src": "11509:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11526:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11526:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11531:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11531:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11519:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11519:6:11"
																},
																"nativeSrc": "11519:19:11",
																"nodeType": "YulFunctionCall",
																"src": "11519:19:11"
															},
															"nativeSrc": "11519:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "11519:19:11"
														},
														{
															"nativeSrc": "11547:29:11",
															"nodeType": "YulAssignment",
															"src": "11547:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11566:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11566:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11571:4:11",
																		"nodeType": "YulLiteral",
																		"src": "11571:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11562:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11562:3:11"
																},
																"nativeSrc": "11562:14:11",
																"nodeType": "YulFunctionCall",
																"src": "11562:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11547:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "11547:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "11398:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11481:3:11",
														"nodeType": "YulTypedName",
														"src": "11481:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11486:6:11",
														"nodeType": "YulTypedName",
														"src": "11486:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11497:11:11",
														"nodeType": "YulTypedName",
														"src": "11497:11:11",
														"type": ""
													}
												],
												"src": "11398:184:11"
											},
											{
												"body": {
													"nativeSrc": "11677:28:11",
													"nodeType": "YulBlock",
													"src": "11677:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11694:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11694:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11697:1:11",
																		"nodeType": "YulLiteral",
																		"src": "11697:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11687:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11687:6:11"
																},
																"nativeSrc": "11687:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11687:12:11"
															},
															"nativeSrc": "11687:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "11687:12:11"
														}
													]
												},
												"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
												"nativeSrc": "11588:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "11588:117:11"
											},
											{
												"body": {
													"nativeSrc": "11762:48:11",
													"nodeType": "YulBlock",
													"src": "11762:48:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "11786:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11786:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "11791:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11791:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11796:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11796:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "11773:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "11773:12:11"
																},
																"nativeSrc": "11773:30:11",
																"nodeType": "YulFunctionCall",
																"src": "11773:30:11"
															},
															"nativeSrc": "11773:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "11773:30:11"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nativeSrc": "11711:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11744:3:11",
														"nodeType": "YulTypedName",
														"src": "11744:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "11749:3:11",
														"nodeType": "YulTypedName",
														"src": "11749:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11754:6:11",
														"nodeType": "YulTypedName",
														"src": "11754:6:11",
														"type": ""
													}
												],
												"src": "11711:99:11"
											},
											{
												"body": {
													"nativeSrc": "11978:405:11",
													"nodeType": "YulBlock",
													"src": "11978:405:11",
													"statements": [
														{
															"nativeSrc": "11988:93:11",
															"nodeType": "YulAssignment",
															"src": "11988:93:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12069:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12069:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12074:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12074:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "11995:73:11",
																	"nodeType": "YulIdentifier",
																	"src": "11995:73:11"
																},
																"nativeSrc": "11995:86:11",
																"nodeType": "YulFunctionCall",
																"src": "11995:86:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11988:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11988:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12173:83:11",
																"nodeType": "YulBlock",
																"src": "12173:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
																				"nativeSrc": "12175:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "12175:77:11"
																			},
																			"nativeSrc": "12175:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12175:79:11"
																		},
																		"nativeSrc": "12175:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12175:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12097:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12097:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12105:66:11",
																		"nodeType": "YulLiteral",
																		"src": "12105:66:11",
																		"type": "",
																		"value": "0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12094:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "12094:2:11"
																},
																"nativeSrc": "12094:78:11",
																"nodeType": "YulFunctionCall",
																"src": "12094:78:11"
															},
															"nativeSrc": "12091:165:11",
															"nodeType": "YulIf",
															"src": "12091:165:11"
														},
														{
															"nativeSrc": "12265:27:11",
															"nodeType": "YulAssignment",
															"src": "12265:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12279:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12279:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12287:4:11",
																		"nodeType": "YulLiteral",
																		"src": "12287:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12275:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12275:3:11"
																},
																"nativeSrc": "12275:17:11",
																"nodeType": "YulFunctionCall",
																"src": "12275:17:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12265:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12265:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "12326:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "12326:5:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12333:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12333:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12338:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12338:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nativeSrc": "12302:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "12302:23:11"
																},
																"nativeSrc": "12302:43:11",
																"nodeType": "YulFunctionCall",
																"src": "12302:43:11"
															},
															"nativeSrc": "12302:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "12302:43:11"
														},
														{
															"nativeSrc": "12354:23:11",
															"nodeType": "YulAssignment",
															"src": "12354:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12365:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12365:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12370:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12370:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12361:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12361:3:11"
																},
																"nativeSrc": "12361:16:11",
																"nodeType": "YulFunctionCall",
																"src": "12361:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12354:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12354:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "11846:537:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "11951:5:11",
														"nodeType": "YulTypedName",
														"src": "11951:5:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11958:6:11",
														"nodeType": "YulTypedName",
														"src": "11958:6:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11966:3:11",
														"nodeType": "YulTypedName",
														"src": "11966:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11974:3:11",
														"nodeType": "YulTypedName",
														"src": "11974:3:11",
														"type": ""
													}
												],
												"src": "11846:537:11"
											},
											{
												"body": {
													"nativeSrc": "12635:428:11",
													"nodeType": "YulBlock",
													"src": "12635:428:11",
													"statements": [
														{
															"nativeSrc": "12645:26:11",
															"nodeType": "YulAssignment",
															"src": "12645:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12657:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12657:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12668:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12668:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12653:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12653:3:11"
																},
																"nativeSrc": "12653:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12653:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12645:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12645:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12692:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12692:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12703:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12703:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12688:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12688:3:11"
																		},
																		"nativeSrc": "12688:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12688:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12711:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "12711:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12717:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12717:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12707:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12707:3:11"
																		},
																		"nativeSrc": "12707:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12707:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12681:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12681:6:11"
																},
																"nativeSrc": "12681:47:11",
																"nodeType": "YulFunctionCall",
																"src": "12681:47:11"
															},
															"nativeSrc": "12681:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "12681:47:11"
														},
														{
															"nativeSrc": "12737:126:11",
															"nodeType": "YulAssignment",
															"src": "12737:126:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12841:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12841:6:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12849:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12849:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "12858:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12858:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "12745:95:11",
																	"nodeType": "YulIdentifier",
																	"src": "12745:95:11"
																},
																"nativeSrc": "12745:118:11",
																"nodeType": "YulFunctionCall",
																"src": "12745:118:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12737:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12737:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12884:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12884:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12895:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12895:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12880:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12880:3:11"
																		},
																		"nativeSrc": "12880:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12880:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12904:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "12904:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12910:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12910:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12900:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12900:3:11"
																		},
																		"nativeSrc": "12900:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12900:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12873:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12873:6:11"
																},
																"nativeSrc": "12873:48:11",
																"nodeType": "YulFunctionCall",
																"src": "12873:48:11"
															},
															"nativeSrc": "12873:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "12873:48:11"
														},
														{
															"nativeSrc": "12930:126:11",
															"nodeType": "YulAssignment",
															"src": "12930:126:11",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13034:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13034:6:11"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "13042:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13042:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13051:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "13051:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "12938:95:11",
																	"nodeType": "YulIdentifier",
																	"src": "12938:95:11"
																},
																"nativeSrc": "12938:118:11",
																"nodeType": "YulFunctionCall",
																"src": "12938:118:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12930:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12930:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "12389:674:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12583:9:11",
														"nodeType": "YulTypedName",
														"src": "12583:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12595:6:11",
														"nodeType": "YulTypedName",
														"src": "12595:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12603:6:11",
														"nodeType": "YulTypedName",
														"src": "12603:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12611:6:11",
														"nodeType": "YulTypedName",
														"src": "12611:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12619:6:11",
														"nodeType": "YulTypedName",
														"src": "12619:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12630:4:11",
														"nodeType": "YulTypedName",
														"src": "12630:4:11",
														"type": ""
													}
												],
												"src": "12389:674:11"
											},
											{
												"body": {
													"nativeSrc": "13134:53:11",
													"nodeType": "YulBlock",
													"src": "13134:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13151:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13151:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13174:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "13174:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "13156:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "13156:17:11"
																		},
																		"nativeSrc": "13156:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13156:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13144:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13144:6:11"
																},
																"nativeSrc": "13144:37:11",
																"nodeType": "YulFunctionCall",
																"src": "13144:37:11"
															},
															"nativeSrc": "13144:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "13144:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "13069:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13122:5:11",
														"nodeType": "YulTypedName",
														"src": "13122:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13129:3:11",
														"nodeType": "YulTypedName",
														"src": "13129:3:11",
														"type": ""
													}
												],
												"src": "13069:118:11"
											},
											{
												"body": {
													"nativeSrc": "13403:454:11",
													"nodeType": "YulBlock",
													"src": "13403:454:11",
													"statements": [
														{
															"nativeSrc": "13413:27:11",
															"nodeType": "YulAssignment",
															"src": "13413:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13425:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13425:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13436:3:11",
																		"nodeType": "YulLiteral",
																		"src": "13436:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13421:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13421:3:11"
																},
																"nativeSrc": "13421:19:11",
																"nodeType": "YulFunctionCall",
																"src": "13421:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13413:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13413:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13494:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13494:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13507:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13507:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13518:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13518:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13503:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13503:3:11"
																		},
																		"nativeSrc": "13503:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13503:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13450:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13450:43:11"
																},
																"nativeSrc": "13450:71:11",
																"nodeType": "YulFunctionCall",
																"src": "13450:71:11"
															},
															"nativeSrc": "13450:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "13450:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13575:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13575:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13588:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13588:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13599:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13599:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13584:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13584:3:11"
																		},
																		"nativeSrc": "13584:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13584:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13531:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13531:43:11"
																},
																"nativeSrc": "13531:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13531:72:11"
															},
															"nativeSrc": "13531:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13531:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13657:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13657:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13670:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13670:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13681:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13681:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13666:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13666:3:11"
																		},
																		"nativeSrc": "13666:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13666:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13613:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13613:43:11"
																},
																"nativeSrc": "13613:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13613:72:11"
															},
															"nativeSrc": "13613:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13613:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13739:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13739:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13752:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13752:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13763:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13763:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13748:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13748:3:11"
																		},
																		"nativeSrc": "13748:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13748:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13695:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13695:43:11"
																},
																"nativeSrc": "13695:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13695:72:11"
															},
															"nativeSrc": "13695:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13695:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "13821:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13821:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13834:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13834:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13845:3:11",
																				"nodeType": "YulLiteral",
																				"src": "13845:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13830:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13830:3:11"
																		},
																		"nativeSrc": "13830:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13830:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13777:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13777:43:11"
																},
																"nativeSrc": "13777:73:11",
																"nodeType": "YulFunctionCall",
																"src": "13777:73:11"
															},
															"nativeSrc": "13777:73:11",
															"nodeType": "YulExpressionStatement",
															"src": "13777:73:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13193:664:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13343:9:11",
														"nodeType": "YulTypedName",
														"src": "13343:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "13355:6:11",
														"nodeType": "YulTypedName",
														"src": "13355:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13363:6:11",
														"nodeType": "YulTypedName",
														"src": "13363:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13371:6:11",
														"nodeType": "YulTypedName",
														"src": "13371:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13379:6:11",
														"nodeType": "YulTypedName",
														"src": "13379:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13387:6:11",
														"nodeType": "YulTypedName",
														"src": "13387:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13398:4:11",
														"nodeType": "YulTypedName",
														"src": "13398:4:11",
														"type": ""
													}
												],
												"src": "13193:664:11"
											},
											{
												"body": {
													"nativeSrc": "14017:288:11",
													"nodeType": "YulBlock",
													"src": "14017:288:11",
													"statements": [
														{
															"nativeSrc": "14027:26:11",
															"nodeType": "YulAssignment",
															"src": "14027:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14039:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14039:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14050:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14050:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14035:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14035:3:11"
																},
																"nativeSrc": "14035:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14035:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14027:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14027:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14107:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14107:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14120:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14120:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14131:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14131:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14116:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14116:3:11"
																		},
																		"nativeSrc": "14116:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14116:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14063:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "14063:43:11"
																},
																"nativeSrc": "14063:71:11",
																"nodeType": "YulFunctionCall",
																"src": "14063:71:11"
															},
															"nativeSrc": "14063:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "14063:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14188:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14188:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14201:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14201:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14212:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14212:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14197:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14197:3:11"
																		},
																		"nativeSrc": "14197:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14197:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14144:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "14144:43:11"
																},
																"nativeSrc": "14144:72:11",
																"nodeType": "YulFunctionCall",
																"src": "14144:72:11"
															},
															"nativeSrc": "14144:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "14144:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14270:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14270:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14283:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14283:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14294:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14294:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14279:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14279:3:11"
																		},
																		"nativeSrc": "14279:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14279:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14226:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "14226:43:11"
																},
																"nativeSrc": "14226:72:11",
																"nodeType": "YulFunctionCall",
																"src": "14226:72:11"
															},
															"nativeSrc": "14226:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "14226:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13863:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13973:9:11",
														"nodeType": "YulTypedName",
														"src": "13973:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13985:6:11",
														"nodeType": "YulTypedName",
														"src": "13985:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13993:6:11",
														"nodeType": "YulTypedName",
														"src": "13993:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14001:6:11",
														"nodeType": "YulTypedName",
														"src": "14001:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14012:4:11",
														"nodeType": "YulTypedName",
														"src": "14012:4:11",
														"type": ""
													}
												],
												"src": "13863:442:11"
											},
											{
												"body": {
													"nativeSrc": "14409:124:11",
													"nodeType": "YulBlock",
													"src": "14409:124:11",
													"statements": [
														{
															"nativeSrc": "14419:26:11",
															"nodeType": "YulAssignment",
															"src": "14419:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14431:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14431:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14442:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14442:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14427:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14427:3:11"
																},
																"nativeSrc": "14427:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14427:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14419:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14419:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14499:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14499:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14512:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14512:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14523:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14523:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14508:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14508:3:11"
																		},
																		"nativeSrc": "14508:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14508:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14455:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "14455:43:11"
																},
																"nativeSrc": "14455:71:11",
																"nodeType": "YulFunctionCall",
																"src": "14455:71:11"
															},
															"nativeSrc": "14455:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "14455:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14311:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14381:9:11",
														"nodeType": "YulTypedName",
														"src": "14381:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14393:6:11",
														"nodeType": "YulTypedName",
														"src": "14393:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14404:4:11",
														"nodeType": "YulTypedName",
														"src": "14404:4:11",
														"type": ""
													}
												],
												"src": "14311:222:11"
											},
											{
												"body": {
													"nativeSrc": "14665:206:11",
													"nodeType": "YulBlock",
													"src": "14665:206:11",
													"statements": [
														{
															"nativeSrc": "14675:26:11",
															"nodeType": "YulAssignment",
															"src": "14675:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14687:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14687:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14698:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14698:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14683:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14683:3:11"
																},
																"nativeSrc": "14683:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14683:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14675:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14675:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14755:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14755:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14768:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14768:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14779:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14779:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14764:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14764:3:11"
																		},
																		"nativeSrc": "14764:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14764:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14711:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "14711:43:11"
																},
																"nativeSrc": "14711:71:11",
																"nodeType": "YulFunctionCall",
																"src": "14711:71:11"
															},
															"nativeSrc": "14711:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "14711:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14836:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14836:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14849:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14849:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14860:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14860:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14845:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14845:3:11"
																		},
																		"nativeSrc": "14845:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14845:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14792:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "14792:43:11"
																},
																"nativeSrc": "14792:72:11",
																"nodeType": "YulFunctionCall",
																"src": "14792:72:11"
															},
															"nativeSrc": "14792:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "14792:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "14539:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14629:9:11",
														"nodeType": "YulTypedName",
														"src": "14629:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14641:6:11",
														"nodeType": "YulTypedName",
														"src": "14641:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14649:6:11",
														"nodeType": "YulTypedName",
														"src": "14649:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14660:4:11",
														"nodeType": "YulTypedName",
														"src": "14660:4:11",
														"type": ""
													}
												],
												"src": "14539:332:11"
											},
											{
												"body": {
													"nativeSrc": "14917:76:11",
													"nodeType": "YulBlock",
													"src": "14917:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "14971:16:11",
																"nodeType": "YulBlock",
																"src": "14971:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14980:1:11",
																					"nodeType": "YulLiteral",
																					"src": "14980:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14983:1:11",
																					"nodeType": "YulLiteral",
																					"src": "14983:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14973:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14973:6:11"
																			},
																			"nativeSrc": "14973:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14973:12:11"
																		},
																		"nativeSrc": "14973:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14973:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14940:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "14940:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14962:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "14962:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "14947:14:11",
																					"nodeType": "YulIdentifier",
																					"src": "14947:14:11"
																				},
																				"nativeSrc": "14947:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "14947:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14937:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "14937:2:11"
																		},
																		"nativeSrc": "14937:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14937:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14930:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14930:6:11"
																},
																"nativeSrc": "14930:40:11",
																"nodeType": "YulFunctionCall",
																"src": "14930:40:11"
															},
															"nativeSrc": "14927:60:11",
															"nodeType": "YulIf",
															"src": "14927:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "14877:116:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14910:5:11",
														"nodeType": "YulTypedName",
														"src": "14910:5:11",
														"type": ""
													}
												],
												"src": "14877:116:11"
											},
											{
												"body": {
													"nativeSrc": "15059:77:11",
													"nodeType": "YulBlock",
													"src": "15059:77:11",
													"statements": [
														{
															"nativeSrc": "15069:22:11",
															"nodeType": "YulAssignment",
															"src": "15069:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15084:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15084:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15078:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "15078:5:11"
																},
																"nativeSrc": "15078:13:11",
																"nodeType": "YulFunctionCall",
																"src": "15078:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15069:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "15069:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15124:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "15124:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "15100:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "15100:23:11"
																},
																"nativeSrc": "15100:30:11",
																"nodeType": "YulFunctionCall",
																"src": "15100:30:11"
															},
															"nativeSrc": "15100:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "15100:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "14999:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15037:6:11",
														"nodeType": "YulTypedName",
														"src": "15037:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15045:3:11",
														"nodeType": "YulTypedName",
														"src": "15045:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15053:5:11",
														"nodeType": "YulTypedName",
														"src": "15053:5:11",
														"type": ""
													}
												],
												"src": "14999:137:11"
											},
											{
												"body": {
													"nativeSrc": "15216:271:11",
													"nodeType": "YulBlock",
													"src": "15216:271:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "15262:83:11",
																"nodeType": "YulBlock",
																"src": "15262:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15264:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "15264:77:11"
																			},
																			"nativeSrc": "15264:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "15264:79:11"
																		},
																		"nativeSrc": "15264:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "15264:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15237:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "15237:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15246:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15246:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15233:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15233:3:11"
																		},
																		"nativeSrc": "15233:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15233:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15258:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15258:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15229:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15229:3:11"
																},
																"nativeSrc": "15229:32:11",
																"nodeType": "YulFunctionCall",
																"src": "15229:32:11"
															},
															"nativeSrc": "15226:119:11",
															"nodeType": "YulIf",
															"src": "15226:119:11"
														},
														{
															"nativeSrc": "15355:125:11",
															"nodeType": "YulBlock",
															"src": "15355:125:11",
															"statements": [
																{
																	"nativeSrc": "15370:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15370:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15384:1:11",
																		"nodeType": "YulLiteral",
																		"src": "15384:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15374:6:11",
																			"nodeType": "YulTypedName",
																			"src": "15374:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15399:71:11",
																	"nodeType": "YulAssignment",
																	"src": "15399:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15442:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "15442:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15453:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "15453:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15438:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "15438:3:11"
																				},
																				"nativeSrc": "15438:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "15438:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15462:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "15462:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "15409:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "15409:28:11"
																		},
																		"nativeSrc": "15409:61:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15409:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15399:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "15399:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "15142:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15186:9:11",
														"nodeType": "YulTypedName",
														"src": "15186:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15197:7:11",
														"nodeType": "YulTypedName",
														"src": "15197:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15209:6:11",
														"nodeType": "YulTypedName",
														"src": "15209:6:11",
														"type": ""
													}
												],
												"src": "15142:345:11"
											},
											{
												"body": {
													"nativeSrc": "15619:206:11",
													"nodeType": "YulBlock",
													"src": "15619:206:11",
													"statements": [
														{
															"nativeSrc": "15629:26:11",
															"nodeType": "YulAssignment",
															"src": "15629:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15641:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15641:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15652:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15652:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15637:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15637:3:11"
																},
																"nativeSrc": "15637:18:11",
																"nodeType": "YulFunctionCall",
																"src": "15637:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15629:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15629:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15709:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15709:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15722:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15722:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15733:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15733:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15718:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15718:3:11"
																		},
																		"nativeSrc": "15718:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15718:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15665:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "15665:43:11"
																},
																"nativeSrc": "15665:71:11",
																"nodeType": "YulFunctionCall",
																"src": "15665:71:11"
															},
															"nativeSrc": "15665:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "15665:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15790:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15790:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15803:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15803:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15814:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15814:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15799:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15799:3:11"
																		},
																		"nativeSrc": "15799:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15799:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15746:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "15746:43:11"
																},
																"nativeSrc": "15746:72:11",
																"nodeType": "YulFunctionCall",
																"src": "15746:72:11"
															},
															"nativeSrc": "15746:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "15746:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15493:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15583:9:11",
														"nodeType": "YulTypedName",
														"src": "15583:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15595:6:11",
														"nodeType": "YulTypedName",
														"src": "15595:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15603:6:11",
														"nodeType": "YulTypedName",
														"src": "15603:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15614:4:11",
														"nodeType": "YulTypedName",
														"src": "15614:4:11",
														"type": ""
													}
												],
												"src": "15493:332:11"
											},
											{
												"body": {
													"nativeSrc": "15889:40:11",
													"nodeType": "YulBlock",
													"src": "15889:40:11",
													"statements": [
														{
															"nativeSrc": "15900:22:11",
															"nodeType": "YulAssignment",
															"src": "15900:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15916:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "15916:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15910:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "15910:5:11"
																},
																"nativeSrc": "15910:12:11",
																"nodeType": "YulFunctionCall",
																"src": "15910:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15900:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15900:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "15831:98:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15872:5:11",
														"nodeType": "YulTypedName",
														"src": "15872:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15882:6:11",
														"nodeType": "YulTypedName",
														"src": "15882:6:11",
														"type": ""
													}
												],
												"src": "15831:98:11"
											},
											{
												"body": {
													"nativeSrc": "16048:34:11",
													"nodeType": "YulBlock",
													"src": "16048:34:11",
													"statements": [
														{
															"nativeSrc": "16058:18:11",
															"nodeType": "YulAssignment",
															"src": "16058:18:11",
															"value": {
																"name": "pos",
																"nativeSrc": "16073:3:11",
																"nodeType": "YulIdentifier",
																"src": "16073:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16058:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "16058:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15935:147:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16020:3:11",
														"nodeType": "YulTypedName",
														"src": "16020:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16025:6:11",
														"nodeType": "YulTypedName",
														"src": "16025:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16036:11:11",
														"nodeType": "YulTypedName",
														"src": "16036:11:11",
														"type": ""
													}
												],
												"src": "15935:147:11"
											},
											{
												"body": {
													"nativeSrc": "16150:77:11",
													"nodeType": "YulBlock",
													"src": "16150:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "16167:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16167:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "16172:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16172:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16177:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16177:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "16161:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "16161:5:11"
																},
																"nativeSrc": "16161:23:11",
																"nodeType": "YulFunctionCall",
																"src": "16161:23:11"
															},
															"nativeSrc": "16161:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "16161:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "16204:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "16204:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "16209:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "16209:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16200:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16200:3:11"
																		},
																		"nativeSrc": "16200:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16200:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16218:1:11",
																		"nodeType": "YulLiteral",
																		"src": "16218:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16193:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16193:6:11"
																},
																"nativeSrc": "16193:27:11",
																"nodeType": "YulFunctionCall",
																"src": "16193:27:11"
															},
															"nativeSrc": "16193:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "16193:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "16088:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "16132:3:11",
														"nodeType": "YulTypedName",
														"src": "16132:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "16137:3:11",
														"nodeType": "YulTypedName",
														"src": "16137:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16142:6:11",
														"nodeType": "YulTypedName",
														"src": "16142:6:11",
														"type": ""
													}
												],
												"src": "16088:139:11"
											},
											{
												"body": {
													"nativeSrc": "16341:278:11",
													"nodeType": "YulBlock",
													"src": "16341:278:11",
													"statements": [
														{
															"nativeSrc": "16351:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "16351:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16397:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "16397:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "16365:31:11",
																	"nodeType": "YulIdentifier",
																	"src": "16365:31:11"
																},
																"nativeSrc": "16365:38:11",
																"nodeType": "YulFunctionCall",
																"src": "16365:38:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16355:6:11",
																	"nodeType": "YulTypedName",
																	"src": "16355:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16412:95:11",
															"nodeType": "YulAssignment",
															"src": "16412:95:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16495:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16495:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16500:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16500:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16419:75:11",
																	"nodeType": "YulIdentifier",
																	"src": "16419:75:11"
																},
																"nativeSrc": "16419:88:11",
																"nodeType": "YulFunctionCall",
																"src": "16419:88:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16412:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16412:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16555:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "16555:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16562:4:11",
																				"nodeType": "YulLiteral",
																				"src": "16562:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16551:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16551:3:11"
																		},
																		"nativeSrc": "16551:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16551:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16569:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16569:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16574:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16574:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16516:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "16516:34:11"
																},
																"nativeSrc": "16516:65:11",
																"nodeType": "YulFunctionCall",
																"src": "16516:65:11"
															},
															"nativeSrc": "16516:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "16516:65:11"
														},
														{
															"nativeSrc": "16590:23:11",
															"nodeType": "YulAssignment",
															"src": "16590:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16601:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16601:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16606:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16606:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16597:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16597:3:11"
																},
																"nativeSrc": "16597:16:11",
																"nodeType": "YulFunctionCall",
																"src": "16597:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16590:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16590:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16233:386:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16322:5:11",
														"nodeType": "YulTypedName",
														"src": "16322:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16329:3:11",
														"nodeType": "YulTypedName",
														"src": "16329:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16337:3:11",
														"nodeType": "YulTypedName",
														"src": "16337:3:11",
														"type": ""
													}
												],
												"src": "16233:386:11"
											},
											{
												"body": {
													"nativeSrc": "16759:137:11",
													"nodeType": "YulBlock",
													"src": "16759:137:11",
													"statements": [
														{
															"nativeSrc": "16770:100:11",
															"nodeType": "YulAssignment",
															"src": "16770:100:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16857:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16857:6:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16866:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16866:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16777:79:11",
																	"nodeType": "YulIdentifier",
																	"src": "16777:79:11"
																},
																"nativeSrc": "16777:93:11",
																"nodeType": "YulFunctionCall",
																"src": "16777:93:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16770:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16770:3:11"
																}
															]
														},
														{
															"nativeSrc": "16880:10:11",
															"nodeType": "YulAssignment",
															"src": "16880:10:11",
															"value": {
																"name": "pos",
																"nativeSrc": "16887:3:11",
																"nodeType": "YulIdentifier",
																"src": "16887:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16880:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16880:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16625:271:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16738:3:11",
														"nodeType": "YulTypedName",
														"src": "16738:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16744:6:11",
														"nodeType": "YulTypedName",
														"src": "16744:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16755:3:11",
														"nodeType": "YulTypedName",
														"src": "16755:3:11",
														"type": ""
													}
												],
												"src": "16625:271:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_addresst_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_calldata_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function calldata_access_t_address(baseRef, ptr) -> value {\n        value := abi_decode_t_address(ptr, add(ptr, 32))\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_calldata_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, length, pos)  -> end  {\n\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_calldata_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := calldata_access_t_address(baseRef, srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_calldata_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() {\n        revert(0, 0)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n\n        if gt(length, 0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() }\n        length := mul(length, 0x20)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_calldata_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0, value1,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xDA46098C EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xE5994905 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xF5537EDE EQ PUSH2 0x30E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x927DA105 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xCDB33B81 EQ PUSH2 0x29E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x68A37AE8 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x68A37AE8 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x68C4AC26 EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x6D69FCAF EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x76319190 EQ PUSH2 0x204 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x17E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x32A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A2 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x49E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x564 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x629 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x1623 JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x1547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x175A JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x15BA JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x1865 JUMP JUMPDEST PUSH2 0xA45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x328 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x1815 JUMP JUMPDEST PUSH2 0xC26 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x39C JUMPI POP PUSH2 0x39B DUP3 PUSH2 0xC47 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3C9 DUP3 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x3D2 DUP2 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x3DC DUP4 DUP4 PUSH2 0xCC4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3EA PUSH2 0xDAD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x44E JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x458 DUP3 DUP3 PUSH2 0xDB4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C PUSH2 0x4C8 DUP2 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x784C8F4DBF0FFEDD6E72C76501C545A70F8B203B30A26CE542BF92BA87C248A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C PUSH2 0x58E DUP2 PUSH2 0xCB0 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C910B69FE65A61F7531B9C5042B2329CA7179C77290AA7E2EB3AFA3C8511FD3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x759 PUSH2 0xE9E JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP6 DUP6 SWAP1 POP EQ PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA9854BC900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x7DA JUMPI DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x7B9 JUMPI PUSH2 0x7B8 PUSH2 0x18C9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x79B JUMP JUMPDEST POP PUSH2 0x808 CALLER ADDRESS DUP4 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 JUMPDEST DUP7 DUP7 SWAP1 POP DUP2 LT ISZERO PUSH2 0x86E JUMPI PUSH2 0x861 ADDRESS DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0x82C JUMPI PUSH2 0x82B PUSH2 0x18C9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x841 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST DUP8 DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x855 JUMPI PUSH2 0x854 PUSH2 0x18C9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0xF64 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x80A JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6F48F5CFE672B48C8D014ECF4ECB7CDD8A66519DC4E331F0C7E95F1F2183A810 DUP9 DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x8D2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x8E3 PUSH2 0x1102 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8F3 DUP3 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x8FC DUP2 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x906 DUP4 DUP4 PUSH2 0xDB4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8A35F50FA7149C607BF92648069A0D9593C88F1E12F1ABD0A0481A4A959B0681 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA38 SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0xA4D PUSH2 0xE9E JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB51 JUMPI DUP5 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x51750BC700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB48 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC17 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF64 JUMP JUMPDEST POP PUSH2 0xC20 PUSH2 0x1102 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC2E PUSH2 0xE9E JUMP JUMPDEST PUSH2 0xC3A CALLER DUP5 DUP5 DUP5 PUSH2 0xF64 JUMP JUMPDEST PUSH2 0xC42 PUSH2 0x1102 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC1 DUP2 PUSH2 0xCBC PUSH2 0xDAD JUMP JUMPDEST PUSH2 0x110B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xCCF DUP4 DUP4 PUSH2 0x629 JUMP JUMPDEST PUSH2 0xDA3 JUMPI PUSH1 0x1 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD40 PUSH2 0xDAD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xDA7 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xDBF DUP4 DUP4 PUSH2 0x629 JUMP JUMPDEST ISZERO PUSH2 0xE94 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE31 PUSH2 0xDAD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xE98 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xED9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xF5E DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF17 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x115C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFEF JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xBF16AAB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE6 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1052 JUMPI PUSH2 0x104D DUP4 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11F1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH2 0x107F DUP5 DUP5 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE2 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9AF266B6CA4909F988DC948FB50AD15153ABBE525351881BAD4FA858BE96515C DUP5 PUSH1 0x40 MLOAD PUSH2 0x10F4 SWAP2 SWAP1 PUSH2 0x168B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1115 DUP3 DUP3 PUSH2 0x629 JUMP JUMPDEST PUSH2 0x1158 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114F SWAP3 SWAP2 SWAP1 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1186 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1270 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x11AA JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x11A8 SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x11EC JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E3 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x126B DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1224 SWAP3 SWAP2 SWAP1 PUSH2 0x1BED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x115C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x127D DUP4 DUP4 PUSH0 PUSH2 0x1285 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x12CC JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C3 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x132E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1333 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1343 DUP7 DUP4 DUP4 PUSH2 0x134E JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1363 JUMPI PUSH2 0x135E DUP3 PUSH2 0x13DB JUMP JUMPDEST PUSH2 0x13D3 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1389 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x13CB JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C2 SWAP2 SWAP1 PUSH2 0x1B58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x13D4 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x13ED JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145B DUP2 PUSH2 0x1427 JUMP JUMPDEST DUP2 EQ PUSH2 0x1465 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1476 DUP2 PUSH2 0x1452 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1491 JUMPI PUSH2 0x1490 PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x149E DUP5 DUP3 DUP6 ADD PUSH2 0x1468 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BB DUP2 PUSH2 0x14A7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D4 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EC DUP2 PUSH2 0x14DA JUMP JUMPDEST DUP2 EQ PUSH2 0x14F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1507 DUP2 PUSH2 0x14E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1522 JUMPI PUSH2 0x1521 PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x152F DUP5 DUP3 DUP6 ADD PUSH2 0x14F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1541 DUP2 PUSH2 0x14DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155A PUSH0 DUP4 ADD DUP5 PUSH2 0x1538 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1589 DUP3 PUSH2 0x1560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1599 DUP2 PUSH2 0x157F JUMP JUMPDEST DUP2 EQ PUSH2 0x15A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15B4 DUP2 PUSH2 0x1590 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15D0 JUMPI PUSH2 0x15CF PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15DD DUP6 DUP3 DUP7 ADD PUSH2 0x14F9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15EE DUP6 DUP3 DUP7 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x160D JUMPI PUSH2 0x160C PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x161A DUP5 DUP3 DUP6 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1647 DUP7 DUP3 DUP8 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1658 DUP7 DUP3 DUP8 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1669 DUP7 DUP3 DUP8 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1685 DUP2 PUSH2 0x1673 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x169E PUSH0 DUP4 ADD DUP5 PUSH2 0x167C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x16C5 JUMPI PUSH2 0x16C4 PUSH2 0x16A4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E2 JUMPI PUSH2 0x16E1 PUSH2 0x16A8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x16FE JUMPI PUSH2 0x16FD PUSH2 0x16AC JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x171A JUMPI PUSH2 0x1719 PUSH2 0x16A4 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1737 JUMPI PUSH2 0x1736 PUSH2 0x16A8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1753 JUMPI PUSH2 0x1752 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1773 JUMPI PUSH2 0x1772 PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1790 JUMPI PUSH2 0x178F PUSH2 0x1423 JUMP JUMPDEST JUMPDEST PUSH2 0x179C DUP9 DUP3 DUP10 ADD PUSH2 0x16B0 JUMP JUMPDEST SWAP6 POP SWAP6 POP POP PUSH1 0x20 PUSH2 0x17AF DUP9 DUP3 DUP10 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17D0 JUMPI PUSH2 0x17CF PUSH2 0x1423 JUMP JUMPDEST JUMPDEST PUSH2 0x17DC DUP9 DUP3 DUP10 ADD PUSH2 0x1705 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x17F4 DUP2 PUSH2 0x1673 JUMP JUMPDEST DUP2 EQ PUSH2 0x17FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180F DUP2 PUSH2 0x17EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x182C JUMPI PUSH2 0x182B PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1839 DUP7 DUP3 DUP8 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x184A DUP7 DUP3 DUP8 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x185B DUP7 DUP3 DUP8 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x187D JUMPI PUSH2 0x187C PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x188A DUP8 DUP3 DUP9 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x189B DUP8 DUP3 DUP9 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18AC DUP8 DUP3 DUP9 ADD PUSH2 0x15A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x18BD DUP8 DUP3 DUP9 ADD PUSH2 0x1801 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x192D DUP3 PUSH2 0x1673 JUMP JUMPDEST SWAP2 POP PUSH2 0x1938 DUP4 PUSH2 0x1673 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1950 JUMPI PUSH2 0x194F PUSH2 0x18F6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1978 DUP2 PUSH2 0x157F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1989 DUP4 DUP4 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19A3 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19C2 DUP4 DUP6 PUSH2 0x1956 JUMP JUMPDEST SWAP4 POP PUSH2 0x19CD DUP3 PUSH2 0x1966 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1A05 JUMPI PUSH2 0x19E2 DUP3 DUP5 PUSH2 0x1995 JUMP JUMPDEST PUSH2 0x19EC DUP9 DUP3 PUSH2 0x197E JUMP JUMPDEST SWAP8 POP PUSH2 0x19F7 DUP4 PUSH2 0x19AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x19D0 JUMP JUMPDEST POP DUP6 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3A DUP4 DUP6 PUSH2 0x1A12 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1A6D JUMPI PUSH2 0x1A6C PUSH2 0x1A22 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0x1A7E DUP4 DUP6 DUP5 PUSH2 0x1A26 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AA3 DUP2 DUP7 DUP9 PUSH2 0x19B7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1AB8 DUP2 DUP5 DUP7 PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1ACC DUP2 PUSH2 0x157F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1AE5 PUSH0 DUP4 ADD DUP9 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x1AF2 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x1AFF PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x1B0C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x167C JUMP JUMPDEST PUSH2 0x1B19 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x167C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B36 PUSH0 DUP4 ADD DUP7 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x1B43 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x1B50 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x167C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6B PUSH0 DUP4 ADD DUP5 PUSH2 0x1AC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B84 PUSH0 DUP4 ADD DUP6 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x1B91 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1538 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1BA1 DUP2 PUSH2 0x14A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BAB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BBC DUP2 PUSH2 0x1B98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BD7 JUMPI PUSH2 0x1BD6 PUSH2 0x141F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BE4 DUP5 DUP3 DUP6 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C00 PUSH0 DUP4 ADD DUP6 PUSH2 0x1AC3 JUMP JUMPDEST PUSH2 0x1C0D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x167C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C40 DUP3 PUSH2 0x1C14 JUMP JUMPDEST PUSH2 0x1C4A DUP2 DUP6 PUSH2 0x1C1E JUMP JUMPDEST SWAP4 POP PUSH2 0x1C5A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C28 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C71 DUP3 DUP5 PUSH2 0x1C36 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0xFC SSTORE DUP16 EXTCODECOPY ORIGIN 0xCA 0xDF 0xD5 SWAP6 0xE1 PC PUSH1 0xD5 PUSH2 0xB374 PUSH25 0x583CB2E340DEA351C92CDC69AEF64736F6C634300081A0033 ",
							"sourceMap": "465:5375:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;600:78:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;743:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4731:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5028:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4443:156:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3102:615:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3978:207:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2406:487;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1988:150;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;3810:120::-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;600:78:10:-;646:32;600:78;:::o;743:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;4731:159::-;646:32;2464:16:0;2475:4;2464:10;:16::i;:::-;4847:4:10::1;4822:15;:22;4838:5;4822:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4877:5;4866:17;;;;;;;;;;;;4731:159:::0;;:::o;5028:165::-;646:32;2464:16:0;2475:4;2464:10;:16::i;:::-;5147:5:10::1;5122:15;:22;5138:5;5122:22;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;5180:5;5167:19;;;;;;;;;;;;5028:165:::0;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;4443:156:10:-;4532:7;4558:11;:18;4570:5;4558:18;;;;;;;;;;;;;;;:25;4577:5;4558:25;;;;;;;;;;;;;;;:34;4584:7;4558:34;;;;;;;;;;;;;;;;4551:41;;4443:156;;;;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3102:615:10:-;2356:21:7;:19;:21::i;:::-;3245:7:10::1;;:14;;3232:2;;:9;;:27;3228:61;;3268:21;;;;;;;;;;;;;;3228:61;3308:19;3346:9:::0;3341:95:::1;3365:7;;:14;;3361:1;:18;3341:95;;;3415:7;;3423:1;3415:10;;;;;;;:::i;:::-;;;;;;;;3400:25;;;;;:::i;:::-;;;3381:3;;;;;;;3341:95;;;;3446:70;3477:10;3497:4;3504:11;3453:5;3446:30;;;;:70;;;;;;:::i;:::-;3532:9;3527:120;3551:2;;:9;;3547:1;:13;3527:120;;;3581:55;3604:4;3611:2;;3614:1;3611:5;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;3618;3625:7;;3633:1;3625:10;;;;;;;:::i;:::-;;;;;;;;3581:14;:55::i;:::-;3562:3;;;;;;;3527:120;;;;3695:5;3662:48;;3679:10;3662:48;;;3691:2;;3702:7;;3662:48;;;;;;;;;:::i;:::-;;;;;;;;3218:499;2398:20:7::0;:18;:20::i;:::-;3102:615:10;;;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3978:207:10:-;4109:6;4067:11;:23;4079:10;4067:23;;;;;;;;;;;;;;;:30;4091:5;4067:30;;;;;;;;;;;;;;;:39;4098:7;4067:39;;;;;;;;;;;;;;;:48;;;;4164:5;4130:48;;4155:7;4130:48;;4143:10;4130:48;;;4171:6;4130:48;;;;;;:::i;:::-;;;;;;;;3978:207;;;:::o;2406:487::-;2356:21:7;:19;:21::i;:::-;2522:24:10::1;2549:11;:17;2561:4;2549:17;;;;;;;;;;;;;;;:24;2567:5;2549:24;;;;;;;;;;;;;;;:36;2574:10;2549:36;;;;;;;;;;;;;;;;2522:63;;2618:6;2599:16;:25;2595:135;;;2669:4;2675:10;2687:5;2694:6;2702:16;2647:72;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2595:135;2821:6;2802:16;:25;2763:11;:17;2775:4;2763:17;;;;;;;;;;;;;;;:24;2781:5;2763:24;;;;;;;;;;;;;;;:36;2788:10;2763:36;;;;;;;;;;;;;;;:64;;;;2847:39;2862:4;2868:2;2872:5;2879:6;2847:14;:39::i;:::-;2512:381;2398:20:7::0;:18;:20::i;:::-;2406:487:10;;;;:::o;1988:150::-;2356:21:7;:19;:21::i;:::-;2086:45:10::1;2101:10;2113:2;2117:5;2124:6;2086:14;:45::i;:::-;2398:20:7::0;:18;:20::i;:::-;1988:150:10;;;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;2431:307:7:-;1755:1;2558:7;;:18;2554:86;;2599:30;;;;;;;;;;;;;;2554:86;1755:1;2714:7;:17;;;;2431:307::o;1702:188:4:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;5437:401:10:-;5541:15;:22;5557:5;5541:22;;;;;;;;;;;;;;;;;;;;;;;;;5536:59;;5589:5;5572:23;;;;;;;;;;;:::i;:::-;;;;;;;;5536:59;5626:4;5610:21;;:4;:21;;;5606:169;;5647:38;5674:2;5678:6;5654:5;5647:26;;;;:38;;;;;:::i;:::-;5606:169;;;5716:48;5747:4;5753:2;5757:6;5723:5;5716:30;;;;:48;;;;;;:::i;:::-;5606:169;5817:5;5790:41;;5813:2;5790:41;;5807:4;5790:41;;;5824:6;5790:41;;;;;;:::i;:::-;;;;;;;;5437:401;;;;:::o;2744:208:7:-;1713:1;2924:7;:21;;;;2744:208::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;4059:629:4:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;1303:160::-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;2705:151:5:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:11;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:96::-;2730:7;2759:24;2777:5;2759:24;:::i;:::-;2748:35;;2693:96;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:329::-;3607:6;3656:2;3644:9;3635:7;3631:23;3627:32;3624:119;;;3662:79;;:::i;:::-;3624:119;3782:1;3807:53;3852:7;3843:6;3832:9;3828:22;3807:53;:::i;:::-;3797:63;;3753:117;3548:329;;;;:::o;3883:619::-;3960:6;3968;3976;4025:2;4013:9;4004:7;4000:23;3996:32;3993:119;;;4031:79;;:::i;:::-;3993:119;4151:1;4176:53;4221:7;4212:6;4201:9;4197:22;4176:53;:::i;:::-;4166:63;;4122:117;4278:2;4304:53;4349:7;4340:6;4329:9;4325:22;4304:53;:::i;:::-;4294:63;;4249:118;4406:2;4432:53;4477:7;4468:6;4457:9;4453:22;4432:53;:::i;:::-;4422:63;;4377:118;3883:619;;;;;:::o;4508:77::-;4545:7;4574:5;4563:16;;4508:77;;;:::o;4591:118::-;4678:24;4696:5;4678:24;:::i;:::-;4673:3;4666:37;4591:118;;:::o;4715:222::-;4808:4;4846:2;4835:9;4831:18;4823:26;;4859:71;4927:1;4916:9;4912:17;4903:6;4859:71;:::i;:::-;4715:222;;;;:::o;4943:117::-;5052:1;5049;5042:12;5066:117;5175:1;5172;5165:12;5189:117;5298:1;5295;5288:12;5329:568;5402:8;5412:6;5462:3;5455:4;5447:6;5443:17;5439:27;5429:122;;5470:79;;:::i;:::-;5429:122;5583:6;5570:20;5560:30;;5613:18;5605:6;5602:30;5599:117;;;5635:79;;:::i;:::-;5599:117;5749:4;5741:6;5737:17;5725:29;;5803:3;5795:4;5787:6;5783:17;5773:8;5769:32;5766:41;5763:128;;;5810:79;;:::i;:::-;5763:128;5329:568;;;;;:::o;5920:::-;5993:8;6003:6;6053:3;6046:4;6038:6;6034:17;6030:27;6020:122;;6061:79;;:::i;:::-;6020:122;6174:6;6161:20;6151:30;;6204:18;6196:6;6193:30;6190:117;;;6226:79;;:::i;:::-;6190:117;6340:4;6332:6;6328:17;6316:29;;6394:3;6386:4;6378:6;6374:17;6364:8;6360:32;6357:41;6354:128;;;6401:79;;:::i;:::-;6354:128;5920:568;;;;;:::o;6494:1079::-;6625:6;6633;6641;6649;6657;6706:2;6694:9;6685:7;6681:23;6677:32;6674:119;;;6712:79;;:::i;:::-;6674:119;6860:1;6849:9;6845:17;6832:31;6890:18;6882:6;6879:30;6876:117;;;6912:79;;:::i;:::-;6876:117;7025:80;7097:7;7088:6;7077:9;7073:22;7025:80;:::i;:::-;7007:98;;;;6803:312;7154:2;7180:53;7225:7;7216:6;7205:9;7201:22;7180:53;:::i;:::-;7170:63;;7125:118;7310:2;7299:9;7295:18;7282:32;7341:18;7333:6;7330:30;7327:117;;;7363:79;;:::i;:::-;7327:117;7476:80;7548:7;7539:6;7528:9;7524:22;7476:80;:::i;:::-;7458:98;;;;7253:313;6494:1079;;;;;;;;:::o;7579:122::-;7652:24;7670:5;7652:24;:::i;:::-;7645:5;7642:35;7632:63;;7691:1;7688;7681:12;7632:63;7579:122;:::o;7707:139::-;7753:5;7791:6;7778:20;7769:29;;7807:33;7834:5;7807:33;:::i;:::-;7707:139;;;;:::o;7852:619::-;7929:6;7937;7945;7994:2;7982:9;7973:7;7969:23;7965:32;7962:119;;;8000:79;;:::i;:::-;7962:119;8120:1;8145:53;8190:7;8181:6;8170:9;8166:22;8145:53;:::i;:::-;8135:63;;8091:117;8247:2;8273:53;8318:7;8309:6;8298:9;8294:22;8273:53;:::i;:::-;8263:63;;8218:118;8375:2;8401:53;8446:7;8437:6;8426:9;8422:22;8401:53;:::i;:::-;8391:63;;8346:118;7852:619;;;;;:::o;8477:765::-;8563:6;8571;8579;8587;8636:3;8624:9;8615:7;8611:23;8607:33;8604:120;;;8643:79;;:::i;:::-;8604:120;8763:1;8788:53;8833:7;8824:6;8813:9;8809:22;8788:53;:::i;:::-;8778:63;;8734:117;8890:2;8916:53;8961:7;8952:6;8941:9;8937:22;8916:53;:::i;:::-;8906:63;;8861:118;9018:2;9044:53;9089:7;9080:6;9069:9;9065:22;9044:53;:::i;:::-;9034:63;;8989:118;9146:2;9172:53;9217:7;9208:6;9197:9;9193:22;9172:53;:::i;:::-;9162:63;;9117:118;8477:765;;;;;;;:::o;9248:180::-;9296:77;9293:1;9286:88;9393:4;9390:1;9383:15;9417:4;9414:1;9407:15;9434:180;9482:77;9479:1;9472:88;9579:4;9576:1;9569:15;9603:4;9600:1;9593:15;9620:191;9660:3;9679:20;9697:1;9679:20;:::i;:::-;9674:25;;9713:20;9731:1;9713:20;:::i;:::-;9708:25;;9756:1;9753;9749:9;9742:16;;9777:3;9774:1;9771:10;9768:36;;;9784:18;;:::i;:::-;9768:36;9620:191;;;;:::o;9817:184::-;9916:11;9950:6;9945:3;9938:19;9990:4;9985:3;9981:14;9966:29;;9817:184;;;;:::o;10007:102::-;10076:4;10099:3;10091:11;;10007:102;;;:::o;10115:108::-;10192:24;10210:5;10192:24;:::i;:::-;10187:3;10180:37;10115:108;;:::o;10229:179::-;10298:10;10319:46;10361:3;10353:6;10319:46;:::i;:::-;10397:4;10392:3;10388:14;10374:28;;10229:179;;;;:::o;10414:122::-;10466:5;10491:39;10526:2;10521:3;10517:12;10512:3;10491:39;:::i;:::-;10482:48;;10414:122;;;;:::o;10542:115::-;10614:4;10646;10641:3;10637:14;10629:22;;10542:115;;;:::o;10693:699::-;10822:3;10845:86;10924:6;10919:3;10845:86;:::i;:::-;10838:93;;10955:58;11007:5;10955:58;:::i;:::-;11036:7;11067:1;11052:315;11077:6;11074:1;11071:13;11052:315;;;11147:42;11182:6;11173:7;11147:42;:::i;:::-;11209:63;11268:3;11253:13;11209:63;:::i;:::-;11202:70;;11295:62;11350:6;11295:62;:::i;:::-;11285:72;;11112:255;11099:1;11096;11092:9;11087:14;;11052:315;;;11056:14;11383:3;11376:10;;10827:565;;10693:699;;;;;:::o;11398:184::-;11497:11;11531:6;11526:3;11519:19;11571:4;11566:3;11562:14;11547:29;;11398:184;;;;:::o;11588:117::-;11697:1;11694;11687:12;11711:99;11796:6;11791:3;11786;11773:30;11711:99;;;:::o;11846:537::-;11974:3;11995:86;12074:6;12069:3;11995:86;:::i;:::-;11988:93;;12105:66;12097:6;12094:78;12091:165;;;12175:79;;:::i;:::-;12091:165;12287:4;12279:6;12275:17;12265:27;;12302:43;12338:6;12333:3;12326:5;12302:43;:::i;:::-;12370:6;12365:3;12361:16;12354:23;;11846:537;;;;;:::o;12389:674::-;12630:4;12668:2;12657:9;12653:18;12645:26;;12717:9;12711:4;12707:20;12703:1;12692:9;12688:17;12681:47;12745:118;12858:4;12849:6;12841;12745:118;:::i;:::-;12737:126;;12910:9;12904:4;12900:20;12895:2;12884:9;12880:18;12873:48;12938:118;13051:4;13042:6;13034;12938:118;:::i;:::-;12930:126;;12389:674;;;;;;;:::o;13069:118::-;13156:24;13174:5;13156:24;:::i;:::-;13151:3;13144:37;13069:118;;:::o;13193:664::-;13398:4;13436:3;13425:9;13421:19;13413:27;;13450:71;13518:1;13507:9;13503:17;13494:6;13450:71;:::i;:::-;13531:72;13599:2;13588:9;13584:18;13575:6;13531:72;:::i;:::-;13613;13681:2;13670:9;13666:18;13657:6;13613:72;:::i;:::-;13695;13763:2;13752:9;13748:18;13739:6;13695:72;:::i;:::-;13777:73;13845:3;13834:9;13830:19;13821:6;13777:73;:::i;:::-;13193:664;;;;;;;;:::o;13863:442::-;14012:4;14050:2;14039:9;14035:18;14027:26;;14063:71;14131:1;14120:9;14116:17;14107:6;14063:71;:::i;:::-;14144:72;14212:2;14201:9;14197:18;14188:6;14144:72;:::i;:::-;14226;14294:2;14283:9;14279:18;14270:6;14226:72;:::i;:::-;13863:442;;;;;;:::o;14311:222::-;14404:4;14442:2;14431:9;14427:18;14419:26;;14455:71;14523:1;14512:9;14508:17;14499:6;14455:71;:::i;:::-;14311:222;;;;:::o;14539:332::-;14660:4;14698:2;14687:9;14683:18;14675:26;;14711:71;14779:1;14768:9;14764:17;14755:6;14711:71;:::i;:::-;14792:72;14860:2;14849:9;14845:18;14836:6;14792:72;:::i;:::-;14539:332;;;;;:::o;14877:116::-;14947:21;14962:5;14947:21;:::i;:::-;14940:5;14937:32;14927:60;;14983:1;14980;14973:12;14927:60;14877:116;:::o;14999:137::-;15053:5;15084:6;15078:13;15069:22;;15100:30;15124:5;15100:30;:::i;:::-;14999:137;;;;:::o;15142:345::-;15209:6;15258:2;15246:9;15237:7;15233:23;15229:32;15226:119;;;15264:79;;:::i;:::-;15226:119;15384:1;15409:61;15462:7;15453:6;15442:9;15438:22;15409:61;:::i;:::-;15399:71;;15355:125;15142:345;;;;:::o;15493:332::-;15614:4;15652:2;15641:9;15637:18;15629:26;;15665:71;15733:1;15722:9;15718:17;15709:6;15665:71;:::i;:::-;15746:72;15814:2;15803:9;15799:18;15790:6;15746:72;:::i;:::-;15493:332;;;;;:::o;15831:98::-;15882:6;15916:5;15910:12;15900:22;;15831:98;;;:::o;15935:147::-;16036:11;16073:3;16058:18;;15935:147;;;;:::o;16088:139::-;16177:6;16172:3;16167;16161:23;16218:1;16209:6;16204:3;16200:16;16193:27;16088:139;;;:::o;16233:386::-;16337:3;16365:38;16397:5;16365:38;:::i;:::-;16419:88;16500:6;16495:3;16419:88;:::i;:::-;16412:95;;16516:65;16574:6;16569:3;16562:4;16555:5;16551:16;16516:65;:::i;:::-;16606:6;16601:3;16597:16;16590:23;;16341:278;16233:386;;;;:::o;16625:271::-;16755:3;16777:93;16866:3;16857:6;16777:93;:::i;:::-;16770:100;;16887:3;16880:10;;16625:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1469200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "397",
								"TRANSFER_ADMIN_ROLE()": "348",
								"addSupportedToken(address)": "infinite",
								"allowance(address,address,address)": "infinite",
								"batchTransferToken(address[],address,uint256[])": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3145",
								"removeSupportedToken(address)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setAllowance(address,address,uint256)": "infinite",
								"supportedTokens(address)": "2878",
								"supportsInterface(bytes4)": "741",
								"transferToken(address,address,uint256)": "infinite",
								"transferTokenFrom(address,address,address,uint256)": "infinite"
							},
							"internal": {
								"_transferToken(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 465,
									"end": 5840,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 465,
									"end": 5840,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 465,
									"end": 5840,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1774,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1774,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1774,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1774,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1648,
									"end": 1774,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1774,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1648,
									"end": 1774,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1774,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1774,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1648,
									"end": 1774,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1648,
									"end": 1774,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1924,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1714,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1701,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1683,
									"end": 1701,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1703,
									"end": 1713,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1682,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 1672,
									"end": 1682,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1672,
									"end": 1682,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1714,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1672,
									"end": 1714,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1714,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1714,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 1672,
									"end": 1714,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1672,
									"end": 1714,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1724,
									"end": 1767,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 646,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C"
								},
								{
									"begin": 1756,
									"end": 1766,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1724,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 1724,
									"end": 1734,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1724,
									"end": 1734,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1724,
									"end": 1767,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1724,
									"end": 1767,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 1724,
									"end": 1767,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1724,
									"end": 1767,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1724,
									"end": 1767,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1724,
									"end": 1767,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 465,
									"end": 5840,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 465,
									"end": 5840,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 465,
									"end": 5840,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 465,
									"end": 5840,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 465,
									"end": 5840,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 465,
									"end": 5840,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 465,
									"end": 5840,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 465,
									"end": 5840,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 465,
									"end": 5840,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 465,
									"end": 5840,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 465,
									"end": 5840,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200efc558f3c32cadfd595e15860d561b374780583cb2e340dea351c92cdc69aef64736f6c634300081a0033",
									".code": [
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "DA46098C"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "E5994905"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "F5537EDE"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "927DA105"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "CDB33B81"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "68A37AE8"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "68A37AE8"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "68C4AC26"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "6D69FCAF"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "76319190"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 465,
											"end": 5840,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 600,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 600,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 600,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 600,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 600,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 600,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 600,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 678,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 600,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 600,
											"end": 678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 600,
											"end": 678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 600,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 600,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 600,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 600,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 600,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 600,
											"end": 678,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 600,
											"end": 678,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 600,
											"end": 678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 600,
											"end": 678,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 600,
											"end": 678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 600,
											"end": 678,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 743,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 743,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 743,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 4731,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4731,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 5028,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 5028,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 4443,
											"end": 4599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 4443,
											"end": 4599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4443,
											"end": 4599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 3102,
											"end": 3717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 3102,
											"end": 3717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3978,
											"end": 4185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3978,
											"end": 4185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2406,
											"end": 2893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2406,
											"end": 2893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1988,
											"end": 2138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1988,
											"end": 2138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 600,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 646,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C"
										},
										{
											"begin": 600,
											"end": 678,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 600,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 743,
											"end": 790,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 743,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 646,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4822,
											"end": 4837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4843,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4851,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4877,
											"end": 4882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4866,
											"end": 4883,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "784C8F4DBF0FFEDD6E72C76501C545A70F8B203B30A26CE542BF92BA87C248A4"
										},
										{
											"begin": 4866,
											"end": 4883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4866,
											"end": 4883,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4866,
											"end": 4883,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4883,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4883,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4883,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4866,
											"end": 4883,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 646,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5147,
											"end": 5152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5138,
											"end": 5143,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 5122,
											"end": 5152,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5185,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5167,
											"end": 5186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4C910B69FE65A61F7531B9C5042B2329CA7179C77290AA7E2EB3AFA3C8511FD3"
										},
										{
											"begin": 5167,
											"end": 5186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5186,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5186,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5186,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5167,
											"end": 5186,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4539,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4569,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4575,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4576,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4577,
											"end": 4582,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4584,
											"end": 4591,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4592,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4592,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4551,
											"end": 4592,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4443,
											"end": 4599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3245,
											"end": 3252,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3245,
											"end": 3252,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3245,
											"end": 3259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3245,
											"end": 3259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3234,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3234,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3241,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3241,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3259,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 3228,
											"end": 3289,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3268,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3289,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3268,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A9854BC900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3268,
											"end": 3289,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3268,
											"end": 3289,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3268,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3268,
											"end": 3289,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3268,
											"end": 3289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3289,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3268,
											"end": 3289,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3268,
											"end": 3289,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3268,
											"end": 3289,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3268,
											"end": 3289,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3268,
											"end": 3289,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3228,
											"end": 3289,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 3228,
											"end": 3289,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3308,
											"end": 3327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 3341,
											"end": 3436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3365,
											"end": 3372,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3365,
											"end": 3372,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3365,
											"end": 3379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3365,
											"end": 3379,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3361,
											"end": 3362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3361,
											"end": 3379,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3436,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 3341,
											"end": 3436,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3422,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3422,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3423,
											"end": 3424,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 3415,
											"end": 3425,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3425,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3425,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 3400,
											"end": 3425,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3425,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 3400,
											"end": 3425,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 3400,
											"end": 3425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3425,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3425,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3384,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3384,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3381,
											"end": 3384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3384,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3384,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3381,
											"end": 3384,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 3341,
											"end": 3436,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 3341,
											"end": 3436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3436,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3477,
											"end": 3487,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3497,
											"end": 3501,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3515,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3458,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3446,
											"end": 3476,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3446,
											"end": 3476,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3516,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3516,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3516,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3446,
											"end": 3516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3516,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3516,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 3446,
											"end": 3516,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3541,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3647,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 3527,
											"end": 3647,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3553,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3553,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3551,
											"end": 3560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3548,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3560,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3647,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3527,
											"end": 3647,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3604,
											"end": 3608,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3613,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3613,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3614,
											"end": 3615,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 3611,
											"end": 3616,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 3611,
											"end": 3616,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3611,
											"end": 3616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3623,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3632,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3632,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3634,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 3625,
											"end": 3635,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3625,
											"end": 3635,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3595,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 3581,
											"end": 3636,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3636,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3581,
											"end": 3636,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3562,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3562,
											"end": 3565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 3527,
											"end": 3647,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3647,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3527,
											"end": 3647,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3527,
											"end": 3647,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3700,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3679,
											"end": 3689,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6F48F5CFE672B48C8D014ECF4ECB7CDD8A66519DC4E331F0C7E95F1F2183A810"
										},
										{
											"begin": 3691,
											"end": 3693,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 3693,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3702,
											"end": 3709,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3702,
											"end": 3709,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 3662,
											"end": 3710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3662,
											"end": 3710,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3717,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4109,
											"end": 4115,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4078,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4089,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4090,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4096,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4105,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4106,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4115,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4115,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4067,
											"end": 4115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4164,
											"end": 4169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 4162,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4153,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "PUSH",
											"source": 10,
											"value": "8A35F50FA7149C607BF92648069A0D9593C88F1E12F1ABD0A0481A4A959B0681"
										},
										{
											"begin": 4171,
											"end": 4177,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4130,
											"end": 4178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4178,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3978,
											"end": 4185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2565,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2566,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2572,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2573,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2574,
											"end": 2584,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2549,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2585,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2618,
											"end": 2624,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2599,
											"end": 2624,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2595,
											"end": 2730,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2595,
											"end": 2730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2595,
											"end": 2730,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2669,
											"end": 2673,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2675,
											"end": 2685,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2687,
											"end": 2692,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2694,
											"end": 2700,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2718,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "51750BC700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 2647,
											"end": 2719,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 2719,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2595,
											"end": 2730,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 2595,
											"end": 2730,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2821,
											"end": 2827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2802,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2802,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2779,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2780,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2786,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2787,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2798,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2799,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2763,
											"end": 2827,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2847,
											"end": 2886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2862,
											"end": 2866,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2877,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 2885,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2847,
											"end": 2861,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 2847,
											"end": 2886,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2847,
											"end": 2886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 2847,
											"end": 2886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2512,
											"end": 2893,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2086,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 2101,
											"end": 2111,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2113,
											"end": 2115,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2122,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2124,
											"end": 2130,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 2100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 2086,
											"end": 2131,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2086,
											"end": 2131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 2086,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1988,
											"end": 2138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 7,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5437,
											"end": 5838,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 5437,
											"end": 5838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5556,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5557,
											"end": 5562,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5536,
											"end": 5595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 5536,
											"end": 5595,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5589,
											"end": 5594,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "PUSH",
											"source": 10,
											"value": "BF16AAB600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 5572,
											"end": 5595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5572,
											"end": 5595,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5536,
											"end": 5595,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 5536,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5630,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5631,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5610,
											"end": 5631,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5614,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5631,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5610,
											"end": 5631,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5631,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 5606,
											"end": 5775,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 5674,
											"end": 5676,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5654,
											"end": 5659,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5673,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5647,
											"end": 5673,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 5647,
											"end": 5673,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5685,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5685,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5685,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5647,
											"end": 5685,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5685,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 5647,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 5606,
											"end": 5775,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5775,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 5606,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 5747,
											"end": 5751,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5753,
											"end": 5755,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5763,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5746,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5716,
											"end": 5746,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 5716,
											"end": 5746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5764,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5764,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5764,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5764,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5716,
											"end": 5764,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5716,
											"end": 5764,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 5716,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5606,
											"end": 5775,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 5606,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5817,
											"end": 5822,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5811,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "PUSH",
											"source": 10,
											"value": "9AF266B6CA4909F988DC948FB50AD15153ABBE525351881BAD4FA858BE96515C"
										},
										{
											"begin": 5824,
											"end": 5830,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5790,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 5831,
											"name": "LOG4",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5437,
											"end": 5838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 2759,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2693,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 2868,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2858,
											"end": 2893,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2795,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2994,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 3023,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2923,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3190,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3196,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 3199,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 3344,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3290,
											"end": 3407,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3417,
											"end": 3535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3068,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3658,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3635,
											"end": 3642,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3631,
											"end": 3654,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3659,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 3662,
											"end": 3741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 3852,
											"end": 3859,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3828,
											"end": 3850,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 3807,
											"end": 3860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3753,
											"end": 3870,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3548,
											"end": 3877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4502,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 3883,
											"end": 4502,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3960,
											"end": 3966,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3976,
											"end": 3982,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4025,
											"end": 4027,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4013,
											"end": 4022,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4004,
											"end": 4011,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4000,
											"end": 4023,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3996,
											"end": 4028,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3993,
											"end": 4112,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3993,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 3993,
											"end": 4112,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4031,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 4031,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 4031,
											"end": 4110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4031,
											"end": 4110,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 4031,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3993,
											"end": 4112,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 3993,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4151,
											"end": 4152,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 4221,
											"end": 4228,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4212,
											"end": 4218,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4201,
											"end": 4210,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4197,
											"end": 4219,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 4176,
											"end": 4229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4166,
											"end": 4229,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4166,
											"end": 4229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4122,
											"end": 4239,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4278,
											"end": 4280,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4304,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 4349,
											"end": 4356,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4346,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4329,
											"end": 4338,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4325,
											"end": 4347,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4304,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 4304,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4304,
											"end": 4357,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 4304,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4294,
											"end": 4357,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4294,
											"end": 4357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4367,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4408,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4432,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 4477,
											"end": 4484,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4457,
											"end": 4466,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4453,
											"end": 4475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4432,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 4432,
											"end": 4485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4432,
											"end": 4485,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 4432,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4485,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4422,
											"end": 4485,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4377,
											"end": 4495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4502,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4502,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4502,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3883,
											"end": 4502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4585,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 4508,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4545,
											"end": 4552,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4574,
											"end": 4579,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4579,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4579,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4585,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4585,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4585,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4508,
											"end": 4585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4591,
											"end": 4709,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 4591,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 4696,
											"end": 4701,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 4678,
											"end": 4702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4678,
											"end": 4702,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 4678,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4673,
											"end": 4676,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4703,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4591,
											"end": 4709,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4591,
											"end": 4709,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4591,
											"end": 4709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4715,
											"end": 4937,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4715,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4808,
											"end": 4812,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4848,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4835,
											"end": 4844,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4831,
											"end": 4849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4849,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4859,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 4927,
											"end": 4928,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 4925,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4912,
											"end": 4929,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4903,
											"end": 4909,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4859,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 4859,
											"end": 4930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4859,
											"end": 4930,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 4859,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4715,
											"end": 4937,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4715,
											"end": 4937,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4715,
											"end": 4937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4715,
											"end": 4937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4715,
											"end": 4937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4943,
											"end": 5060,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 4943,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5052,
											"end": 5053,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5049,
											"end": 5050,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5042,
											"end": 5054,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5066,
											"end": 5183,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 5066,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5175,
											"end": 5176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5173,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5189,
											"end": 5306,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 5189,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5298,
											"end": 5299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5296,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5288,
											"end": 5300,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5329,
											"end": 5897,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 5329,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5402,
											"end": 5410,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5418,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5462,
											"end": 5465,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5455,
											"end": 5459,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5447,
											"end": 5453,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5443,
											"end": 5460,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 5466,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 5429,
											"end": 5551,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5470,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5470,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 5470,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5470,
											"end": 5549,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5470,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5551,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 5429,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5570,
											"end": 5590,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5560,
											"end": 5590,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5605,
											"end": 5611,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5602,
											"end": 5632,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5599,
											"end": 5716,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5599,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 5599,
											"end": 5716,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 5635,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 5635,
											"end": 5714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5635,
											"end": 5714,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 5635,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5599,
											"end": 5716,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 5599,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5749,
											"end": 5753,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5741,
											"end": 5747,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5754,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5725,
											"end": 5754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5803,
											"end": 5806,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5795,
											"end": 5799,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5793,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5783,
											"end": 5800,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5773,
											"end": 5781,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5769,
											"end": 5801,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5766,
											"end": 5807,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5763,
											"end": 5891,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5763,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 5763,
											"end": 5891,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5810,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 5810,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 5810,
											"end": 5889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5810,
											"end": 5889,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 5810,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5763,
											"end": 5891,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 5763,
											"end": 5891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5329,
											"end": 5897,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5329,
											"end": 5897,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5329,
											"end": 5897,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5329,
											"end": 5897,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5329,
											"end": 5897,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5329,
											"end": 5897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5920,
											"end": 6488,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 5920,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5993,
											"end": 6001,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6053,
											"end": 6056,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6046,
											"end": 6050,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6038,
											"end": 6044,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6034,
											"end": 6051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6030,
											"end": 6057,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6020,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 6020,
											"end": 6142,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6061,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 6061,
											"end": 6140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 6061,
											"end": 6140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6061,
											"end": 6140,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 6061,
											"end": 6140,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6020,
											"end": 6142,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 6020,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6174,
											"end": 6180,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6161,
											"end": 6181,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6204,
											"end": 6222,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6196,
											"end": 6202,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6193,
											"end": 6223,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6190,
											"end": 6307,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6190,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 6190,
											"end": 6307,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6226,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 6226,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 6226,
											"end": 6305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6226,
											"end": 6305,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 6226,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6190,
											"end": 6307,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 6190,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6340,
											"end": 6344,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6332,
											"end": 6338,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6328,
											"end": 6345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6316,
											"end": 6345,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6316,
											"end": 6345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6394,
											"end": 6397,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6378,
											"end": 6384,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6374,
											"end": 6391,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6364,
											"end": 6372,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6360,
											"end": 6392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6354,
											"end": 6482,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6354,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 6354,
											"end": 6482,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6401,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 6401,
											"end": 6480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 6401,
											"end": 6480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6401,
											"end": 6480,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 6401,
											"end": 6480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6354,
											"end": 6482,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 6354,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5920,
											"end": 6488,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5920,
											"end": 6488,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5920,
											"end": 6488,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5920,
											"end": 6488,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5920,
											"end": 6488,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5920,
											"end": 6488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6494,
											"end": 7573,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 6494,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6625,
											"end": 6631,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6639,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6641,
											"end": 6647,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6655,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6657,
											"end": 6663,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6706,
											"end": 6708,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6694,
											"end": 6703,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6685,
											"end": 6692,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6681,
											"end": 6704,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6677,
											"end": 6709,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6674,
											"end": 6793,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6674,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 6674,
											"end": 6793,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6712,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 6712,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 6712,
											"end": 6791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6712,
											"end": 6791,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 6712,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6674,
											"end": 6793,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 6674,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6860,
											"end": 6861,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6849,
											"end": 6858,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6845,
											"end": 6862,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6832,
											"end": 6863,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6890,
											"end": 6908,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6882,
											"end": 6888,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6909,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6876,
											"end": 6993,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6876,
											"end": 6993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 6876,
											"end": 6993,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6912,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 6912,
											"end": 6991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 6912,
											"end": 6991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6912,
											"end": 6991,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 6912,
											"end": 6991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6876,
											"end": 6993,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 6876,
											"end": 6993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7025,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 7097,
											"end": 7104,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7088,
											"end": 7094,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7077,
											"end": 7086,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 7073,
											"end": 7095,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7025,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 7025,
											"end": 7105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7025,
											"end": 7105,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 7025,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7105,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7105,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7105,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7007,
											"end": 7105,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6803,
											"end": 7115,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7154,
											"end": 7156,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7180,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 7225,
											"end": 7232,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7216,
											"end": 7222,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7205,
											"end": 7214,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 7201,
											"end": 7223,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 7180,
											"end": 7233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7233,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 7180,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7170,
											"end": 7233,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7170,
											"end": 7233,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7125,
											"end": 7243,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7310,
											"end": 7312,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7299,
											"end": 7308,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7282,
											"end": 7314,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 7341,
											"end": 7359,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7333,
											"end": 7339,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7330,
											"end": 7360,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7327,
											"end": 7444,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7327,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 7327,
											"end": 7444,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7363,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 7363,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 7363,
											"end": 7442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7363,
											"end": 7442,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 7363,
											"end": 7442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7327,
											"end": 7444,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 7327,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7476,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7539,
											"end": 7545,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7528,
											"end": 7537,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 7524,
											"end": 7546,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7476,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 7476,
											"end": 7556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7476,
											"end": 7556,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 7476,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7458,
											"end": 7556,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7458,
											"end": 7556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7458,
											"end": 7556,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7458,
											"end": 7556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7253,
											"end": 7566,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6494,
											"end": 7573,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6494,
											"end": 7573,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 6494,
											"end": 7573,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6494,
											"end": 7573,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6494,
											"end": 7573,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 6494,
											"end": 7573,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6494,
											"end": 7573,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6494,
											"end": 7573,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6494,
											"end": 7573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7579,
											"end": 7701,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 7579,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7652,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 7670,
											"end": 7675,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7652,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 7652,
											"end": 7676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7652,
											"end": 7676,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 7652,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7650,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7642,
											"end": 7677,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 7632,
											"end": 7695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7632,
											"end": 7695,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7692,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7688,
											"end": 7689,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7681,
											"end": 7693,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7632,
											"end": 7695,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7632,
											"end": 7695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7579,
											"end": 7701,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7579,
											"end": 7701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7846,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 7707,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7753,
											"end": 7758,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7778,
											"end": 7798,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 7769,
											"end": 7798,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7769,
											"end": 7798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 7834,
											"end": 7839,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 7807,
											"end": 7840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 7840,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 7807,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7846,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7846,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7846,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7846,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7852,
											"end": 8471,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 7852,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7929,
											"end": 7935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7945,
											"end": 7951,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7994,
											"end": 7996,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7982,
											"end": 7991,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7973,
											"end": 7980,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7969,
											"end": 7992,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7965,
											"end": 7997,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 8000,
											"end": 8079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 8000,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 7962,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8120,
											"end": 8121,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8145,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 8190,
											"end": 8197,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8181,
											"end": 8187,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8170,
											"end": 8179,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8166,
											"end": 8188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8145,
											"end": 8198,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 8145,
											"end": 8198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8145,
											"end": 8198,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 8145,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8135,
											"end": 8198,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8135,
											"end": 8198,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8091,
											"end": 8208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8249,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8273,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 8318,
											"end": 8325,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8309,
											"end": 8315,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8298,
											"end": 8307,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8294,
											"end": 8316,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8273,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 8273,
											"end": 8326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8273,
											"end": 8326,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 8273,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8263,
											"end": 8326,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8263,
											"end": 8326,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8218,
											"end": 8336,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8375,
											"end": 8377,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 8446,
											"end": 8453,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8437,
											"end": 8443,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8426,
											"end": 8435,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8422,
											"end": 8444,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8401,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 8401,
											"end": 8454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8401,
											"end": 8454,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 8401,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8391,
											"end": 8454,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8391,
											"end": 8454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8346,
											"end": 8464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7852,
											"end": 8471,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7852,
											"end": 8471,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7852,
											"end": 8471,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7852,
											"end": 8471,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7852,
											"end": 8471,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7852,
											"end": 8471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 9242,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 8477,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 8577,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8579,
											"end": 8585,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8587,
											"end": 8593,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8636,
											"end": 8639,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 8624,
											"end": 8633,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8615,
											"end": 8622,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8611,
											"end": 8634,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8607,
											"end": 8640,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8604,
											"end": 8724,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8604,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 8604,
											"end": 8724,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8643,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 8643,
											"end": 8722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 8643,
											"end": 8722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8643,
											"end": 8722,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 8643,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8604,
											"end": 8724,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 8604,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8763,
											"end": 8764,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8788,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 8833,
											"end": 8840,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8824,
											"end": 8830,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8813,
											"end": 8822,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8809,
											"end": 8831,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8788,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 8788,
											"end": 8841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8788,
											"end": 8841,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 8788,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8778,
											"end": 8841,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8778,
											"end": 8841,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8734,
											"end": 8851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8890,
											"end": 8892,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8916,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 8961,
											"end": 8968,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8952,
											"end": 8958,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8941,
											"end": 8950,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8916,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 8916,
											"end": 8969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8916,
											"end": 8969,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 8916,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8906,
											"end": 8969,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8906,
											"end": 8969,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8861,
											"end": 8979,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9018,
											"end": 9020,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9044,
											"end": 9097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9080,
											"end": 9086,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9069,
											"end": 9078,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9065,
											"end": 9087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9044,
											"end": 9097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 9044,
											"end": 9097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9044,
											"end": 9097,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 9044,
											"end": 9097,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9034,
											"end": 9097,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9034,
											"end": 9097,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8989,
											"end": 9107,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9146,
											"end": 9148,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9172,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 9217,
											"end": 9224,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9208,
											"end": 9214,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9197,
											"end": 9206,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9193,
											"end": 9215,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9172,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 9172,
											"end": 9225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9172,
											"end": 9225,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 9172,
											"end": 9225,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9162,
											"end": 9225,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9162,
											"end": 9225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9117,
											"end": 9235,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 9242,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 9242,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 9242,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 9242,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 9242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 9242,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 9242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 9242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9248,
											"end": 9428,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 9248,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9296,
											"end": 9373,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9293,
											"end": 9294,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9286,
											"end": 9374,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9393,
											"end": 9397,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 9390,
											"end": 9391,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9383,
											"end": 9398,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9417,
											"end": 9421,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9414,
											"end": 9415,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9407,
											"end": 9422,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9434,
											"end": 9614,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 9434,
											"end": 9614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9482,
											"end": 9559,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9479,
											"end": 9480,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9472,
											"end": 9560,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9579,
											"end": 9583,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 9576,
											"end": 9577,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9569,
											"end": 9584,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9603,
											"end": 9607,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9600,
											"end": 9601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9593,
											"end": 9608,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9620,
											"end": 9811,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 9620,
											"end": 9811,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9660,
											"end": 9663,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 9697,
											"end": 9698,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9699,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 9679,
											"end": 9699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9679,
											"end": 9699,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 9679,
											"end": 9699,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9674,
											"end": 9699,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9674,
											"end": 9699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9713,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 9731,
											"end": 9732,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9713,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 9713,
											"end": 9733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9713,
											"end": 9733,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 9713,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9708,
											"end": 9733,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9708,
											"end": 9733,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9756,
											"end": 9757,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9753,
											"end": 9754,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9749,
											"end": 9758,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9742,
											"end": 9758,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9742,
											"end": 9758,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9777,
											"end": 9780,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9774,
											"end": 9775,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9771,
											"end": 9781,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9768,
											"end": 9804,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9768,
											"end": 9804,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 9768,
											"end": 9804,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 9784,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 9784,
											"end": 9802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9784,
											"end": 9802,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 9784,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9768,
											"end": 9804,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 9768,
											"end": 9804,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9620,
											"end": 9811,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9620,
											"end": 9811,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9620,
											"end": 9811,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9620,
											"end": 9811,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9620,
											"end": 9811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9817,
											"end": 10001,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 9817,
											"end": 10001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9916,
											"end": 9927,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9945,
											"end": 9948,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9938,
											"end": 9957,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9990,
											"end": 9994,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9985,
											"end": 9988,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9981,
											"end": 9995,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9966,
											"end": 9995,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9966,
											"end": 9995,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9817,
											"end": 10001,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9817,
											"end": 10001,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9817,
											"end": 10001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9817,
											"end": 10001,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9817,
											"end": 10001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10109,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 10007,
											"end": 10109,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10076,
											"end": 10080,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10091,
											"end": 10102,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10091,
											"end": 10102,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10109,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10109,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10109,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10007,
											"end": 10109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10223,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 10115,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10192,
											"end": 10216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 10210,
											"end": 10215,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10192,
											"end": 10216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 10192,
											"end": 10216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10192,
											"end": 10216,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 10192,
											"end": 10216,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10187,
											"end": 10190,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10180,
											"end": 10217,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10223,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10223,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10229,
											"end": 10408,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 10229,
											"end": 10408,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10298,
											"end": 10308,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10319,
											"end": 10365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 10361,
											"end": 10364,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10353,
											"end": 10359,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10319,
											"end": 10365,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 10319,
											"end": 10365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10319,
											"end": 10365,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 10319,
											"end": 10365,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10397,
											"end": 10401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10392,
											"end": 10395,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10388,
											"end": 10402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10374,
											"end": 10402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10374,
											"end": 10402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10229,
											"end": 10408,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10229,
											"end": 10408,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10229,
											"end": 10408,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10229,
											"end": 10408,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10229,
											"end": 10408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10414,
											"end": 10536,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 10414,
											"end": 10536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10466,
											"end": 10471,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10491,
											"end": 10530,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 10526,
											"end": 10528,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10521,
											"end": 10524,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10517,
											"end": 10529,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10512,
											"end": 10515,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10491,
											"end": 10530,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 10491,
											"end": 10530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10491,
											"end": 10530,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 10491,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10482,
											"end": 10530,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10482,
											"end": 10530,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10414,
											"end": 10536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10414,
											"end": 10536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10414,
											"end": 10536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10414,
											"end": 10536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10414,
											"end": 10536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10542,
											"end": 10657,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 10542,
											"end": 10657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10614,
											"end": 10618,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10646,
											"end": 10650,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10641,
											"end": 10644,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10637,
											"end": 10651,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10629,
											"end": 10651,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10629,
											"end": 10651,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10542,
											"end": 10657,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10542,
											"end": 10657,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10542,
											"end": 10657,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10542,
											"end": 10657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10693,
											"end": 11392,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 10693,
											"end": 11392,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10822,
											"end": 10825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10845,
											"end": 10931,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 10924,
											"end": 10930,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10919,
											"end": 10922,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10845,
											"end": 10931,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 10845,
											"end": 10931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10845,
											"end": 10931,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 10845,
											"end": 10931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10838,
											"end": 10931,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10838,
											"end": 10931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10955,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 11007,
											"end": 11012,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10955,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 10955,
											"end": 11013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10955,
											"end": 11013,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 10955,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11036,
											"end": 11043,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11067,
											"end": 11068,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11367,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 11052,
											"end": 11367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11077,
											"end": 11083,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11074,
											"end": 11075,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11071,
											"end": 11084,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 11052,
											"end": 11367,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11052,
											"end": 11367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 11052,
											"end": 11367,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11147,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 11182,
											"end": 11188,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11173,
											"end": 11180,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11147,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 11147,
											"end": 11189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11147,
											"end": 11189,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 11147,
											"end": 11189,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 11268,
											"end": 11271,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 11253,
											"end": 11266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 11209,
											"end": 11272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11272,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 11209,
											"end": 11272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11202,
											"end": 11272,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 11202,
											"end": 11272,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11295,
											"end": 11357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 11350,
											"end": 11356,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11295,
											"end": 11357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 11295,
											"end": 11357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11295,
											"end": 11357,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 11295,
											"end": 11357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11285,
											"end": 11357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11112,
											"end": 11367,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11099,
											"end": 11100,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 11096,
											"end": 11097,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11092,
											"end": 11101,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11087,
											"end": 11101,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11087,
											"end": 11101,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11052,
											"end": 11367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 11052,
											"end": 11367,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11052,
											"end": 11367,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 11052,
											"end": 11367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11056,
											"end": 11070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11383,
											"end": 11386,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11376,
											"end": 11386,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10827,
											"end": 11392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10827,
											"end": 11392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10693,
											"end": 11392,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10693,
											"end": 11392,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10693,
											"end": 11392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10693,
											"end": 11392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10693,
											"end": 11392,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10693,
											"end": 11392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11398,
											"end": 11582,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 11398,
											"end": 11582,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11497,
											"end": 11508,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11531,
											"end": 11537,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11526,
											"end": 11529,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11519,
											"end": 11538,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11571,
											"end": 11575,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11566,
											"end": 11569,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11562,
											"end": 11576,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11547,
											"end": 11576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11547,
											"end": 11576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11398,
											"end": 11582,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11398,
											"end": 11582,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11398,
											"end": 11582,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11398,
											"end": 11582,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11398,
											"end": 11582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11588,
											"end": 11705,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 11588,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11697,
											"end": 11698,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11694,
											"end": 11695,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11687,
											"end": 11699,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11711,
											"end": 11810,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 11711,
											"end": 11810,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11796,
											"end": 11802,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11791,
											"end": 11794,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11786,
											"end": 11789,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11773,
											"end": 11803,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 11711,
											"end": 11810,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11711,
											"end": 11810,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11711,
											"end": 11810,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11711,
											"end": 11810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11846,
											"end": 12383,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 11846,
											"end": 12383,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11974,
											"end": 11977,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11995,
											"end": 12081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 12074,
											"end": 12080,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12069,
											"end": 12072,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11995,
											"end": 12081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 11995,
											"end": 12081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11995,
											"end": 12081,
											"name": "tag",
											"source": 11,
											"value": "415"
										},
										{
											"begin": 11995,
											"end": 12081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11988,
											"end": 12081,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11988,
											"end": 12081,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12105,
											"end": 12171,
											"name": "PUSH",
											"source": 11,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12097,
											"end": 12103,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12094,
											"end": 12172,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12091,
											"end": 12256,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12091,
											"end": 12256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 12091,
											"end": 12256,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12175,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 12175,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 12175,
											"end": 12254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12175,
											"end": 12254,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 12175,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12091,
											"end": 12256,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 12091,
											"end": 12256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12287,
											"end": 12291,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12279,
											"end": 12285,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12275,
											"end": 12292,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 12265,
											"end": 12292,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12265,
											"end": 12292,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12302,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 12338,
											"end": 12344,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12333,
											"end": 12336,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12326,
											"end": 12331,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12302,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 12302,
											"end": 12345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12302,
											"end": 12345,
											"name": "tag",
											"source": 11,
											"value": "418"
										},
										{
											"begin": 12302,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12370,
											"end": 12376,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12365,
											"end": 12368,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12361,
											"end": 12377,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12354,
											"end": 12377,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12354,
											"end": 12377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11846,
											"end": 12383,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11846,
											"end": 12383,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11846,
											"end": 12383,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11846,
											"end": 12383,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11846,
											"end": 12383,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11846,
											"end": 12383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12389,
											"end": 13063,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 12389,
											"end": 13063,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12630,
											"end": 12634,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12668,
											"end": 12670,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12657,
											"end": 12666,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12653,
											"end": 12671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12645,
											"end": 12671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12645,
											"end": 12671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12717,
											"end": 12726,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12711,
											"end": 12715,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12707,
											"end": 12727,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12703,
											"end": 12704,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12692,
											"end": 12701,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12688,
											"end": 12705,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12681,
											"end": 12728,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12745,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 12858,
											"end": 12862,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12849,
											"end": 12855,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12841,
											"end": 12847,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 12745,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 12745,
											"end": 12863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12745,
											"end": 12863,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 12745,
											"end": 12863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12737,
											"end": 12863,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12737,
											"end": 12863,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12910,
											"end": 12919,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12904,
											"end": 12908,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12900,
											"end": 12920,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12895,
											"end": 12897,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12884,
											"end": 12893,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12880,
											"end": 12898,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12873,
											"end": 12921,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12938,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 13051,
											"end": 13055,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13042,
											"end": 13048,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13034,
											"end": 13040,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 12938,
											"end": 13056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 12938,
											"end": 13056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12938,
											"end": 13056,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 12938,
											"end": 13056,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12930,
											"end": 13056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12930,
											"end": 13056,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12389,
											"end": 13063,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 12389,
											"end": 13063,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 12389,
											"end": 13063,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12389,
											"end": 13063,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12389,
											"end": 13063,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12389,
											"end": 13063,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12389,
											"end": 13063,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12389,
											"end": 13063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13069,
											"end": 13187,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 13069,
											"end": 13187,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13156,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 13174,
											"end": 13179,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13156,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 13156,
											"end": 13180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13156,
											"end": 13180,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 13156,
											"end": 13180,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13151,
											"end": 13154,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13144,
											"end": 13181,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13069,
											"end": 13187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13069,
											"end": 13187,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13069,
											"end": 13187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13193,
											"end": 13857,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 13193,
											"end": 13857,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13398,
											"end": 13402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13436,
											"end": 13439,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 13425,
											"end": 13434,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13421,
											"end": 13440,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13413,
											"end": 13440,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13413,
											"end": 13440,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13450,
											"end": 13521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 13518,
											"end": 13519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13507,
											"end": 13516,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13503,
											"end": 13520,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13494,
											"end": 13500,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 13450,
											"end": 13521,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 13450,
											"end": 13521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13450,
											"end": 13521,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 13450,
											"end": 13521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13531,
											"end": 13603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 13599,
											"end": 13601,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13588,
											"end": 13597,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13584,
											"end": 13602,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13575,
											"end": 13581,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 13531,
											"end": 13603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 13531,
											"end": 13603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13531,
											"end": 13603,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 13531,
											"end": 13603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13613,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 13681,
											"end": 13683,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13670,
											"end": 13679,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13666,
											"end": 13684,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13657,
											"end": 13663,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13613,
											"end": 13685,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 13613,
											"end": 13685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13613,
											"end": 13685,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 13613,
											"end": 13685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13695,
											"end": 13767,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 13763,
											"end": 13765,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 13752,
											"end": 13761,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13748,
											"end": 13766,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13739,
											"end": 13745,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13695,
											"end": 13767,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 13695,
											"end": 13767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13695,
											"end": 13767,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 13695,
											"end": 13767,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13777,
											"end": 13850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 13845,
											"end": 13848,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 13834,
											"end": 13843,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13830,
											"end": 13849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13821,
											"end": 13827,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13777,
											"end": 13850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 13777,
											"end": 13850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13777,
											"end": 13850,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 13777,
											"end": 13850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13193,
											"end": 13857,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 13193,
											"end": 13857,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 13193,
											"end": 13857,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13193,
											"end": 13857,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13193,
											"end": 13857,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13193,
											"end": 13857,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13193,
											"end": 13857,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13193,
											"end": 13857,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13193,
											"end": 13857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13863,
											"end": 14305,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 13863,
											"end": 14305,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14012,
											"end": 14016,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14050,
											"end": 14052,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 14039,
											"end": 14048,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14035,
											"end": 14053,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14027,
											"end": 14053,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14027,
											"end": 14053,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14063,
											"end": 14134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 14131,
											"end": 14132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14120,
											"end": 14129,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14116,
											"end": 14133,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14107,
											"end": 14113,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 14063,
											"end": 14134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 14063,
											"end": 14134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14063,
											"end": 14134,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 14063,
											"end": 14134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14144,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 14212,
											"end": 14214,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14201,
											"end": 14210,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14197,
											"end": 14215,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14188,
											"end": 14194,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14144,
											"end": 14216,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 14144,
											"end": 14216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14144,
											"end": 14216,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 14144,
											"end": 14216,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14226,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 14294,
											"end": 14296,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14283,
											"end": 14292,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14279,
											"end": 14297,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14270,
											"end": 14276,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14226,
											"end": 14298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 14226,
											"end": 14298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14226,
											"end": 14298,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 14226,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13863,
											"end": 14305,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 13863,
											"end": 14305,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 13863,
											"end": 14305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13863,
											"end": 14305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13863,
											"end": 14305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13863,
											"end": 14305,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13863,
											"end": 14305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14311,
											"end": 14533,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 14311,
											"end": 14533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14404,
											"end": 14408,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14442,
											"end": 14444,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14431,
											"end": 14440,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14427,
											"end": 14445,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14419,
											"end": 14445,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14419,
											"end": 14445,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14455,
											"end": 14526,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 14523,
											"end": 14524,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14512,
											"end": 14521,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14508,
											"end": 14525,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14499,
											"end": 14505,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14455,
											"end": 14526,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 14455,
											"end": 14526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14455,
											"end": 14526,
											"name": "tag",
											"source": 11,
											"value": "435"
										},
										{
											"begin": 14455,
											"end": 14526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14311,
											"end": 14533,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14311,
											"end": 14533,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14311,
											"end": 14533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14311,
											"end": 14533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14311,
											"end": 14533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14539,
											"end": 14871,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 14539,
											"end": 14871,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14660,
											"end": 14664,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14698,
											"end": 14700,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14687,
											"end": 14696,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14683,
											"end": 14701,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14675,
											"end": 14701,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14675,
											"end": 14701,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14711,
											"end": 14782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 14779,
											"end": 14780,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14768,
											"end": 14777,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14764,
											"end": 14781,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14755,
											"end": 14761,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14711,
											"end": 14782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 14711,
											"end": 14782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14711,
											"end": 14782,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 14711,
											"end": 14782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14792,
											"end": 14864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 14860,
											"end": 14862,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14849,
											"end": 14858,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14845,
											"end": 14863,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14836,
											"end": 14842,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14792,
											"end": 14864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 14792,
											"end": 14864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14792,
											"end": 14864,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 14792,
											"end": 14864,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14539,
											"end": 14871,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 14539,
											"end": 14871,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14539,
											"end": 14871,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14539,
											"end": 14871,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14539,
											"end": 14871,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14539,
											"end": 14871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14877,
											"end": 14993,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 14877,
											"end": 14993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14947,
											"end": 14968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 14962,
											"end": 14967,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14947,
											"end": 14968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 14947,
											"end": 14968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14947,
											"end": 14968,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 14947,
											"end": 14968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14940,
											"end": 14945,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14937,
											"end": 14969,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14927,
											"end": 14987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 14927,
											"end": 14987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14983,
											"end": 14984,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14980,
											"end": 14981,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14973,
											"end": 14985,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14927,
											"end": 14987,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 14927,
											"end": 14987,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14877,
											"end": 14993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14877,
											"end": 14993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14999,
											"end": 15136,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 14999,
											"end": 15136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15053,
											"end": 15058,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15084,
											"end": 15090,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15078,
											"end": 15091,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15069,
											"end": 15091,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15069,
											"end": 15091,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15100,
											"end": 15130,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 15124,
											"end": 15129,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15100,
											"end": 15130,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 15100,
											"end": 15130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15100,
											"end": 15130,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 15100,
											"end": 15130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14999,
											"end": 15136,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14999,
											"end": 15136,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14999,
											"end": 15136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14999,
											"end": 15136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14999,
											"end": 15136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15142,
											"end": 15487,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 15142,
											"end": 15487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15209,
											"end": 15215,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15258,
											"end": 15260,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15246,
											"end": 15255,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15237,
											"end": 15244,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15233,
											"end": 15256,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15229,
											"end": 15261,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 15226,
											"end": 15345,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15226,
											"end": 15345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 15226,
											"end": 15345,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15264,
											"end": 15343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 15264,
											"end": 15343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 15264,
											"end": 15343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15264,
											"end": 15343,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 15264,
											"end": 15343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15226,
											"end": 15345,
											"name": "tag",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 15226,
											"end": 15345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15384,
											"end": 15385,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15409,
											"end": 15470,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 15462,
											"end": 15469,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15453,
											"end": 15459,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15442,
											"end": 15451,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15438,
											"end": 15460,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15409,
											"end": 15470,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 15409,
											"end": 15470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15409,
											"end": 15470,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 15409,
											"end": 15470,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15399,
											"end": 15470,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15399,
											"end": 15470,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15355,
											"end": 15480,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15142,
											"end": 15487,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15142,
											"end": 15487,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15142,
											"end": 15487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15142,
											"end": 15487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15142,
											"end": 15487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15493,
											"end": 15825,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 15493,
											"end": 15825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15614,
											"end": 15618,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15652,
											"end": 15654,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15641,
											"end": 15650,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15637,
											"end": 15655,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15629,
											"end": 15655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15629,
											"end": 15655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15665,
											"end": 15736,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 15733,
											"end": 15734,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15722,
											"end": 15731,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15718,
											"end": 15735,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15709,
											"end": 15715,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15665,
											"end": 15736,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 15665,
											"end": 15736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15665,
											"end": 15736,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 15665,
											"end": 15736,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15746,
											"end": 15818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 15814,
											"end": 15816,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15803,
											"end": 15812,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15799,
											"end": 15817,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15790,
											"end": 15796,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15746,
											"end": 15818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 15746,
											"end": 15818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15746,
											"end": 15818,
											"name": "tag",
											"source": 11,
											"value": "450"
										},
										{
											"begin": 15746,
											"end": 15818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15493,
											"end": 15825,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15493,
											"end": 15825,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15493,
											"end": 15825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15493,
											"end": 15825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15493,
											"end": 15825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15493,
											"end": 15825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15831,
											"end": 15929,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 15831,
											"end": 15929,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15882,
											"end": 15888,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15916,
											"end": 15921,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15910,
											"end": 15922,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15900,
											"end": 15922,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15900,
											"end": 15922,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15831,
											"end": 15929,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15831,
											"end": 15929,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15831,
											"end": 15929,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15831,
											"end": 15929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15935,
											"end": 16082,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 15935,
											"end": 16082,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16036,
											"end": 16047,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16073,
											"end": 16076,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16058,
											"end": 16076,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16058,
											"end": 16076,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15935,
											"end": 16082,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15935,
											"end": 16082,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15935,
											"end": 16082,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15935,
											"end": 16082,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15935,
											"end": 16082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16088,
											"end": 16227,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 16088,
											"end": 16227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16177,
											"end": 16183,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16172,
											"end": 16175,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16167,
											"end": 16170,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16161,
											"end": 16184,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 16218,
											"end": 16219,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16209,
											"end": 16215,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16204,
											"end": 16207,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16200,
											"end": 16216,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16193,
											"end": 16220,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16088,
											"end": 16227,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16088,
											"end": 16227,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16088,
											"end": 16227,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16088,
											"end": 16227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16233,
											"end": 16619,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 16233,
											"end": 16619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16337,
											"end": 16340,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16365,
											"end": 16403,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 16397,
											"end": 16402,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16365,
											"end": 16403,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 16365,
											"end": 16403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16365,
											"end": 16403,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 16365,
											"end": 16403,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16419,
											"end": 16507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 16500,
											"end": 16506,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16495,
											"end": 16498,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16419,
											"end": 16507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 16419,
											"end": 16507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16419,
											"end": 16507,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 16419,
											"end": 16507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16412,
											"end": 16507,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16412,
											"end": 16507,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 16574,
											"end": 16580,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16569,
											"end": 16572,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16562,
											"end": 16566,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16555,
											"end": 16560,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 16551,
											"end": 16567,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 16516,
											"end": 16581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16581,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 16516,
											"end": 16581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16606,
											"end": 16612,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16604,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16597,
											"end": 16613,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16590,
											"end": 16613,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16590,
											"end": 16613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16341,
											"end": 16619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16233,
											"end": 16619,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16233,
											"end": 16619,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16233,
											"end": 16619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16233,
											"end": 16619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16233,
											"end": 16619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16625,
											"end": 16896,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 16625,
											"end": 16896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16755,
											"end": 16758,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16777,
											"end": 16870,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 16866,
											"end": 16869,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16857,
											"end": 16863,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16777,
											"end": 16870,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 16777,
											"end": 16870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16777,
											"end": 16870,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 16777,
											"end": 16870,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16770,
											"end": 16870,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16770,
											"end": 16870,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16887,
											"end": 16890,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16880,
											"end": 16890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16880,
											"end": 16890,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16625,
											"end": 16896,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16625,
											"end": 16896,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16625,
											"end": 16896,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16625,
											"end": 16896,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16625,
											"end": 16896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/token/TokenTransfer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"TRANSFER_ADMIN_ROLE()": "68a37ae8",
							"addSupportedToken(address)": "6d69fcaf",
							"allowance(address,address,address)": "927da105",
							"batchTransferToken(address[],address,uint256[])": "cdb33b81",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"removeSupportedToken(address)": "76319190",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setAllowance(address,address,uint256)": "da46098c",
							"supportedTokens(address)": "68c4ac26",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferToken(address,address,uint256)": "f5537ede",
							"transferTokenFrom(address,address,address,uint256)": "e5994905"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArrayLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"UnsupportedToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AllowanceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"BatchTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"addSupportedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeSupportedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTokenFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A contract for handling token transfers within the Cipher Zero Protocol\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"addSupportedToken(address)\":{\"details\":\"Adds a supported token (only TRANSFER_ADMIN_ROLE)\",\"params\":{\"token\":\"Address of the token to add\"}},\"allowance(address,address,address)\":{\"details\":\"Returns the remaining allowance for a spender\",\"params\":{\"owner\":\"Address of the token owner\",\"spender\":\"Address of the spender\",\"token\":\"Address of the ERC20 token\"},\"returns\":{\"_0\":\"The remaining allowance\"}},\"batchTransferToken(address[],address,uint256[])\":{\"details\":\"Performs batch token transfers\",\"params\":{\"amounts\":\"Array of amounts to transfer\",\"to\":\"Array of recipient addresses\",\"token\":\"Address of the ERC20 token\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"removeSupportedToken(address)\":{\"details\":\"Removes a supported token (only TRANSFER_ADMIN_ROLE)\",\"params\":{\"token\":\"Address of the token to remove\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setAllowance(address,address,uint256)\":{\"details\":\"Sets allowance for a spender to transfer tokens on behalf of the owner\",\"params\":{\"amount\":\"Amount of tokens allowed to spend\",\"spender\":\"Address allowed to spend tokens\",\"token\":\"Address of the ERC20 token\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferToken(address,address,uint256)\":{\"details\":\"Transfers tokens from the sender to a recipient\",\"params\":{\"amount\":\"Amount of tokens to transfer\",\"to\":\"Recipient address\",\"token\":\"Address of the ERC20 token\"}},\"transferTokenFrom(address,address,address,uint256)\":{\"details\":\"Transfers tokens from one address to another, respecting allowances\",\"params\":{\"amount\":\"Amount of tokens to transfer\",\"from\":\"Sender address\",\"to\":\"Recipient address\",\"token\":\"Address of the ERC20 token\"}}},\"title\":\"TokenTransfer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/TokenTransfer.sol\":\"TokenTransfer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/token/TokenTransfer.sol\":{\"keccak256\":\"0xd82e7e28b0e97d2c5188db4f79e4283efdc11a36dff3f2b758199174bcfe5fd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4a950fe1b9fae1f860ead138ea020f56af512e6fe74127e89e826e318c01ef4\",\"dweb:/ipfs/QmNW1YpdJCcmQxx8uZBQu2E4hMtpS3iQZmLfEZBTARtPbz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1076,
								"contract": "contracts/token/TokenTransfer.sol:TokenTransfer",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 26,
								"contract": "contracts/token/TokenTransfer.sol:TokenTransfer",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1198,
								"contract": "contracts/token/TokenTransfer.sol:TokenTransfer",
								"label": "supportedTokens",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1206,
								"contract": "contracts/token/TokenTransfer.sol:TokenTransfer",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => mapping(address => uint256)))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/token/TokenTransfer.sol:TokenTransfer",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/token/TokenTransfer.sol:TokenTransfer",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1065
						],
						"ERC165": [
							1158
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1066,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1065,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1159,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1158,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1065,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1158,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1158,
								1170,
								378,
								1065
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1157
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1157,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 456,
							"linearizedBaseContracts": [
								456
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 390,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 399,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 456,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 406,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 456,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 456,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 456,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 440,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 456,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 456,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 457,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								390,
								399
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							492
						]
					},
					"id": 493,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 492,
							"linearizedBaseContracts": [
								492
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 477,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3022:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3045:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3070:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3093:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3119:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 469,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3136:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 471,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3155:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 473,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:3"
									},
									"scope": 492,
									"src": "2997:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "3501:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:3"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "3539:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:3"
									},
									"scope": 492,
									"src": "3485:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:3"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3791:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 488,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:3"
									},
									"scope": 492,
									"src": "3740:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 493,
							"src": "2113:1689:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1035
						],
						"IERC20": [
							456
						],
						"IERC20Permit": [
							492
						],
						"SafeERC20": [
							782
						]
					},
					"id": 783,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 494,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 496,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 783,
							"sourceUnit": 457,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 495,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 456,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 783,
							"sourceUnit": 493,
							"src": "179:60:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 497,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 492,
										"src": "187:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 783,
							"sourceUnit": 1036,
							"src": "240:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 499,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1035,
										"src": "248:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 501,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 782,
							"linearizedBaseContracts": [
								782
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 504,
									"libraryName": {
										"id": 502,
										"name": "Address",
										"nameLocations": [
											"781:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1035,
										"src": "781:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:4",
									"typeName": {
										"id": 503,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:4",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 509,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "907:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:4"
									},
									"src": "876:46:4"
								},
								{
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 518,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1043:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1060:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1086:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:4"
									},
									"src": "1004:109:4"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "1375:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "1405:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 533,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "1427:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$456",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 423,
																	"src": "1427:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 535,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 524,
																			"src": "1444:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 536,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "1448:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 537,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 531,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 529,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "1385:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:4"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1325:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 521,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 520,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "1325:6:4"
													},
													"referencedDeclaration": 456,
													"src": "1325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1339:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "1351:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:4"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:4"
									},
									"scope": 782,
									"src": "1303:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "1792:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "1822:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 559,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "1844:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$456",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 455,
																	"src": "1844:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 561,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 548,
																			"src": "1865:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 562,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 550,
																			"src": "1871:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 563,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 552,
																			"src": "1875:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 564,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 557,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 555,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "1802:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:4"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1728:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 545,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 544,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "1728:6:4"
													},
													"referencedDeclaration": 456,
													"src": "1728:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1742:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1756:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "1768:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:4"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:4"
									},
									"scope": 782,
									"src": "1702:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "2167:139:4",
										"statements": [
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 599,
														"src": "2177:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 590,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 586,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$782",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$782",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 584,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 588,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "2231:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 582,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "2200:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 433,
														"src": "2200:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "2262:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 593,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "2269:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 594,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "2278:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 595,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "2293:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 591,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "2249:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:4"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "2112:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 572,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 571,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "2112:6:4"
													},
													"referencedDeclaration": 456,
													"src": "2112:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "2126:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "2143:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:4"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:4"
									},
									"scope": 782,
									"src": "2081:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "2607:370:4",
										"statements": [
											{
												"id": 641,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:4",
												"statements": [
													{
														"assignments": [
															612
														],
														"declarations": [
															{
																"constant": false,
																"id": 612,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 641,
																"src": "2641:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 611,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 621,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 617,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$782",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$782",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 615,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 619,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "2699:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 613,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "2668:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$456",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 433,
																"src": "2668:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 622,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "2725:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 623,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "2744:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 632,
														"nodeType": "IfStatement",
														"src": "2721:160:4",
														"trueBody": {
															"id": 631,
															"nodeType": "Block",
															"src": "2763:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 626,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 606,
																				"src": "2821:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 627,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 612,
																				"src": "2830:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 628,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 608,
																				"src": "2848:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 625,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 518,
																			"src": "2788:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 630,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 634,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "2907:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$456",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 635,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "2914:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 636,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "2923:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 637,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "2942:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$456",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 633,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "2894:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 640,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "2540:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 603,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 602,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "2540:6:4"
													},
													"referencedDeclaration": 456,
													"src": "2540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "2554:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "2571:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:4"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:4"
									},
									"scope": 782,
									"src": "2509:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3373:303:4",
										"statements": [
											{
												"assignments": [
													655
												],
												"declarations": [
													{
														"constant": false,
														"id": 655,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 689,
														"src": "3383:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 654,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 664,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 658,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "3426:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 443,
															"src": "3426:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 660,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "3442:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 661,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "3451:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 662,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 656,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:4"
											},
											{
												"condition": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 666,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "3498:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 667,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "3505:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$456",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 665,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "3474:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "3469:201:4",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "3520:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 671,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "3554:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$456",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 674,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 647,
																					"src": "3576:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$456",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 675,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 443,
																				"src": "3576:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 676,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 649,
																						"src": "3592:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 677,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 678,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 672,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$456",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 670,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "3534:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 681,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 683,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "3639:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$456",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 684,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 655,
																		"src": "3646:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$456",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 682,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "3619:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3318:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 646,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 645,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "3318:6:4"
													},
													"referencedDeclaration": 456,
													"src": "3318:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3332:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3349:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:4"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:4"
									},
									"scope": 782,
									"src": "3296:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "4129:559:4",
										"statements": [
											{
												"assignments": [
													700
												],
												"declarations": [
													{
														"constant": false,
														"id": 700,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "4478:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 699,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 708,
												"initialValue": {
													"arguments": [
														{
															"id": 706,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "4532:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 703,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "4512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$456",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$456",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 701,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 856,
														"src": "4504:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 709,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "4551:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 715,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "4589:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 716,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:4",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 718,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 713,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:4",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 730,
												"nodeType": "IfStatement",
												"src": "4547:135:4",
												"trueBody": {
													"id": 729,
													"nodeType": "Block",
													"src": "4610:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 725,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 694,
																				"src": "4664:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$456",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$456",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 723,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 722,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "4631:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 728,
															"nodeType": "RevertStatement",
															"src": "4624:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "4088:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 693,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 692,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "4088:6:4"
													},
													"referencedDeclaration": 456,
													"src": "4088:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "4102:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 695,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:4"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:4"
									},
									"scope": 782,
									"src": "4059:629:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "5278:489:4",
										"statements": [
											{
												"assignments": [
													744,
													746
												],
												"declarations": [
													{
														"constant": false,
														"id": 744,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 780,
														"src": "5574:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 743,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 746,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 780,
														"src": "5588:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 745,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 754,
												"initialValue": {
													"arguments": [
														{
															"id": 752,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "5635:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 749,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "5623:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$456",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$456",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 747,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 755,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "5657:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 756,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 746,
																				"src": "5669:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 762,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 746,
																				"src": "5706:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 764,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 763,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 765,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 760,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 768,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 772,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "5738:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$456",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$456",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 770,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 742,
												"id": 779,
												"nodeType": "Return",
												"src": "5650:110:4"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5222:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$456",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 735,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 734,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 456,
														"src": "5222:6:4"
													},
													"referencedDeclaration": 456,
													"src": "5222:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$456",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5236:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 737,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:4"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5272:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 740,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:4"
									},
									"scope": 782,
									"src": "5189:578:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 783,
							"src": "751:5018:4",
							"usedErrors": [
								509,
								518
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1035
						]
					},
					"id": 1036,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 784,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 785,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1035,
							"linearizedBaseContracts": [
								1035
							],
							"name": "Address",
							"nameLocation": "203:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:5",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 790,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "349:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:5"
									},
									"src": "316:50:5"
								},
								{
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:5",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 795,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "475:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:5"
									},
									"src": "452:39:5"
								},
								{
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:5",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 798,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:5"
									},
									"src": "591:24:5"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "1602:260:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 808,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1035",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1035",
																		"typeString": "library Address"
																	}
																],
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 806,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 811,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "1640:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 821,
												"nodeType": "IfStatement",
												"src": "1612:109:5",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "1648:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 816,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1035",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1035",
																					"typeString": "library Address"
																				}
																			],
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 814,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 813,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "1669:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 819,
															"nodeType": "RevertStatement",
															"src": "1662:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													823,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 823,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 838,
														"src": "1732:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 822,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 830,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 824,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "1750:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 826,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "1772:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:5"
											},
											{
												"condition": {
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:5",
													"subExpression": {
														"id": 831,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "1798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 837,
												"nodeType": "IfStatement",
												"src": "1793:63:5",
												"trueBody": {
													"id": 836,
													"nodeType": "Block",
													"src": "1807:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 833,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "1828:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 835,
															"nodeType": "RevertStatement",
															"src": "1821:24:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1550:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "1577:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:5"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:5"
									},
									"scope": 1035,
									"src": "1531:331:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "2794:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 850,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "2833:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "2841:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 849,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "2811:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 848,
												"id": 854,
												"nodeType": "Return",
												"src": "2804:45:5"
											}
										]
									},
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2727:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2743:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:5"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2780:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 846,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:5"
									},
									"scope": 1035,
									"src": "2705:151:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "3293:279:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 870,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1035",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1035",
																		"typeString": "library Address"
																	}
																],
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 868,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 873,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "3331:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 883,
												"nodeType": "IfStatement",
												"src": "3303:108:5",
												"trueBody": {
													"id": 882,
													"nodeType": "Block",
													"src": "3338:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 878,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1035",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1035",
																					"typeString": "library Address"
																				}
																			],
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 876,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 875,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "3359:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 881,
															"nodeType": "RevertStatement",
															"src": "3352:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													885,
													887
												],
												"declarations": [
													{
														"constant": false,
														"id": 885,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "3421:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 884,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 887,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "3435:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 886,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 894,
												"initialValue": {
													"arguments": [
														{
															"id": 892,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "3488:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 888,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "3462:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 890,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "3481:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 896,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "3537:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "3545:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 898,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "3554:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 895,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "3510:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 867,
												"id": 900,
												"nodeType": "Return",
												"src": "3503:62:5"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3211:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3227:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 860,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3246:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:5"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3279:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 865,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:5"
									},
									"scope": 1035,
									"src": "3180:392:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "3811:154:5",
										"statements": [
											{
												"assignments": [
													913,
													915
												],
												"declarations": [
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 927,
														"src": "3822:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 912,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 915,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 927,
														"src": "3836:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 914,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"arguments": [
														{
															"id": 918,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "3881:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 916,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "3863:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "3930:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "3938:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 924,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "3947:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 921,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "3903:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 911,
												"id": 926,
												"nodeType": "Return",
												"src": "3896:62:5"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "3739:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "3755:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 906,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:5"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "3797:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 909,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:5"
									},
									"scope": 1035,
									"src": "3711:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "4203:156:5",
										"statements": [
											{
												"assignments": [
													939,
													941
												],
												"declarations": [
													{
														"constant": false,
														"id": 939,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 953,
														"src": "4214:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 938,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 941,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 953,
														"src": "4228:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 940,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"initialValue": {
													"arguments": [
														{
															"id": 944,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "4275:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 942,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "4255:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 948,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "4324:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "4332:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 950,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "4341:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 947,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "4297:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 937,
												"id": 952,
												"nodeType": "Return",
												"src": "4290:62:5"
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "4136:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "4152:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 932,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:5"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "4189:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 935,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:5"
									},
									"scope": 1035,
									"src": "4106:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "4783:424:5",
										"statements": [
											{
												"condition": {
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:5",
													"subExpression": {
														"id": 966,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "4798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 991,
													"nodeType": "Block",
													"src": "4857:344:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 973,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "5045:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 977,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 957,
																				"src": "5071:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 988,
															"nodeType": "IfStatement",
															"src": "5041:119:5",
															"trueBody": {
																"id": 987,
																"nodeType": "Block",
																"src": "5096:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 984,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 957,
																					"src": "5138:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 983,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 795,
																				"src": "5121:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 986,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 989,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "5180:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 965,
															"id": 990,
															"nodeType": "Return",
															"src": "5173:17:5"
														}
													]
												},
												"id": 992,
												"nodeType": "IfStatement",
												"src": "4793:408:5",
												"trueBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "4807:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 969,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "4829:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 968,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "4821:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 971,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "4670:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "4694:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "4716:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 960,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:5"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "4769:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:5"
									},
									"scope": 1035,
									"src": "4625:582:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "5509:122:5",
										"statements": [
											{
												"condition": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:5",
													"subExpression": {
														"id": 1004,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "5524:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1013,
													"nodeType": "Block",
													"src": "5583:42:5",
													"statements": [
														{
															"expression": {
																"id": 1011,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "5604:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1003,
															"id": 1012,
															"nodeType": "Return",
															"src": "5597:17:5"
														}
													]
												},
												"id": 1014,
												"nodeType": "IfStatement",
												"src": "5519:106:5",
												"trueBody": {
													"id": 1010,
													"nodeType": "Block",
													"src": "5533:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1007,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "5555:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1006,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "5547:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1009,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:5",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "5433:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 996,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "5447:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 998,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:5"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "5495:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1001,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:5"
									},
									"scope": 1035,
									"src": "5407:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "5798:461:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1022,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "5874:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1031,
													"nodeType": "Block",
													"src": "6204:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1028,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "6225:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1030,
															"nodeType": "RevertStatement",
															"src": "6218:24:5"
														}
													]
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "5870:383:5",
												"trueBody": {
													"id": 1027,
													"nodeType": "Block",
													"src": "5897:301:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:5",
																"nodeType": "YulBlock",
																"src": "6055:133:5",
																"statements": [
																	{
																		"nativeSrc": "6073:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:5"
																			},
																			"nativeSrc": "6096:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:5",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:5",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:5"
																					},
																					"nativeSrc": "6137:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:5"
																			},
																			"nativeSrc": "6130:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:5"
																		},
																		"nativeSrc": "6130:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1019,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 1019,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:5",
																	"valueSize": 1
																}
															],
															"id": 1026,
															"nodeType": "InlineAssembly",
															"src": "6046:142:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:5",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "5760:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1018,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:5"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:5"
									},
									"scope": 1035,
									"src": "5743:516:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1036,
							"src": "195:6066:5",
							"usedErrors": [
								790,
								795,
								798
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1065
						]
					},
					"id": 1066,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1037,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1038,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1065,
							"linearizedBaseContracts": [
								1065
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1043,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1042,
												"id": 1045,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1065,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1052,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1051,
												"id": 1054,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1049,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1065,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1060,
												"id": 1062,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1065,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1066,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1134
						]
					},
					"id": 1135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1067,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1068,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:7",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1134,
							"linearizedBaseContracts": [
								1134
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1071,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1134,
									"src": "1674:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1069,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1070,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1074,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1134,
									"src": "1720:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1072,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1073,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1076,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1134,
									"src": "1763:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1075,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:7",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 1079,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:7"
									},
									"src": "1850:37:7"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "1907:38:7",
										"statements": [
											{
												"expression": {
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1082,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "1917:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1083,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "1927:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:7"
											}
										]
									},
									"id": 1087,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:7"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:7"
									},
									"scope": 1134,
									"src": "1893:52:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "2346:79:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1090,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "2356:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:7"
											},
											{
												"id": 1093,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1094,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "2398:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:7"
											}
										]
									},
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:7",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1098,
									"name": "nonReentrant",
									"nameLocation": "2331:12:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:7"
									},
									"src": "2322:103:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "2470:268:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1101,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "2558:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1102,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "2569:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1108,
												"nodeType": "IfStatement",
												"src": "2554:86:7",
												"trueBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "2578:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1104,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "2599:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1106,
															"nodeType": "RevertStatement",
															"src": "2592:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1109,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "2714:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1110,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "2724:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:7"
											}
										]
									},
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:7"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:7"
									},
									"scope": 1134,
									"src": "2431:307:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "2782:170:7",
										"statements": [
											{
												"expression": {
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1117,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "2924:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1118,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "2934:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:7"
											}
										]
									},
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:7"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:7"
									},
									"scope": 1134,
									"src": "2744:208:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "3195:42:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1128,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "3212:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1129,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "3223:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1127,
												"id": 1131,
												"nodeType": "Return",
												"src": "3205:25:7"
											}
										]
									},
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:7",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:7"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "3189:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1125,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:7"
									},
									"scope": 1134,
									"src": "3131:106:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1135,
							"src": "886:2353:7",
							"usedErrors": [
								1079
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1158
						],
						"IERC165": [
							1170
						]
					},
					"id": 1159,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 1171,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1137,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1170,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1140,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1170,
										"src": "687:7:8"
									},
									"id": 1141,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1139,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1158,
							"linearizedBaseContracts": [
								1158,
								1170
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1169
									],
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1149,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1151,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1170_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1170_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1150,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1170",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1155,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1158,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1159,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1170
						]
					},
					"id": 1171,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1160,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1161,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1170,
							"linearizedBaseContracts": [
								1170
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1163,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1170,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1171,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"contracts/token/TokenTransfer.sol": {
				"ast": {
					"absolutePath": "contracts/token/TokenTransfer.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Address": [
							1035
						],
						"Context": [
							1065
						],
						"ERC165": [
							1158
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							456
						],
						"IERC20Permit": [
							492
						],
						"ReentrancyGuard": [
							1134
						],
						"SafeERC20": [
							782
						],
						"TokenTransfer": [
							1606
						]
					},
					"id": 1607,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1172,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 457,
							"src": "58:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 783,
							"src": "115:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1175,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 1135,
							"src": "181:59:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 296,
							"src": "241:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1607,
							"sourceUnit": 1036,
							"src": "300:51:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1179,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"491:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1134,
										"src": "491:15:10"
									},
									"id": 1180,
									"nodeType": "InheritanceSpecifier",
									"src": "491:15:10"
								},
								{
									"baseName": {
										"id": 1181,
										"name": "AccessControl",
										"nameLocations": [
											"508:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "508:13:10"
									},
									"id": 1182,
									"nodeType": "InheritanceSpecifier",
									"src": "508:13:10"
								}
							],
							"canonicalName": "TokenTransfer",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1178,
								"nodeType": "StructuredDocumentation",
								"src": "353:111:10",
								"text": " @title TokenTransfer\n @dev A contract for handling token transfers within the Cipher Zero Protocol"
							},
							"fullyImplemented": true,
							"id": 1606,
							"linearizedBaseContracts": [
								1606,
								295,
								1158,
								1170,
								378,
								1065,
								1134
							],
							"name": "TokenTransfer",
							"nameLocation": "474:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1186,
									"libraryName": {
										"id": 1183,
										"name": "SafeERC20",
										"nameLocations": [
											"534:9:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 782,
										"src": "534:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "528:27:10",
									"typeName": {
										"id": 1185,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1184,
											"name": "IERC20",
											"nameLocations": [
												"548:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 456,
											"src": "548:6:10"
										},
										"referencedDeclaration": 456,
										"src": "548:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$456",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 1189,
									"libraryName": {
										"id": 1187,
										"name": "Address",
										"nameLocations": [
											"566:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1035,
										"src": "566:7:10"
									},
									"nodeType": "UsingForDirective",
									"src": "560:34:10",
									"typeName": {
										"id": 1188,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "578:15:10",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "68a37ae8",
									"id": 1194,
									"mutability": "constant",
									"name": "TRANSFER_ADMIN_ROLE",
									"nameLocation": "624:19:10",
									"nodeType": "VariableDeclaration",
									"scope": 1606,
									"src": "600:78:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1190,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "600:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5452414e534645525f41444d494e5f524f4c45",
												"id": 1192,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "656:21:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c",
													"typeString": "literal_string \"TRANSFER_ADMIN_ROLE\""
												},
												"value": "TRANSFER_ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c",
													"typeString": "literal_string \"TRANSFER_ADMIN_ROLE\""
												}
											],
											"id": 1191,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "646:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1193,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "646:32:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "68c4ac26",
									"id": 1198,
									"mutability": "mutable",
									"name": "supportedTokens",
									"nameLocation": "775:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 1606,
									"src": "743:47:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1197,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1195,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "751:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "743:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1196,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "762:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1206,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "953:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1606,
									"src": "877:87:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
										"typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
									},
									"typeName": {
										"id": 1205,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1199,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "885:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "877:67:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
											"typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1204,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1200,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "904:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "896:47:10",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1203,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "915:27:10",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "9af266b6ca4909f988dc948fb50ad15153abbe525351881bad4fa858be96515c",
									"id": 1216,
									"name": "TokenTransferred",
									"nameLocation": "991:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1024:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "1008:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1046:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "1030:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1066:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "1050:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1050:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1081:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "1073:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1007:81:10"
									},
									"src": "985:104:10"
								},
								{
									"anonymous": false,
									"eventSelector": "6f48f5cfe672b48c8d014ecf4ecb7cdd8a66519dc4e331f0c7e95f1f2183a810",
									"id": 1228,
									"name": "BatchTransferred",
									"nameLocation": "1100:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1133:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1117:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1149:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1139:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1219,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1139:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1220,
													"nodeType": "ArrayTypeName",
													"src": "1139:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1169:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1153:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"indexed": false,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "1186:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1176:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1224,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1176:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1225,
													"nodeType": "ArrayTypeName",
													"src": "1176:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1116:78:10"
									},
									"src": "1094:101:10"
								},
								{
									"anonymous": false,
									"eventSelector": "8a35f50fa7149c607bf92648069a0d9593c88f1e12f1abd0a0481a4a959b0681",
									"id": 1238,
									"name": "AllowanceSet",
									"nameLocation": "1206:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1219:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1258:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1242:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1283:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1267:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1298:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1290:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:87:10"
									},
									"src": "1200:106:10"
								},
								{
									"anonymous": false,
									"eventSelector": "784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4",
									"id": 1242,
									"name": "TokenAdded",
									"nameLocation": "1317:10:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1344:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "1328:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1327:23:10"
									},
									"src": "1311:40:10"
								},
								{
									"anonymous": false,
									"eventSelector": "4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3",
									"id": 1246,
									"name": "TokenRemoved",
									"nameLocation": "1362:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1391:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "1375:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1375:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1374:23:10"
									},
									"src": "1356:42:10"
								},
								{
									"errorSelector": "bf16aab6",
									"id": 1250,
									"name": "UnsupportedToken",
									"nameLocation": "1431:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1456:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "1448:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1448:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1447:15:10"
									},
									"src": "1425:38:10"
								},
								{
									"errorSelector": "51750bc7",
									"id": 1262,
									"name": "InsufficientAllowance",
									"nameLocation": "1474:21:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1504:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "1496:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "1511:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1536:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "1528:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "requested",
												"nameLocation": "1551:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "1543:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "available",
												"nameLocation": "1570:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "1562:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:85:10"
									},
									"src": "1468:113:10"
								},
								{
									"errorSelector": "90b8ec18",
									"id": 1264,
									"name": "TransferFailed",
									"nameLocation": "1592:14:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1606:2:10"
									},
									"src": "1586:23:10"
								},
								{
									"errorSelector": "a9854bc9",
									"id": 1266,
									"name": "InvalidArrayLengths",
									"nameLocation": "1620:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1639:2:10"
									},
									"src": "1614:28:10"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "1662:112:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1270,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1683:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1271,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1703:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1707:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1703:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1269,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1672:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1672:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "1672:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1276,
															"name": "TRANSFER_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "1735:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1277,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1756:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1756:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1275,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1724:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1724:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "1724:43:10"
											}
										]
									},
									"id": 1282,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:2:10"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1662:0:10"
									},
									"scope": 1606,
									"src": "1648:126:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "2076:62:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1295,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2101:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2105:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2101:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1297,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "2113:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1298,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "2117:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1299,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "2124:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1294,
														"name": "_transferToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "2086:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2086:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "2086:45:10"
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "1780:203:10",
										"text": " @dev Transfers tokens from the sender to a recipient\n @param to Recipient address\n @param token Address of the ERC20 token\n @param amount Amount of tokens to transfer"
									},
									"functionSelector": "f5537ede",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1292,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1291,
												"name": "nonReentrant",
												"nameLocations": [
													"2063:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1098,
												"src": "2063:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2063:12:10"
										}
									],
									"name": "transferToken",
									"nameLocation": "1997:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2019:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2011:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2031:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2023:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2046:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "2038:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2038:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2010:43:10"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:0:10"
									},
									"scope": 1606,
									"src": "1988:150:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "2512:381:10",
										"statements": [
											{
												"assignments": [
													1318
												],
												"declarations": [
													{
														"constant": false,
														"id": 1318,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "2530:16:10",
														"nodeType": "VariableDeclaration",
														"scope": 1363,
														"src": "2522:24:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2522:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1327,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1319,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "2549:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
																	"typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
																}
															},
															"id": 1321,
															"indexExpression": {
																"id": 1320,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1306,
																"src": "2561:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2549:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1323,
														"indexExpression": {
															"id": 1322,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "2567:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2549:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1326,
													"indexExpression": {
														"expression": {
															"id": 1324,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2574:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2578:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2574:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2549:36:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2522:63:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1328,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "2599:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1329,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1312,
														"src": "2618:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2599:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1341,
												"nodeType": "IfStatement",
												"src": "2595:135:10",
												"trueBody": {
													"id": 1340,
													"nodeType": "Block",
													"src": "2626:104:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1332,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1306,
																		"src": "2669:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1333,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2675:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2679:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2675:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1335,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "2687:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1336,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1312,
																		"src": "2694:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1337,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1318,
																		"src": "2702:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1331,
																	"name": "InsufficientAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "2647:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,address,address,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2647:72:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1339,
															"nodeType": "RevertStatement",
															"src": "2640:79:10"
														}
													]
												}
											},
											{
												"id": 1355,
												"nodeType": "UncheckedBlock",
												"src": "2739:99:10",
												"statements": [
													{
														"expression": {
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1342,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1206,
																			"src": "2763:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
																				"typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
																			}
																		},
																		"id": 1347,
																		"indexExpression": {
																			"id": 1343,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1306,
																			"src": "2775:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2763:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1348,
																	"indexExpression": {
																		"id": 1344,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "2781:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2763:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1349,
																"indexExpression": {
																	"expression": {
																		"id": 1345,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2788:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2792:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2788:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "2763:36:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1350,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "2802:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1351,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1312,
																	"src": "2821:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2802:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2763:64:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1354,
														"nodeType": "ExpressionStatement",
														"src": "2763:64:10"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1357,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "2862:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1358,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "2868:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1359,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "2872:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1360,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "2879:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1356,
														"name": "_transferToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1605,
														"src": "2847:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2847:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1362,
												"nodeType": "ExpressionStatement",
												"src": "2847:39:10"
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "2144:257:10",
										"text": " @dev Transfers tokens from one address to another, respecting allowances\n @param from Sender address\n @param to Recipient address\n @param token Address of the ERC20 token\n @param amount Amount of tokens to transfer"
									},
									"functionSelector": "e5994905",
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1315,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1314,
												"name": "nonReentrant",
												"nameLocations": [
													"2499:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1098,
												"src": "2499:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2499:12:10"
										}
									],
									"name": "transferTokenFrom",
									"nameLocation": "2415:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2441:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "2433:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2433:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2455:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "2447:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2447:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2467:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "2459:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2459:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2482:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "2474:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2432:57:10"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:10"
									},
									"scope": 1606,
									"src": "2406:487:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1458,
										"nodeType": "Block",
										"src": "3218:499:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1378,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "3232:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3235:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3232:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1380,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "3245:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3253:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3245:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3232:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1386,
												"nodeType": "IfStatement",
												"src": "3228:61:10",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1383,
															"name": "InvalidArrayLengths",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "3268:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3268:21:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1385,
													"nodeType": "RevertStatement",
													"src": "3261:28:10"
												}
											},
											{
												"assignments": [
													1388
												],
												"declarations": [
													{
														"constant": false,
														"id": 1388,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "3316:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1458,
														"src": "3308:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1387,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3308:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"hexValue": "30",
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3330:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3308:23:10"
											},
											{
												"body": {
													"id": 1408,
													"nodeType": "Block",
													"src": "3386:50:10",
													"statements": [
														{
															"expression": {
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1402,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "3400:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1403,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1373,
																		"src": "3415:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1405,
																	"indexExpression": {
																		"id": 1404,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1392,
																		"src": "3423:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3415:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3400:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1407,
															"nodeType": "ExpressionStatement",
															"src": "3400:25:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1395,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "3361:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1396,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "3365:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3373:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3365:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3361:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1409,
												"initializationExpression": {
													"assignments": [
														1392
													],
													"declarations": [
														{
															"constant": false,
															"id": 1392,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3354:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1409,
															"src": "3346:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1391,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3346:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1394,
													"initialValue": {
														"hexValue": "30",
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3358:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3346:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3381:3:10",
														"subExpression": {
															"id": 1399,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "3381:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1401,
													"nodeType": "ExpressionStatement",
													"src": "3381:3:10"
												},
												"nodeType": "ForStatement",
												"src": "3341:95:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1414,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3477:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3481:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3477:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1418,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3497:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenTransfer_$1606",
																		"typeString": "contract TokenTransfer"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenTransfer_$1606",
																		"typeString": "contract TokenTransfer"
																	}
																],
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3489:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1416,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3489:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3489:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1420,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "3504:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1411,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "3453:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1410,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "3446:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3446:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$456",
																"typeString": "contract IERC20"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3460:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 569,
														"src": "3446:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$456_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3446:70:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1422,
												"nodeType": "ExpressionStatement",
												"src": "3446:70:10"
											},
											{
												"body": {
													"id": 1448,
													"nodeType": "Block",
													"src": "3567:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1437,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3604:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenTransfer_$1606",
																					"typeString": "contract TokenTransfer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenTransfer_$1606",
																					"typeString": "contract TokenTransfer"
																				}
																			],
																			"id": 1436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3596:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1435,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3596:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3596:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1439,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "3611:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1441,
																		"indexExpression": {
																			"id": 1440,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1424,
																			"src": "3614:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3611:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1370,
																		"src": "3618:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1443,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1373,
																			"src": "3625:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1445,
																		"indexExpression": {
																			"id": 1444,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1424,
																			"src": "3633:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3625:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1434,
																	"name": "_transferToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "3581:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3581:55:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1447,
															"nodeType": "ExpressionStatement",
															"src": "3581:55:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1427,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "3547:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1428,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "3551:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3554:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3551:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3547:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1449,
												"initializationExpression": {
													"assignments": [
														1424
													],
													"declarations": [
														{
															"constant": false,
															"id": 1424,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3540:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1449,
															"src": "3532:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1423,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3532:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1426,
													"initialValue": {
														"hexValue": "30",
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3544:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3532:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3562:3:10",
														"subExpression": {
															"id": 1431,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "3562:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1433,
													"nodeType": "ExpressionStatement",
													"src": "3562:3:10"
												},
												"nodeType": "ForStatement",
												"src": "3527:120:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1451,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3679:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3683:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3679:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "3691:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														{
															"id": 1454,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "3695:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1455,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "3702:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 1450,
														"name": "BatchTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "3662:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address[] memory,address,uint256[] memory)"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3662:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1457,
												"nodeType": "EmitStatement",
												"src": "3657:53:10"
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "2899:198:10",
										"text": " @dev Performs batch token transfers\n @param to Array of recipient addresses\n @param token Address of the ERC20 token\n @param amounts Array of amounts to transfer"
									},
									"functionSelector": "cdb33b81",
									"id": 1459,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1376,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1375,
												"name": "nonReentrant",
												"nameLocations": [
													"3205:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1098,
												"src": "3205:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3205:12:10"
										}
									],
									"name": "batchTransferToken",
									"nameLocation": "3111:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3149:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "3130:21:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1366,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3130:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1367,
													"nodeType": "ArrayTypeName",
													"src": "3130:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3161:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "3153:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3153:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3187:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "3168:26:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1371,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3168:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1372,
													"nodeType": "ArrayTypeName",
													"src": "3168:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3129:66:10"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3218:0:10"
									},
									"scope": 1606,
									"src": "3102:615:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "4057:128:10",
										"statements": [
											{
												"expression": {
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1469,
																	"name": "_allowances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "4067:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
																		"typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
																	}
																},
																"id": 1474,
																"indexExpression": {
																	"expression": {
																		"id": 1470,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4079:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4083:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4079:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4067:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1475,
															"indexExpression": {
																"id": 1472,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "4091:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4067:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1476,
														"indexExpression": {
															"id": 1473,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "4098:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4067:39:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1477,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "4109:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4067:48:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "4067:48:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1481,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4143:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4147:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4143:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1483,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "4155:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1484,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "4164:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1485,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "4171:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1480,
														"name": "AllowanceSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "4130:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4130:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "EmitStatement",
												"src": "4125:53:10"
											}
										]
									},
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "3723:250:10",
										"text": " @dev Sets allowance for a spender to transfer tokens on behalf of the owner\n @param spender Address allowed to spend tokens\n @param token Address of the ERC20 token\n @param amount Amount of tokens allowed to spend"
									},
									"functionSelector": "da46098c",
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setAllowance",
									"nameLocation": "3987:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4008:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "4000:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4000:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4025:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "4017:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4040:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "4032:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3999:48:10"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4057:0:10"
									},
									"scope": 1606,
									"src": "3978:207:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1509,
										"nodeType": "Block",
										"src": "4541:58:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1501,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "4558:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$_$",
																	"typeString": "mapping(address => mapping(address => mapping(address => uint256)))"
																}
															},
															"id": 1503,
															"indexExpression": {
																"id": 1502,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "4570:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4558:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1505,
														"indexExpression": {
															"id": 1504,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "4577:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4558:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1507,
													"indexExpression": {
														"id": 1506,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "4584:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4558:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1500,
												"id": 1508,
												"nodeType": "Return",
												"src": "4551:41:10"
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "4191:247:10",
										"text": " @dev Returns the remaining allowance for a spender\n @param owner Address of the token owner\n @param spender Address of the spender\n @param token Address of the ERC20 token\n @return The remaining allowance"
									},
									"functionSelector": "927da105",
									"id": 1510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4452:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4470:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "4462:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4462:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4485:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "4477:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4477:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4502:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "4494:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4494:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4461:47:10"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1510,
												"src": "4532:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4532:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4531:9:10"
									},
									"scope": 1606,
									"src": "4443:156:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1529,
										"nodeType": "Block",
										"src": "4812:78:10",
										"statements": [
											{
												"expression": {
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1519,
															"name": "supportedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "4822:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1521,
														"indexExpression": {
															"id": 1520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "4838:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4822:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4847:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4822:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "4822:29:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1526,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "4877:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1525,
														"name": "TokenAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "4866:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4866:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1528,
												"nodeType": "EmitStatement",
												"src": "4861:22:10"
											}
										]
									},
									"documentation": {
										"id": 1511,
										"nodeType": "StructuredDocumentation",
										"src": "4605:121:10",
										"text": " @dev Adds a supported token (only TRANSFER_ADMIN_ROLE)\n @param token Address of the token to add"
									},
									"functionSelector": "6d69fcaf",
									"id": 1530,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1516,
													"name": "TRANSFER_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1194,
													"src": "4791:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1517,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1515,
												"name": "onlyRole",
												"nameLocations": [
													"4782:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4782:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4782:29:10"
										}
									],
									"name": "addSupportedToken",
									"nameLocation": "4740:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4766:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "4758:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4758:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4757:15:10"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4812:0:10"
									},
									"scope": 1606,
									"src": "4731:159:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1549,
										"nodeType": "Block",
										"src": "5112:81:10",
										"statements": [
											{
												"expression": {
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1539,
															"name": "supportedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "5122:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1541,
														"indexExpression": {
															"id": 1540,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "5138:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5122:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5147:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5122:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "5122:30:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1546,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "5180:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1545,
														"name": "TokenRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "5167:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5167:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1548,
												"nodeType": "EmitStatement",
												"src": "5162:24:10"
											}
										]
									},
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "4896:127:10",
										"text": " @dev Removes a supported token (only TRANSFER_ADMIN_ROLE)\n @param token Address of the token to remove"
									},
									"functionSelector": "76319190",
									"id": 1550,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1536,
													"name": "TRANSFER_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1194,
													"src": "5091:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1537,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1535,
												"name": "onlyRole",
												"nameLocations": [
													"5082:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5082:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5082:29:10"
										}
									],
									"name": "removeSupportedToken",
									"nameLocation": "5037:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5066:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "5058:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5058:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5057:15:10"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5112:0:10"
									},
									"scope": 1606,
									"src": "5028:165:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "5526:312:10",
										"statements": [
											{
												"condition": {
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5540:23:10",
													"subExpression": {
														"baseExpression": {
															"id": 1562,
															"name": "supportedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "5541:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1564,
														"indexExpression": {
															"id": 1563,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "5557:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5541:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1570,
												"nodeType": "IfStatement",
												"src": "5536:59:10",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1567,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "5589:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1566,
															"name": "UnsupportedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "5572:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5572:23:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1569,
													"nodeType": "RevertStatement",
													"src": "5565:30:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1571,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "5610:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 1574,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5626:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TokenTransfer_$1606",
																	"typeString": "contract TokenTransfer"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TokenTransfer_$1606",
																	"typeString": "contract TokenTransfer"
																}
															],
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5618:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1572,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5618:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5618:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5610:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1595,
													"nodeType": "Block",
													"src": "5702:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1590,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1553,
																		"src": "5747:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1591,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1555,
																		"src": "5753:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1592,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1559,
																		"src": "5757:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1587,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "5723:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1586,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "5716:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5716:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$456",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5730:16:10",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 569,
																	"src": "5716:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$456_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5716:48:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1594,
															"nodeType": "ExpressionStatement",
															"src": "5716:48:10"
														}
													]
												},
												"id": 1596,
												"nodeType": "IfStatement",
												"src": "5606:169:10",
												"trueBody": {
													"id": 1585,
													"nodeType": "Block",
													"src": "5633:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1581,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1555,
																		"src": "5674:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1582,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1559,
																		"src": "5678:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1578,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "5654:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1577,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 456,
																			"src": "5647:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$456_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5647:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$456",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5661:12:10",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 542,
																	"src": "5647:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$456_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$456_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5647:38:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1584,
															"nodeType": "ExpressionStatement",
															"src": "5647:38:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1598,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "5807:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1599,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "5813:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1600,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "5817:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1601,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "5824:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1597,
														"name": "TokenTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "5790:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5790:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1603,
												"nodeType": "EmitStatement",
												"src": "5785:46:10"
											}
										]
									},
									"documentation": {
										"id": 1551,
										"nodeType": "StructuredDocumentation",
										"src": "5199:233:10",
										"text": " @dev Internal function to handle token transfers\n @param from Sender address\n @param to Recipient address\n @param token Address of the ERC20 token\n @param amount Amount of tokens to transfer"
									},
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferToken",
									"nameLocation": "5446:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5469:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "5461:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5461:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5483:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "5475:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5475:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5495:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "5487:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5487:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5510:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "5502:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5502:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5460:57:10"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5526:0:10"
									},
									"scope": 1606,
									"src": "5437:401:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1607,
							"src": "465:5375:10",
							"usedErrors": [
								305,
								308,
								509,
								790,
								795,
								798,
								1079,
								1250,
								1262,
								1264,
								1266
							],
							"usedEvents": [
								317,
								326,
								335,
								1216,
								1228,
								1238,
								1242,
								1246
							]
						}
					],
					"src": "32:5808:10"
				},
				"id": 10
			}
		}
	}
}